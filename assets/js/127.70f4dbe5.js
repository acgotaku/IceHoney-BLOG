(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{434:function(a,e,s){"use strict";s.r(e);var n=s(10),r=Object(n.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("WebAssembly 是一种新的编译目标，可以将 C/C++ 等语言编译成 WebAssembly，然后在浏览器中运行。我最近在研究如何把"),s("a",{attrs:{href:"https://github.com/mchehab/zbar",target:"_blank",rel:"noopener noreferrer"}},[a._v("zbar"),s("OutboundLink")],1),a._v("编译成 WebAssembly，然后在浏览器中使用。第一步就是想把官方的例子编译成二进制测试下代码，但是在 MacOS 下编译的时候遇到了一些问题，这里记录下。")]),a._v(" "),s("h2",{attrs:{id:"官方例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#官方例子"}},[a._v("#")]),a._v(" 官方例子")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/mchehab/zbar/blob/master/examples/scan_image.cpp",target:"_blank",rel:"noopener noreferrer"}},[a._v("scan_image.cpp"),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("官方提供了一个例子，可以用来测试二维码识别功能，这个例子有两个依赖 Magick++.h 和 zbar.h，这两个库都可以通过 brew 安装。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("brew "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" imagemagick\nbrew "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" zbar\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("因为从源码编译对我来说实在是太复杂了，所以我就选择了直接安装相关依赖。")]),a._v(" "),s("h2",{attrs:{id:"编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[a._v("#")]),a._v(" 编译")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("g++ -o scan_image scan_image.cpp\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("执行上面的命令，会报错：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("scan_image.cpp:1:10: fatal error: 'Magick++.h' file not found\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("这是因为 Magick++.h 的头文件在 "),s("code",[a._v("/opt/homebrew/include/ImageMagick-7/Magick++.h")]),a._v("，但是 g++ 默认只会在 "),s("code",[a._v("/opt/homebrew/include")]),a._v(" 目录下查找头文件，所以我们需要指定头文件的路径。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("g++ -o scan_image scan_image.cpp -I/opt/homebrew/include/ImageMagick-7\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("执行上面的命令还是会有报错：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('/opt/homebrew/include/ImageMagick-7/MagickCore/magick-config.h:63:3: warning: "you should set MAGICKCORE_QUANTUM_DEPTH to sensible default set it to configure time default" [-W#warnings]\n# warning "you should set MAGICKCORE_QUANTUM_DEPTH to sensible default set it to configure time default"\n  ^\n/opt/homebrew/include/ImageMagick-7/MagickCore/magick-config.h:64:3: warning: "this is an obsolete behavior please fix your makefile" [-W#warnings]\n# warning "this is an obsolete behavior please fix your makefile"\n  ^\n/opt/homebrew/include/ImageMagick-7/MagickCore/magick-config.h:86:3: error: "you should set MAGICKCORE_HDRI_ENABLE"\n# error "you should set MAGICKCORE_HDRI_ENABLE"\n  ^\n/opt/homebrew/include/ImageMagick-7/MagickCore/magick-config.h:121:3: error: "you should set MAGICKCORE_HDRI_ENABLE"\n# error "you should set MAGICKCORE_HDRI_ENABLE"\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("p",[a._v("我们需要设置两个 ImageMagick 需要的编译变量：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("g++ -o scan_image scan_image.cpp -I/opt/homebrew/include/ImageMagick-7 -DMAGICKCORE_QUANTUM_DEPTH"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(" -DMAGICKCORE_HDRI_ENABLE"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("设置了这两个变量之后，还是会报错：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('Undefined symbols for architecture arm64:\n  "Magick::Blob::Blob()", referenced from:\n      _main in scan_image-727bdc.o\n  "_zbar_get_symbol_name", referenced from:\n      zbar::Symbol::get_type_name() const in scan_image-727bdc.o\nld: symbol(s) not found for architecture arm64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("这是因为我们只引用了头文件，却没有引用相关库的实现。我们需要指定 ImageMagick 的库文件路径，这里我使用的是 brew 安装的 ImageMagick，所以库文件在 "),s("code",[a._v("/opt/homebrew/lib/ImageMagick")]),a._v(" 目录下。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("g++ -o scan_image scan_image.cpp -I/opt/homebrew/include/ImageMagick-7 -L/opt/homebrew/lib/ImageMagick -DMAGICKCORE_QUANTUM_DEPTH"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("16")]),a._v(" -DMAGICKCORE_HDRI_ENABLE"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" -lMagick++-7.Q16HDRI -lzbar\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("同时我们需要使用 -l 参数来指定需要链接的库，这里需要链接 Magick++-7.Q16HDRI 和 zbar。")]),a._v(" "),s("h2",{attrs:{id:"cmake"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cmake"}},[a._v("#")]),a._v(" CMake")]),a._v(" "),s("p",[a._v("上面的编译命令比较长，而且如果我们需要编译多个文件的时候，就需要写很多次，所以我们可以使用 CMake 来简化编译过程。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('cmake_minimum_required(VERSION 3.10)\nproject(ScanImage)\n\n\nset(CMAKE_CXX_STANDARD 11)\nset(CMAKE_CXX_FLAGS "-DMAGICKCORE_HDRI_ENABLE=1 -DMAGICKCORE_QUANTUM_DEPTH=16")\n\ninclude_directories(/opt/homebrew/include/ImageMagick-7)\nlink_directories(/opt/homebrew/lib/ImageMagick)\n\nadd_executable(ScanImage scan_image.cpp)\ntarget_link_libraries(ScanImage zbar Magick++-7.Q16HDRI)\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("C++ 的编译报错总是让人摸不着头脑，这里我只是简单的记录了下我遇到的问题和解决方案，希望能帮助到大家。")]),a._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://stackoverflow.com/questions/17887265/how-to-include-third-party-libraries",target:"_blank",rel:"noopener noreferrer"}},[a._v("how to #include third party libraries"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/undecaf/zbar-wasm",target:"_blank",rel:"noopener noreferrer"}},[a._v("zbar-wasm"),s("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);