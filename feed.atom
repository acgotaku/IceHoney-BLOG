<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.icehoney.me/</id>
    <title>IceHoney</title>
    <updated>2024-03-13T13:00:27.393Z</updated>
    <generator>https://github.com/webmasterish/vuepress-plugin-feed</generator>
    <link rel="alternate" href="https://blog.icehoney.me/"/>
    <link rel="self" href="https://blog.icehoney.me/feed.atom"/>
    <subtitle>IceHoney是雪月秋水君的博客~ 记录秋水君生活的点点滴滴~</subtitle>
    <entry>
        <title type="html"><![CDATA[Archlinux下安装过wps之后字体发虚的问题]]></title>
        <id>https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/</id>
        <link href="https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/">
        </link>
        <updated>2013-07-04T12:39:00.000Z</updated>
        <summary type="html"><![CDATA[Office 是 Linux 永远的痛...微软的 Office 市场霸主地位是根本无法撼动的... 但是微软那家伙很讨厌 Linux 和开源... Office 产品目前也只有 Windows 和 Mac 据说微软要出 Linux 版本的 Office...但是不知道猴年马月啊 (望天]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于微云下载的那点事]]></title>
        <id>https://blog.icehoney.me/posts/2013-04-28-about-weiyun/</id>
        <link href="https://blog.icehoney.me/posts/2013-04-28-about-weiyun/">
        </link>
        <updated>2013-04-28T21:31:00.000Z</updated>
        <summary type="html"><![CDATA[在这个页面载入的时候可以很清楚的看到网页对这个网址进行 POST 请求,提交的表单是个 json 对象]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端的缓存策略]]></title>
        <id>https://blog.icehoney.me/posts/2024-03-13-cache-control/</id>
        <link href="https://blog.icehoney.me/posts/2024-03-13-cache-control/">
        </link>
        <updated>2024-03-13T21:58:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[macOS下运行红警2游戏]]></title>
        <id>https://blog.icehoney.me/posts/2023-12-17-macos-ra2/</id>
        <link href="https://blog.icehoney.me/posts/2023-12-17-macos-ra2/">
        </link>
        <updated>2023-12-17T11:20:00.000Z</updated>
        <summary type="html"><![CDATA[Linux 用户有钱就换 Mac，我也日常使用 Mac 电脑了。但是对于童年回忆的红警 2 游戏，我还是想在 Mac 上玩一玩。这里记录一下在 Mac 上运行红警 2 游戏的过程。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[嵌套表格如何实现边框合并]]></title>
        <id>https://blog.icehoney.me/posts/2023-12-03-css-nested-table/</id>
        <link href="https://blog.icehoney.me/posts/2023-12-03-css-nested-table/">
        </link>
        <updated>2023-12-03T10:20:00.000Z</updated>
        <summary type="html"><![CDATA[}
td,
th {
  border: 1px solid black;
  padding: 10px 20px;
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[macOS下苹果手机刷机]]></title>
        <id>https://blog.icehoney.me/posts/2023-11-11-flash-ios/</id>
        <link href="https://blog.icehoney.me/posts/2023-11-11-flash-ios/">
        </link>
        <updated>2023-11-11T20:03:00.000Z</updated>
        <summary type="html"><![CDATA[MacOS 在版本 12 以上的系统中，已经不支持使用 iTunes 来管理手机了，所以我们需要使用 Finder 来管理手机。我们连接手机到 Mac 系统，这时候会弹出一个提示框，我们需要点击信任按钮。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[正则表达式匹配信用卡]]></title>
        <id>https://blog.icehoney.me/posts/2023-07-09-credit-regex/</id>
        <link href="https://blog.icehoney.me/posts/2023-07-09-credit-regex/">
        </link>
        <updated>2023-07-09T13:41:00.000Z</updated>
        <summary type="html"><![CDATA[const regex = new RegExp('^(5[1-5]\\d{0,2}|22[2-9]\\d{1}|2[3-7]\\d{2})\\d{12}');
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[macOS下编译C++文件]]></title>
        <id>https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/</id>
        <link href="https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/">
        </link>
        <updated>2023-10-09T12:10:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[安卓逆向的经验记录]]></title>
        <id>https://blog.icehoney.me/posts/2023-01-14-android-reverse/</id>
        <link href="https://blog.icehoney.me/posts/2023-01-14-android-reverse/">
        </link>
        <updated>2023-01-14T13:05:00.000Z</updated>
        <summary type="html"><![CDATA[为什么这么分析呢，因为服务器端需要进行解密，那必须要把需要的参数都告诉服务端才能把密文解密回明文。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[QR code 生成的相关参数]]></title>
        <id>https://blog.icehoney.me/posts/2023-03-03-qrcode-version/</id>
        <link href="https://blog.icehoney.me/posts/2023-03-03-qrcode-version/">
        </link>
        <updated>2023-03-03T20:42:00.000Z</updated>
        <summary type="html"><![CDATA[同时因为手动指定 version 也会因为 version 版本太低导致无法生成合法的二维码的情况。使用的时候需要注意。我本身有修改一个版本可以传入底层参数，可以看一下参考链接。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[拖拽排序列表]]></title>
        <id>https://blog.icehoney.me/posts/2023-04-16-draggable-list/</id>
        <link href="https://blog.icehoney.me/posts/2023-04-16-draggable-list/">
        </link>
        <updated>2023-04-16T12:31:00.000Z</updated>
        <summary type="html"><![CDATA[event.dataTransfer.effectAllowed = 'move';
    // set dataTransfer enable mobile drag
    event.dataTransfer.setData('text/plain', index.toString());
    dragItem.current = index;
    copyData.current = deepClone(sortedData);
    recordRect();
    onDragStart?.();
  },
  [sortedData, recordRect, onDragStart]
);
const dragEnterHandler = useCallback(
  (index: number) => {
    if (dragItem.current !== index && dragOverItem.current !== index) {
      dragOverItem.current = index;
      const newData = deepClone(copyData.current);
      const dragData = newData[dragItem.current];
      newData.splice(dragItem.current, 1);
      newData.splice(dragOverItem.current, 0, dragData);
      setSortedData(newData);
      onDragEnter?.();
    }
  },
  [onDragEnter]
);
const dragEndHandler = useCallback(() => {
  updateData?.(sortedData);
  onDragEnd?.();
}, [sortedData, updateData, onDragEnd]);
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[无限滚动加载列表]]></title>
        <id>https://blog.icehoney.me/posts/2023-06-03-scroll-loader/</id>
        <link href="https://blog.icehoney.me/posts/2023-06-03-scroll-loader/">
        </link>
        <updated>2023-06-03T12:55:00.000Z</updated>
        <summary type="html"><![CDATA[if (completed) {
    return null;
  } else {
    return (

    );
  }
};
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何使用TypeScript进行后端开发]]></title>
        <id>https://blog.icehoney.me/posts/2022-10-29-typescript-backend/</id>
        <link href="https://blog.icehoney.me/posts/2022-10-29-typescript-backend/">
        </link>
        <updated>2022-10-29T11:47:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[网页调用摄像头读取QR code]]></title>
        <id>https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/</id>
        <link href="https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/">
        </link>
        <updated>2022-12-17T17:29:00.000Z</updated>
        <summary type="html"><![CDATA[2022 年也要结束了，博客不能停更。最近项目中有读取 QR 码的需求，于是便调研了下如何实现这个功能，顺便写篇博客记录下。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何编写Telegram Bot]]></title>
        <id>https://blog.icehoney.me/posts/2022-09-24-telegram-bot/</id>
        <link href="https://blog.icehoney.me/posts/2022-09-24-telegram-bot/">
        </link>
        <updated>2022-09-24T11:07:00.000Z</updated>
        <summary type="html"><![CDATA[我的想法是做一个 Telegram Bot，输入景点的 Plus Code, 然后返回 MAPCODE。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 提交规范]]></title>
        <id>https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/</id>
        <link href="https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/">
        </link>
        <updated>2022-07-23T20:37:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用MobX管理React的状态]]></title>
        <id>https://blog.icehoney.me/posts/2022-08-07-mobx-react/</id>
        <link href="https://blog.icehoney.me/posts/2022-08-07-mobx-react/">
        </link>
        <updated>2022-08-07T14:43:00.000Z</updated>
        <summary type="html"><![CDATA[pnpm install mobx-react-lite mobx
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeScript中应该禁止使用enum]]></title>
        <id>https://blog.icehoney.me/posts/2022-07-04-typescript-enum/</id>
        <link href="https://blog.icehoney.me/posts/2022-07-04-typescript-enum/">
        </link>
        <updated>2022-07-04T20:37:00.000Z</updated>
        <summary type="html"><![CDATA[return fetch(url, { method }).then(response => response.json());
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS中关于深拷贝和浅拷贝]]></title>
        <id>https://blog.icehoney.me/posts/2022-06-20-deep-copy/</id>
        <link href="https://blog.icehoney.me/posts/2022-06-20-deep-copy/">
        </link>
        <updated>2022-06-20T19:37:00.000Z</updated>
        <summary type="html"><![CDATA[return obj !== null && typeof obj === 'object';
};]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何实现虚拟滚动条]]></title>
        <id>https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/</id>
        <link href="https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/">
        </link>
        <updated>2022-05-12T19:25:00.000Z</updated>
        <summary type="html"><![CDATA[}, [itemData, startIndex, visibleItemCount]);]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac M1系统配置C++环境]]></title>
        <id>https://blog.icehoney.me/posts/2022-04-13-m1-cpp/</id>
        <link href="https://blog.icehoney.me/posts/2022-04-13-m1-cpp/">
        </link>
        <updated>2022-04-13T20:03:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[React 实现 Tabs 组件]]></title>
        <id>https://blog.icehoney.me/posts/2022-01-27-react-tabs/</id>
        <link href="https://blog.icehoney.me/posts/2022-01-27-react-tabs/">
        </link>
        <updated>2022-01-27T20:16:00.000Z</updated>
        <summary type="html"><![CDATA[基于 Vue 框架来实现各种 UI 组件之前有讲过，并且讲述了复合组件如何传递数据。一种方式是使用 Provide / inject， 另外一种是传统的 props 和 $emit()。
但是 React 下复合组件如何实现，和 Vue 相比差距还是挺大的。接下来就讲述经典的 Tabs 组件如何来实现。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[禁用页面滚动]]></title>
        <id>https://blog.icehoney.me/posts/2022-03-13-scroll-lock/</id>
        <link href="https://blog.icehoney.me/posts/2022-03-13-scroll-lock/">
        </link>
        <updated>2022-03-13T15:11:00.000Z</updated>
        <summary type="html"><![CDATA[所以完美的禁用滚动方式需要考虑到当前页面滚动条的宽度。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github 存储大文件]]></title>
        <id>https://blog.icehoney.me/posts/2022-02-10-github-lfs/</id>
        <link href="https://blog.icehoney.me/posts/2022-02-10-github-lfs/">
        </link>
        <updated>2022-02-10T23:16:00.000Z</updated>
        <summary type="html"><![CDATA[Delta compression using up to 10 threads
Compressing objects: 100% (17/17), done.
Writing objects: 100% (17/17), 153.95 MiB | 13.82 MiB/s, done.
Total 17 (delta 4), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (4/4), completed with 3 local objects.
remote: error: Trace:
remote: error: See http://git.io/iEPt8g for more information.
remote: error: File xxx.db is 259.50 MB; this exceeds GitHub's file size limit of 100.00 MB
remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.
To https://github.com/acgotaku/switch.git
 ! [remote rejected] master -> master (pre-receive hook declined)
error: failed to push some refs to 'https://github.com/{user}/{repo}.git'
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[代理Sentry的请求]]></title>
        <id>https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/</id>
        <link href="https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/">
        </link>
        <updated>2021-12-30T22:21:00.000Z</updated>
        <summary type="html"><![CDATA[request.end();
  }
  res.json({});
});
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS如何处理固定Header哈希标记跳转的问题]]></title>
        <id>https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/</id>
        <link href="https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/">
        </link>
        <updated>2021-11-20T21:21:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS 关于颜色的相关处理]]></title>
        <id>https://blog.icehoney.me/posts/2021-10-02-js-color/</id>
        <link href="https://blog.icehoney.me/posts/2021-10-02-js-color/">
        </link>
        <updated>2021-10-02T10:26:00.000Z</updated>
        <summary type="html"><![CDATA[项目开发中，需要根据网站设定的主题色来动态更改网站的所有配色，例如文字颜色，鼠标 hover 状态的按钮颜色，这就涉及到对颜色的相关处理，接下来我们就讲解下如何处理。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何瘦身docker镜像]]></title>
        <id>https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/</id>
        <link href="https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/">
        </link>
        <updated>2021-09-09T21:44:00.000Z</updated>
        <summary type="html"><![CDATA[首先我们需要使用 docker 完成网站源代码的编译，并且还要自己使用 expressjs 搭建服务器。让网站可以运行，docker 跑起来之后只用负责端口转发即可。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何检测用户启动广告屏蔽插件]]></title>
        <id>https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/</id>
        <link href="https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/">
        </link>
        <updated>2021-07-25T14:32:00.000Z</updated>
        <summary type="html"><![CDATA[function isDisplayNone(node: Element | null): boolean {
  if (!node) {
    return false;
  }
  if (getComputedStyle(node).display === 'none') return true;
  return isDisplayNone(node.parentElement);
}]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django使用CKEditor的相关经验]]></title>
        <id>https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/</id>
        <link href="https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/">
        </link>
        <updated>2021-05-19T22:06:00.000Z</updated>
        <summary type="html"><![CDATA[bucket_name = 'material-bucket'
    default_acl = 'private'
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[ELK收集Docker项目的日志]]></title>
        <id>https://blog.icehoney.me/posts/2021-06-14-elk-docker/</id>
        <link href="https://blog.icehoney.me/posts/2021-06-14-elk-docker/">
        </link>
        <updated>2021-06-14T11:21:00.000Z</updated>
        <summary type="html"><![CDATA[$ docker-compose restart kibana logstash
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Service Worker的 Web Push 功能]]></title>
        <id>https://blog.icehoney.me/posts/2021-04-25-service-worker-push/</id>
        <link href="https://blog.icehoney.me/posts/2021-04-25-service-worker-push/">
        </link>
        <updated>2021-04-25T12:27:00.000Z</updated>
        <summary type="html"><![CDATA[return {
    publicKey: vapidKeys.publicKey,
    privateKey: vapidKeys.privateKey
  };
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue代码风格]]></title>
        <id>https://blog.icehoney.me/posts/2021-03-06-vue-code-style/</id>
        <link href="https://blog.icehoney.me/posts/2021-03-06-vue-code-style/">
        </link>
        <updated>2021-03-06T12:02:00.000Z</updated>
        <summary type="html"><![CDATA[
]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[提高网页的易读性]]></title>
        <id>https://blog.icehoney.me/posts/2021-02-06-web-accessibility/</id>
        <link href="https://blog.icehoney.me/posts/2021-02-06-web-accessibility/">
        </link>
        <updated>2021-02-06T11:04:00.000Z</updated>
        <summary type="html"><![CDATA[return false;
}]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据库查询的N+1问题]]></title>
        <id>https://blog.icehoney.me/posts/2021-02-20-sql-n-1/</id>
        <link href="https://blog.icehoney.me/posts/2021-02-20-sql-n-1/">
        </link>
        <updated>2021-02-20T13:44:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[vue实现datepicker组件]]></title>
        <id>https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/</id>
        <link href="https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/">
        </link>
        <updated>2020-11-30T14:07:00.000Z</updated>
        <summary type="html"><![CDATA[前端组件化的今天，选择日期组件算是最复杂的一个了吧。我们需要考虑日期显示的多语言，弹框的显示位置，以及日期月份的计算。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript的加载优化]]></title>
        <id>https://blog.icehoney.me/posts/2021-01-23-javascript-performance/</id>
        <link href="https://blog.icehoney.me/posts/2021-01-23-javascript-performance/">
        </link>
        <updated>2021-01-23T16:11:00.000Z</updated>
        <summary type="html"><![CDATA[一方面，只加载当前页面需要的 JavaScript 文件，可以使用 webpack 的code-splitting来解决。另一方面，懒加载一些不是必须的 JavaScript 文件。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端开发中的加载性能优化]]></title>
        <id>https://blog.icehoney.me/posts/2020-12-20-loading-performance/</id>
        <link href="https://blog.icehoney.me/posts/2020-12-20-loading-performance/">
        </link>
        <updated>2020-12-20T10:48:00.000Z</updated>
        <summary type="html"><![CDATA[现代化浏览器都支持 GZIP 进行压缩，并且服务器端 NGINX 也可以很方便的配置使用 GZIP 压缩请求的资源文件。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端中debounce和throttle函数说明]]></title>
        <id>https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/</id>
        <link href="https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/">
        </link>
        <updated>2020-10-17T20:52:00.000Z</updated>
        <summary type="html"><![CDATA[function throttle(fn: Function, time: number): Function {
  let inThrottle: boolean;]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[在浏览器上显示TIF图像]]></title>
        <id>https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/</id>
        <link href="https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/">
        </link>
        <updated>2020-09-10T20:57:00.000Z</updated>
        <summary type="html"><![CDATA[UTIF.decodeImage(data, ifds[0]);
        const rgba = UTIF.toRGBA8(ifds[0]);
        const widh = ifds[0].width;
        const height = ifds[0].height;
        const canvas = document.createElement("canvas");
        canvas.width = widh;
        canvas.height = height;
        this.width = widh;
        this.height = height;
        const ctx = canvas.getContext("2d");
        const imgData = new ImageData(
          new Uint8ClampedArray(rgba.buffer),
          widh,
          height
        );
        ctx?.putImageData(imgData, 0, 0);
        canvas.toBlob(blob => {
          this.imgData = URL.createObjectURL(blob);
        });
      });
  }
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[简单多边形的判定]]></title>
        <id>https://blog.icehoney.me/posts/2020-08-09-simple-polygon/</id>
        <link href="https://blog.icehoney.me/posts/2020-08-09-simple-polygon/">
        </link>
        <updated>2020-08-09T14:50:00.000Z</updated>
        <summary type="html"><![CDATA[signedArea(l1.start, l1.end, l2.end)
  );
}]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue实现双Slider]]></title>
        <id>https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/</id>
        <link href="https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/">
        </link>
        <updated>2020-06-14T21:31:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[React的TypeScript写法]]></title>
        <id>https://blog.icehoney.me/posts/2020-05-22-react-typescript/</id>
        <link href="https://blog.icehoney.me/posts/2020-05-22-react-typescript/">
        </link>
        <updated>2020-05-22T22:43:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue中组件的设计]]></title>
        <id>https://blog.icehoney.me/posts/2020-07-30-vue-components/</id>
        <link href="https://blog.icehoney.me/posts/2020-07-30-vue-components/">
        </link>
        <updated>2020-07-30T22:08:00.000Z</updated>
        <summary type="html"><![CDATA[Vue 中组件设计经常遇到复合组件的问题，例如下拉菜单，下拉菜单中我们不仅要实现select元素的功能，还要实现option元素的功能，这样才是一个完整的下拉菜单组件。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue表单组件如何自动化输入]]></title>
        <id>https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/</id>
        <link href="https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/">
        </link>
        <updated>2020-04-23T22:43:00.000Z</updated>
        <summary type="html"><![CDATA[document.querySelector('.checkbox').checked = true;
document.querySelector('.input').value = true;
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue下使用jest进行单元测试]]></title>
        <id>https://blog.icehoney.me/posts/2020-03-19-vue-jest/</id>
        <link href="https://blog.icehoney.me/posts/2020-03-19-vue-jest/">
        </link>
        <updated>2020-03-19T21:56:00.000Z</updated>
        <summary type="html"><![CDATA[当今的前端开发都离不开 webpack 进行打包，我们使用各种各样的 loader 来处理代码，所以可以使用例如import语法来引用 JS 文件，但是 node 环境目前还不支持原生的 es6 import文件。所以在使用 jest 的时候，我们需要用 babel 进行代码转换，好在 @vue/cli-plugin-unit-jest 都已经给配置好了，使用预置的 preset 就行。我是基于 TS 开发，所以用的 preset 是 @vue/cli-plugin-unit-jest/presets/typescript-and-babel。但是我们在代码里使用的一些 webpack 的特殊语法就不太好对应了，例如我有使用inline loader来打包特殊的 SVG 文件到代码中，但是在测试的时候就会遇到无法 import 的尴尬问题。这时候的解决方案就是使用moduleNameMapper:]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端开发如何防止逆向以及对策]]></title>
        <id>https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/</id>
        <link href="https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/">
        </link>
        <updated>2020-02-22T18:03:00.000Z</updated>
        <summary type="html"><![CDATA[window.Image = function() {};
Object.defineProperty(window, 'Image', { writable: false });
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端部署之CDN的那些事情]]></title>
        <id>https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/</id>
        <link href="https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/">
        </link>
        <updated>2020-01-14T22:59:00.000Z</updated>
        <summary type="html"><![CDATA[由于 Service Workers 的导入使得 CDN 部署变得有些麻烦，不过这些问题好在都能找到解决方案。还有一点是 Chrome 的 Network 面板里的 offline 模式不能测试 Service Workers 的离线。需要自己手动拔网线才能测试。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[iOS12下Safari浏览器的BUG]]></title>
        <id>https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/</id>
        <link href="https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/">
        </link>
        <updated>2019-12-10T22:39:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[计算贝塞尔曲线的长度]]></title>
        <id>https://blog.icehoney.me/posts/2019-10-22-bezier-length/</id>
        <link href="https://blog.icehoney.me/posts/2019-10-22-bezier-length/">
        </link>
        <updated>2019-10-22T22:28:00.000Z</updated>
        <summary type="html"><![CDATA[贝塞尔曲线是工业上经常用的一种曲线，经常用用来汽车的外观设计。贝塞尔曲线根据控制点的不同可以分为：]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Docker运行node项目]]></title>
        <id>https://blog.icehoney.me/posts/2019-09-23-node-docker/</id>
        <link href="https://blog.icehoney.me/posts/2019-09-23-node-docker/">
        </link>
        <updated>2019-09-23T22:43:00.000Z</updated>
        <summary type="html"><![CDATA[很多情况下，一个 Docker 是满足不了需求的，有时候还要使用 MySQL 数据库，有时候还要使用 redis。这时候就需要使用 docker-compose 来管理多个 Docker。docker-compose 的使用也很简单，只要在项目根目录下建立一个docker-compose.yml文件即可。关于 YAML 的学习，可以参考Learn YAML in five minutes!。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[求经纬度两点距离]]></title>
        <id>https://blog.icehoney.me/posts/2019-09-11-distance-latlng/</id>
        <link href="https://blog.icehoney.me/posts/2019-09-11-distance-latlng/">
        </link>
        <updated>2019-09-11T22:43:00.000Z</updated>
        <summary type="html"><![CDATA[世界大地测量系统是三维描述地球的位置信息，对于导航或者显示来说很不方便。所以在平面上使用麦卡托投影（Mercator projection），可以把三维平铺到二维。但是注意，麦卡托投影会使面积发生变形。所以投影出来的坐标是不能直接用来计算距离的。维度越高，变形就越大。所以需要计算比例因子来纠正。但对于两个坐标纬度相差比较大的情况下，计算就更复杂了。所以不推荐使用麦卡托投影来计算距离。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue中如何设计面包屑]]></title>
        <id>https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/</id>
        <link href="https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/">
        </link>
        <updated>2019-07-28T23:21:00.000Z</updated>
        <summary type="html"><![CDATA[component: userSettings
      },
      {
        path: '',
        name: 'user-dashboard'
      }
      // ...
    ]
  }
]
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[localStorage互斥锁的使用]]></title>
        <id>https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/</id>
        <link href="https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/">
        </link>
        <updated>2019-02-28T20:20:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github如何省略每次输入验证信息]]></title>
        <id>https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/</id>
        <link href="https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/">
        </link>
        <updated>2019-06-23T20:21:00.000Z</updated>
        <summary type="html"><![CDATA[项目开发中经常会遇到 CI 自动拉取 Github 库的情况，我们个人使用的时候会手动输入账户密码信息，但是针对 CI 来说，我们一般会把敏感的认证信息放在环境变量里。所以针对认证信息的自动输入，需要做一些处理。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用WebAssembly编译C++到JS]]></title>
        <id>https://blog.icehoney.me/posts/2019-04-28-webassmebly/</id>
        <link href="https://blog.icehoney.me/posts/2019-04-28-webassmebly/">
        </link>
        <updated>2019-04-28T20:51:00.000Z</updated>
        <summary type="html"><![CDATA[官方的 demo 是使用 src 的方式来引入，并且暴露成 Module 的全局变量。但是现代化的 Web 项目都是使用 webpack 打包，并且自动化引入的。所以我们也不想为了 WebAssembly 搞特殊。接下来就讲述如何配置来引入。首先，使用 emscripten 输出 mjs 文件，这样才可以作为模块被导入。具体的编译参数可以参照emcc。
首先，wasm 格式并不能被 webpack 正确识别，我们需要添加 loader]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端中的e2e测试]]></title>
        <id>https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/</id>
        <link href="https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/">
        </link>
        <updated>2019-04-06T12:12:00.000Z</updated>
        <summary type="html"><![CDATA[customassertionspath: ["tests/e2e/custom-assertions"],
      globals_path: "globalsModule.js",
      src_folders: ["tests/e2e/specs/web"]]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[亚马逊S3服务简单介绍]]></title>
        <id>https://blog.icehoney.me/posts/2019-01-23-aws-s3/</id>
        <link href="https://blog.icehoney.me/posts/2019-01-23-aws-s3/">
        </link>
        <updated>2019-01-23T21:20:00.000Z</updated>
        <summary type="html"><![CDATA[AWS 也有文档说明了如何构造一个上传的表单。这个表单中最重要的是一句注释：The elements after this will be ignored。在 file 字段之后的所有信息都会被忽略掉，我测试的时候一直把x-amz-meta-md5checksum字段放在 file 字段之后导致上传一直报错。直到 Stack Overflow 上面有人解释了才恍然大悟。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[后端开发的技术总结]]></title>
        <id>https://blog.icehoney.me/posts/2018-10-15-backend-development/</id>
        <link href="https://blog.icehoney.me/posts/2018-10-15-backend-development/">
        </link>
        <updated>2018-10-15T21:20:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[跨域请求中的cookies处理]]></title>
        <id>https://blog.icehoney.me/posts/2018-09-08-cors-cookie/</id>
        <link href="https://blog.icehoney.me/posts/2018-09-08-cors-cookie/">
        </link>
        <updated>2018-09-08T23:07:00.000Z</updated>
        <summary type="html"><![CDATA[现在的前后端开发已经完全分离，后端服务器和前端服务器分别部署在不同的服务器。同时也对应不同的域名，所以跨域请求领域方面的知识也需要补充。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端开发地图应用的调研]]></title>
        <id>https://blog.icehoney.me/posts/2018-11-27-js-map/</id>
        <link href="https://blog.icehoney.me/posts/2018-11-27-js-map/">
        </link>
        <updated>2018-11-27T21:20:00.000Z</updated>
        <summary type="html"><![CDATA[产品需要在国内和国外使用，费用合理，可以换地图的贴图并且能在地图上绘制各种信息。例如多边形或圆形还有贝塞尔曲线。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[伪随机的种子问题]]></title>
        <id>https://blog.icehoney.me/posts/2018-08-01-random-seed/</id>
        <link href="https://blog.icehoney.me/posts/2018-08-01-random-seed/">
        </link>
        <updated>2018-08-01T22:07:00.000Z</updated>
        <summary type="html"><![CDATA[seed 的意义就在于，初始化了随机数生成器。保证了每次随机的结果都一样。例如代码：]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用letsencrypt为自己的网站加密]]></title>
        <id>https://blog.icehoney.me/posts/2018-04-08-website-https/</id>
        <link href="https://blog.icehoney.me/posts/2018-04-08-website-https/">
        </link>
        <updated>2018-04-08T20:51:00.000Z</updated>
        <summary type="html"><![CDATA[我把自己的 DNS 服务托管到 cloudflare 上，还可以使用 cloudflare 提供免费的 CDN 服务。最重要的一点是 cloudflare 有 API 接口。利用这个接口就可以自动完成 DNS-01 challenge。简单的来说，就是通过添加一条 DNS 记录来证明自己对这个域名的所有权，才能给这个域名颁发证书。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web离线的解决方案]]></title>
        <id>https://blog.icehoney.me/posts/2018-07-06-offline-web/</id>
        <link href="https://blog.icehoney.me/posts/2018-07-06-offline-web/">
        </link>
        <updated>2018-07-06T23:25:00.000Z</updated>
        <summary type="html"><![CDATA[
  ...

`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何封装第三方vue组件]]></title>
        <id>https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/</id>
        <link href="https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/">
        </link>
        <updated>2018-05-29T23:19:00.000Z</updated>
        <summary type="html"><![CDATA[父元素的属性继承可以使用v-bind="$attrs"来完成。所以完成组建的透明封装只需要加上三个指令。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript开发中的性能优化]]></title>
        <id>https://blog.icehoney.me/posts/2018-04-25-javascript-performance/</id>
        <link href="https://blog.icehoney.me/posts/2018-04-25-javascript-performance/">
        </link>
        <updated>2018-04-25T23:22:00.000Z</updated>
        <summary type="html"><![CDATA[console.log(array[i]);
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[浏览器的渲染性能]]></title>
        <id>https://blog.icehoney.me/posts/2018-02-13-rendering-performance/</id>
        <link href="https://blog.icehoney.me/posts/2018-02-13-rendering-performance/">
        </link>
        <updated>2018-02-13T20:44:00.000Z</updated>
        <summary type="html"><![CDATA[如果修改了元素的布局属性，也就是改变了元素的几何属性（例如宽度，高度）。那么浏览器就必须检查所有元素，然后重新排版页面。任何受影响的部分都要重新绘制，再重新合成。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript中的数据类型]]></title>
        <id>https://blog.icehoney.me/posts/2018-01-16-javascript-types/</id>
        <link href="https://blog.icehoney.me/posts/2018-01-16-javascript-types/">
        </link>
        <updated>2018-01-16T22:44:00.000Z</updated>
        <summary type="html"><![CDATA[if (!Number.isNaN) {
  Number.isNaN = function(n) {
    return typeof n === 'number' && window.isNaN(n);
  };
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端开发的技术栈]]></title>
        <id>https://blog.icehoney.me/posts/2017-11-18-frontend-development/</id>
        <link href="https://blog.icehoney.me/posts/2017-11-18-frontend-development/">
        </link>
        <updated>2017-11-18T17:18:00.000Z</updated>
        <summary type="html"><![CDATA[这是每个前端工程师最头疼的地方了，因为每个浏览器支持程度都不一样。在使用比较新的 API 记得去Can I use查看下各个浏览器的支持情况，如果实在是需要这个功能的话，那就只能去寻找polyfill了。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[网站开发中的Modal问题]]></title>
        <id>https://blog.icehoney.me/posts/2017-10-21-modal-scroll/</id>
        <link href="https://blog.icehoney.me/posts/2017-10-21-modal-scroll/">
        </link>
        <updated>2017-10-21T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[参考：]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS技巧和工作总结]]></title>
        <id>https://blog.icehoney.me/posts/2017-08-06-css-trick/</id>
        <link href="https://blog.icehoney.me/posts/2017-08-06-css-trick/">
        </link>
        <updated>2017-08-06T15:30:00.000Z</updated>
        <summary type="html"><![CDATA[CSS 动画尽量使用transform: translate3d(0,0,0)来实现，因为 ransform3d api 会强制开启 GPU 加速提高页面的流畅度。在公司的项目中，从使用background-position进行动画效果换成transform之后，动画流畅度得到了显著的改善。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github团队协作]]></title>
        <id>https://blog.icehoney.me/posts/2017-09-16-github-workflow/</id>
        <link href="https://blog.icehoney.me/posts/2017-09-16-github-workflow/">
        </link>
        <updated>2017-09-16T22:30:00.000Z</updated>
        <summary type="html"><![CDATA[高质量的 Git 中文教程]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript对象的常见操作]]></title>
        <id>https://blog.icehoney.me/posts/2017-06-18-javascript-object/</id>
        <link href="https://blog.icehoney.me/posts/2017-06-18-javascript-object/">
        </link>
        <updated>2017-06-18T22:13:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS笔记和杂谈]]></title>
        <id>https://blog.icehoney.me/posts/2017-05-07-css/</id>
        <link href="https://blog.icehoney.me/posts/2017-05-07-css/">
        </link>
        <updated>2017-05-07T21:49:00.000Z</updated>
        <summary type="html"><![CDATA[这应该是最长的一次博客断更吧。。。因为年后辞职加上来日本工作的原因。导致很长时间都没有更新自己的博客了。很是惭愧，本来定的目标就是每月一篇很简单的任务。但居然空档了这么长时间，这就是正所谓的生于忧患死于安乐吧。找到了工作就松懈了，所以今天又重新捡起来继续写。公司的新人课题是做一个简单的 CMS 网站，也算重新复习了一下网页制作吧，因为一直在写 JS 的项目，基本的 HTML 和 CSS 的设计都有点生疏了。。。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Latex书写论文]]></title>
        <id>https://blog.icehoney.me/posts/2016-09-20-latex/</id>
        <link href="https://blog.icehoney.me/posts/2016-09-20-latex/">
        </link>
        <updated>2016-09-20T20:16:00.000Z</updated>
        <summary type="html"><![CDATA[网上有很多 Latex 的学习资料，不过我们也没必要详细学习，在此介绍一个简单的学习资料。一份不太简短的 LATEX 介绍基本上看完这个文档就可以大致明白如何利用 Latex 书写论文。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Golang语言学习分享]]></title>
        <id>https://blog.icehoney.me/posts/2017-01-29-go/</id>
        <link href="https://blog.icehoney.me/posts/2017-01-29-go/">
        </link>
        <updated>2017-01-29T09:49:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[逆向JavaScript经验分享]]></title>
        <id>https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/</id>
        <link href="https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/">
        </link>
        <updated>2016-12-19T19:16:00.000Z</updated>
        <summary type="html"><![CDATA[从上面我们知道了，这个请求只对参数进行了校验，Request Headers并不需要。那重点就是逆向 JS 找到如何构造参数即可。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux高并发系统参数优化]]></title>
        <id>https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/</id>
        <link href="https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/">
        </link>
        <updated>2016-11-27T18:16:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[模块化JavaScript开发]]></title>
        <id>https://blog.icehoney.me/posts/2016-06-30-webpack/</id>
        <link href="https://blog.icehoney.me/posts/2016-06-30-webpack/">
        </link>
        <updated>2016-06-30T16:43:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用最小费用最大流模型解决酒店管理收益最大化问题]]></title>
        <id>https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/</id>
        <link href="https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/">
        </link>
        <updated>2015-12-29T11:15:00.000Z</updated>
        <summary type="html"><![CDATA[最近老师布置个作业,很没有头绪,于是各种咨询,大家的解决方案是使用最小费用最大流模型来求解,于是我便花了 3 天时间来理解这个算法.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL渲染的知识介绍]]></title>
        <id>https://blog.icehoney.me/posts/2016-05-05-webgl-render/</id>
        <link href="https://blog.icehoney.me/posts/2016-05-05-webgl-render/">
        </link>
        <updated>2016-05-05T10:43:00.000Z</updated>
        <summary type="html"><![CDATA[WebGL 是基于 OpenGL ES 2.0 文档进行开发的，所以想了解相关 API 的话，直接查阅官方的OpenGL ES 2.0 文档即可.WebGL 的一大优势是可以使用 GPU 资源来进行图形渲染和相关的计算，但是使用 GPU 资源的话必须使用对于 GPU 友好的语言来进行编写，WebGL 使用GLSL来编写用于 GPU 渲染的着色器。
JavaScript 主要负责整个渲染流程的控制和 GPU 与 CPU 之间的数据交互，繁重的坐标变换计算全部交给 GPU 来处理。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于JavaScript跨域请求的相关知识]]></title>
        <id>https://blog.icehoney.me/posts/2016-03-21-cors-options-method/</id>
        <link href="https://blog.icehoney.me/posts/2016-03-21-cors-options-method/">
        </link>
        <updated>2016-03-21T14:33:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[解决Dota2在Archlinux下的各种疑难杂症]]></title>
        <id>https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/</id>
        <link href="https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/">
        </link>
        <updated>2015-12-01T21:58:00.000Z</updated>
        <summary type="html"><![CDATA[~/.steam/steam/ubuntu1232/steam-runtime/amd64/usr/lib/x8664-linux-gnu/
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux和Win 10 在 UEFI下 双启动]]></title>
        <id>https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/</id>
        <link href="https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/">
        </link>
        <updated>2015-10-28T23:32:00.000Z</updated>
        <summary type="html"><![CDATA[如果这个不行的话,那说明你得采用第二个办法了,使用 GRUB 进行引导启动盘.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Python实现Histogram_equalization算法]]></title>
        <id>https://blog.icehoney.me/posts/2015-10-05-python-image-process/</id>
        <link href="https://blog.icehoney.me/posts/2015-10-05-python-image-process/">
        </link>
        <updated>2015-10-05T23:54:00.000Z</updated>
        <summary type="html"><![CDATA[库的引用只使用了PIL 和 numpy.前者用来读取图像的二进制数据,
后者用来进行数值的累加计算.源码发布在 Github]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chrome扩展和Web Page 进行通讯]]></title>
        <id>https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/</id>
        <link href="https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/">
        </link>
        <updated>2015-08-25T19:54:00.000Z</updated>
        <summary type="html"><![CDATA[后者是接收 Content Script 消息的,前者是 接收 Web Page 消息的.
这样便实现了 Web Page 和 Background 之间的双向通讯, Web Page 不能完成的事情交给 Background 来处理即可.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[解压和打包安卓DAT文件]]></title>
        <id>https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/</id>
        <link href="https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/">
        </link>
        <updated>2015-07-28T19:54:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chromebook Pixel (2013) 安装Linux的方法]]></title>
        <id>https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/</id>
        <link href="https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/">
        </link>
        <updated>2015-04-20T19:54:00.000Z</updated>
        <summary type="html"><![CDATA[同学最近淘了一台二手 Chromebook Pixel (2013)，这款笔记本最大的诱惑就是 12.85 寸但是配备了一块 2560 x 1700 分辨率的触摸屏。上网的体验不要太爽啊，在体验了一小时的 Chrome OS 之后，便感叹就只有一个浏览器而已啊！于是开始折腾如何安装 Linux，毕竟这款笔记本本来就对 Linux 支持很好。下面开始介绍安装过程。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[突破同源策略限制的方法]]></title>
        <id>https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/</id>
        <link href="https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/">
        </link>
        <updated>2015-04-20T19:54:00.000Z</updated>
        <summary type="html"><![CDATA[但是随着互联网的发展跨域的需求也越来越迫切，有些时候我们需要突破同源策略。下面开始介绍突破同源策略的几种方法：]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS使用box-shadow和border-radius的妙用]]></title>
        <id>https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/</id>
        <link href="https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/">
        </link>
        <updated>2015-03-17T15:08:00.000Z</updated>
        <summary type="html"><![CDATA[border-radius: 0 0 100px 0;
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows下如何进行进程注入]]></title>
        <id>https://blog.icehoney.me/posts/2015-02-28-windows-injection/</id>
        <link href="https://blog.icehoney.me/posts/2015-02-28-windows-injection/">
        </link>
        <updated>2015-02-28T15:53:00.000Z</updated>
        <summary type="html"><![CDATA[传入的参数包括进程句柄，开辟起始地址，开辟空间的大小，分配的数据类型，分配空间的权限。例如： pRemoteCode = (PBYTE) VirtualAllocEx(hProcess, 0, dwSizeOfCode, MEMCOMMIT, PAGEEXECUTE_READWRITE);]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Aria2下载百度网盘和115的资源]]></title>
        <id>https://blog.icehoney.me/posts/2015-01-31-aria2-download/</id>
        <link href="https://blog.icehoney.me/posts/2015-01-31-aria2-download/">
        </link>
        <updated>2015-01-31T09:41:00.000Z</updated>
        <summary type="html"><![CDATA[file-allocation=prealloc
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript处理二进制数据]]></title>
        <id>https://blog.icehoney.me/posts/2014-11-23-javascript-binary/</id>
        <link href="https://blog.icehoney.me/posts/2014-11-23-javascript-binary/">
        </link>
        <updated>2014-11-23T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[有时候需要把传入的二进制数据转换成 ArrayBuffer 进行处理就需要转换了]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Postfix,Dovecot和Mysql配置邮件服务器]]></title>
        <id>https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/</id>
        <link href="https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/">
        </link>
        <updated>2014-12-25T15:41:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[扇贝单词助手发布]]></title>
        <id>https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/</id>
        <link href="https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/">
        </link>
        <updated>2014-10-30T18:30:00.000Z</updated>
        <summary type="html"><![CDATA[然后我就趁着国庆就开坑了,binux 也给了我很多参考资料.因为之前也开发过 Chrome 的扩展,所以对 Chrome 提供的 API 比较熟悉.这里就介绍下使用的相关的 JavaScript 的知识吧~]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript函数中的闭包]]></title>
        <id>https://blog.icehoney.me/posts/2014-04-30-javascript-closure/</id>
        <link href="https://blog.icehoney.me/posts/2014-04-30-javascript-closure/">
        </link>
        <updated>2014-04-30T16:18:00.000Z</updated>
        <summary type="html"><![CDATA[闭包.因为函数 a 外的变量 c 引用了函数 a 内的函数 b.就是说,当函数 a 的内部函数 b 被函数 a 外的一个变量引用的时候,就创建了一个闭包.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[计算机中的字节序问题]]></title>
        <id>https://blog.icehoney.me/posts/2014-09-30-computer-endian/</id>
        <link href="https://blog.icehoney.me/posts/2014-09-30-computer-endian/">
        </link>
        <updated>2014-09-30T12:30:00.000Z</updated>
        <summary type="html"><![CDATA[}
    printf("\n");
    return 0;
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[chrome扩展开发经验记录]]></title>
        <id>https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/</id>
        <link href="https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/">
        </link>
        <updated>2014-08-23T16:01:00.000Z</updated>
        <summary type="html"><![CDATA[官方文档]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下声卡的设置与折腾]]></title>
        <id>https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/</id>
        <link href="https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/">
        </link>
        <updated>2014-06-05T09:22:00.000Z</updated>
        <summary type="html"><![CDATA[我自己安装的 alsamixer 使用界面是:]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux下恢复误删除的文件]]></title>
        <id>https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/</id>
        <link href="https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/">
        </link>
        <updated>2014-07-21T17:39:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[百度网盘新版API]]></title>
        <id>https://blog.icehoney.me/posts/2014-07-02-baidu-pan/</id>
        <link href="https://blog.icehoney.me/posts/2014-07-02-baidu-pan/">
        </link>
        <updated>2014-07-02T14:09:00.000Z</updated>
        <summary type="html"><![CDATA[突然发现百度网盘又更新 API 了....明明 UI 一点都没有更新.我严重怀疑这个前端工程师是有多寂寞...
没事就更新 JS...这已经是我观察发现的第三次更新了...每次都导致我的 aria2c 导出脚本失效...]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript中一个经典的正则例子]]></title>
        <id>https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/</id>
        <link href="https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/">
        </link>
        <updated>2014-05-08T09:44:00.000Z</updated>
        <summary type="html"><![CDATA[如何使用并在项目中熟练运用就好了,经常使用的话也就自然记住了.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux折腾笔记]]></title>
        <id>https://blog.icehoney.me/posts/2014-04-20-linux-notes/</id>
        <link href="https://blog.icehoney.me/posts/2014-04-20-linux-notes/">
        </link>
        <updated>2014-04-20T19:52:00.000Z</updated>
        <summary type="html"><![CDATA[我必须能独当一面才算能在公司站得住脚.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript函数调用的四种方式]]></title>
        <id>https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/</id>
        <link href="https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/">
        </link>
        <updated>2014-04-24T15:28:00.000Z</updated>
        <summary type="html"><![CDATA[}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[程序员修炼之道]]></title>
        <id>https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/</id>
        <link href="https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/">
        </link>
        <updated>2014-02-05T17:18:00.000Z</updated>
        <summary type="html"><![CDATA[经验,写过上万行代码,对于这本书的感受就是爱不释手.这本书用非常幽默的方式简述很多朴素而真挚,简单而有效的编程哲学.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[面试笔记]]></title>
        <id>https://blog.icehoney.me/posts/2014-04-01-interview/</id>
        <link href="https://blog.icehoney.me/posts/2014-04-01-interview/">
        </link>
        <updated>2014-04-01T19:20:00.000Z</updated>
        <summary type="html"><![CDATA[直接查看文档这不就几秒钟的事情么,简单到我根本不会去记住文件读写的具体写法.因为用的时候自然会去看文档,当然了熟练的话
就直接写出来了,我是一个对着电脑编程根本停不下来的人,但是给我纸笔的话反而写不好.这个文件读写放在项目里根本我都不当回事,
但是面试的时候尴尬的没回答好...后来菊苣也说了,这个时候你就如实回答查下文档不就行了么...]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[漫无止境的三月]]></title>
        <id>https://blog.icehoney.me/posts/2014-03-08-long-march/</id>
        <link href="https://blog.icehoney.me/posts/2014-03-08-long-march/">
        </link>
        <updated>2014-03-08T12:03:00.000Z</updated>
        <summary type="html"><![CDATA[布局神马的还是不符合我的胃口.项目部署的网址是:http://netkuu.icehoney.me/ 目前还是绝赞填坑中~
前端后端全部自己一个人写,希望能把自己锻炼成 full stack developer~ 现在就差数据库练手了,好久没玩数据库了.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于程序运行效率的一点见解]]></title>
        <id>https://blog.icehoney.me/posts/2013-10-24-program-efficiency/</id>
        <link href="https://blog.icehoney.me/posts/2013-10-24-program-efficiency/">
        </link>
        <updated>2013-10-24T23:06:00.000Z</updated>
        <summary type="html"><![CDATA[数组都用矩阵来表示,但是实际储存的时候一般都是按照行优先的方式储存的.我的这个版本是先行遍历再列遍历的.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[GUI和CLI的使用比较]]></title>
        <id>https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/</id>
        <link href="https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/">
        </link>
        <updated>2014-01-18T23:06:00.000Z</updated>
        <summary type="html"><![CDATA[GUI 环境通常受限于它们的设计者想要提供的能力.如果你需要超越设计者提供的模型,你大概不会那么走运--而且很多时候,你确实需要超越这些模型.注重实效的程序员
并非只是剪切代码、或是开发对象模型、或是撰写文档、或是构建过程自动化--所有这些事情我们全都要做.通常,任何一样工具的适用范围都局限于该工具预期要完成的任务.
例如,假定你需要把代码预处理器集成进你的 IDE 中(为了实现按合约设计、多处理编译指示,等等).除非 IDE 的设计者明确地为这种能力提供了挂钩,否则,你无法做到这一点.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下有关无损音乐的折腾]]></title>
        <id>https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/</id>
        <link href="https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/">
        </link>
        <updated>2013-10-06T23:29:00.000Z</updated>
        <summary type="html"><![CDATA[命令很简单,在转换好的音乐文件夹下指定 cue 文件和 mp3 文件即可自动打 TAG,但是需要注意的一点是,这个脚本打的是 ID3v1 的标签,如果是非英语语言的话,
会出现乱码问题.详情请戳Mp3 标签乱码问题分析与解决方案
所以,之后我们还是要使用mp3tagiconv
这个工具来进行标签的转换使得所有的播放器都能够正确识别 mp3 音乐的标签.
for i in *.mp3; do echo "y"| mp3tagiconv "${i}" ;done
因为 mp3tagiconv 这个工具每次更新标签都会提示 yes or no ,所以我就修改了下执行方式,使得批量自动化修改.flac 格式的音乐不存在 TAG 编码问题.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下使用airbase和dhcpd建立虚拟AP]]></title>
        <id>https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/</id>
        <link href="https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/">
        </link>
        <updated>2013-08-26T21:29:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下Galaxy Nexus刷机并root]]></title>
        <id>https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/</id>
        <link href="https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/">
        </link>
        <updated>2013-07-20T14:12:00.000Z</updated>
        <summary type="html"><![CDATA[安卓本来就是 Linux 衍生的,所以必然可以用 Linux 系统进行刷机,而且效果比 Win 还要好.不需要安装驱动,只需要安装 adb 和 fastboot 即可.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下终端进行代理的解决方案]]></title>
        <id>https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/</id>
        <link href="https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/">
        </link>
        <updated>2013-07-18T22:05:00.000Z</updated>
        <summary type="html"><![CDATA[软件来源各种各样,有的是 Google code 上的,有的是 GitHub 上的,有的就是 sourceforge 上的了.
但是在中国的大环境下不能保证上面网站的正常访问 QAQ Google 的话有 hosts 的情况下基本上是
把 http 修改成 https 就可以下载了,其余两个就只能代理进行下载软件并安装了.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sublime使用笔记以及插件推荐]]></title>
        <id>https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/</id>
        <link href="https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/">
        </link>
        <updated>2013-07-02T22:06:00.000Z</updated>
        <summary type="html"><![CDATA[{
  "color_scheme": "Packages/Color Scheme - Default/Dawn.tmTheme",
  "font_face": "Deja Vu Sans Mono",
  "font_size": 11.5,
  "ignored_packages": ["Vintage"]
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu下apache2的配置记录]]></title>
        <id>https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/</id>
        <link href="https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/">
        </link>
        <updated>2013-06-06T21:41:00.000Z</updated>
        <summary type="html"><![CDATA[sudo a2enmod ssl
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[个人博客的建立]]></title>
        <id>https://blog.icehoney.me/posts/2013-02-07-start-blog/</id>
        <link href="https://blog.icehoney.me/posts/2013-02-07-start-blog/">
        </link>
        <updated>2013-02-07T22:07:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用GRUB2引导ISO镜像]]></title>
        <id>https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/</id>
        <link href="https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/">
        </link>
        <updated>2013-04-25T21:17:00.000Z</updated>
        <summary type="html"><![CDATA[首先来说下什么是 GRUB,熟悉 Linux 的同学都应该知道的说.它是一个多重操作系统启动管理器。用来引导不同系统，如 windows，linux。
GRUB2 就是 GRUB 的下一个版本.首先说下 GRUB 的作用吧,当你按下电脑上的电源按钮的时候,这时候电脑会开始加载 BIOS,BIOS 首先检查计算机硬件
能否满足运行的基本条件,这叫做"硬件自检"（Power-On Self-Test）.自检完成之后,BIOS 就会把系统控制权转交给下一阶段的启动程序,一般情况下
都会是硬盘,由硬盘启动时，BIOS 通常是转向第一块硬盘的第一个扇区，即主引导记录(MBR).]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[安徽师范大学校园视频下载器2.0版本发布]]></title>
        <id>https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/</id>
        <link href="https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/">
        </link>
        <updated>2013-03-15T15:30:00.000Z</updated>
        <summary type="html"><![CDATA[视频资源和视频的 ID,然后通过一步步的研究直接找到了资源的下载地址.详细的原理请看我 github 上公开的VideoSeach
里面的 Function.cs 记录了具体解析过程.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于CSS解决高度自适应和宽度自适应的问题]]></title>
        <id>https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/</id>
        <link href="https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/">
        </link>
        <updated>2013-03-10T19:09:00.000Z</updated>
    </entry>
</feed>