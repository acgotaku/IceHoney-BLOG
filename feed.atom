<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.icehoney.me/</id>
    <title>IceHoney</title>
    <updated>2023-12-17T02:39:12.798Z</updated>
    <generator>https://github.com/webmasterish/vuepress-plugin-feed</generator>
    <link rel="alternate" href="https://blog.icehoney.me/"/>
    <link rel="self" href="https://blog.icehoney.me/feed.atom"/>
    <subtitle>IceHoney是雪月秋水君的博客~ 记录秋水君生活的点点滴滴~</subtitle>
    <entry>
        <title type="html"><![CDATA[Archlinux下安装过wps之后字体发虚的问题]]></title>
        <id>https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/</id>
        <link href="https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/">
        </link>
        <updated>2013-07-04T12:39:00.000Z</updated>
        <summary type="html"><![CDATA[Office 是 Linux 永远的痛...微软的 Office 市场霸主地位是根本无法撼动的... 但是微软那家伙很讨厌 Linux 和开源... Office 产品目前也只有 Windows 和 Mac 据说微软要出 Linux 版本的 Office...但是不知道猴年马月啊 (望天]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于微云下载的那点事]]></title>
        <id>https://blog.icehoney.me/posts/2013-04-28-about-weiyun/</id>
        <link href="https://blog.icehoney.me/posts/2013-04-28-about-weiyun/">
        </link>
        <updated>2013-04-28T21:31:00.000Z</updated>
        <summary type="html"><![CDATA[在这个页面载入的时候可以很清楚的看到网页对这个网址进行 POST 请求,提交的表单是个 json 对象]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[嵌套表格如何实现边框合并]]></title>
        <id>https://blog.icehoney.me/posts/2023-12-03-css-nested-table/</id>
        <link href="https://blog.icehoney.me/posts/2023-12-03-css-nested-table/">
        </link>
        <updated>2023-12-03T10:20:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[macOS下运行红警2游戏]]></title>
        <id>https://blog.icehoney.me/posts/2023-12-17-macos-ra2/</id>
        <link href="https://blog.icehoney.me/posts/2023-12-17-macos-ra2/">
        </link>
        <updated>2023-12-17T11:20:00.000Z</updated>
        <summary type="html"><![CDATA[Linux 用户有钱就换 Mac，我也日常使用 Mac 电脑了。但是对于童年回忆的红警 2 游戏，我还是想在 Mac 上玩一玩。这里记录一下在 Mac 上运行红警 2 游戏的过程。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[无限滚动加载列表]]></title>
        <id>https://blog.icehoney.me/posts/2023-06-03-scroll-loader/</id>
        <link href="https://blog.icehoney.me/posts/2023-06-03-scroll-loader/">
        </link>
        <updated>2023-06-03T12:55:00.000Z</updated>
        <summary type="html"><![CDATA[如果检测组件进入可视范围，我们可以使用 IntersectionObserver API，来监听元素进入可视范围。我们使用 React 实现一个组件，当这个组件进入可视范围的时候，会触发一个回调函数，这个回调函数会去加载下一页的数据。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[MacOS下苹果手机刷机]]></title>
        <id>https://blog.icehoney.me/posts/2023-11-11-flash-ios/</id>
        <link href="https://blog.icehoney.me/posts/2023-11-11-flash-ios/">
        </link>
        <updated>2023-11-11T20:03:00.000Z</updated>
        <summary type="html"><![CDATA[在 Finder 中可以看到我们连接的手机了，我们可以点击手机的名字，然后在右侧的窗口中点击 Restore iPhone... 按钮。需要注意的是，点击 Restore iPhone 按钮之前，需要按住 Option 键，这样才会弹出选择固件包的窗口。选择我们刚刚下载好的固件，就开始刷机了。刷机完成之后，系统会有弹窗提示，这时候我们断开手机和电脑的连接，手机就可以正常使用了。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[macOS下编译C++文件]]></title>
        <id>https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/</id>
        <link href="https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/">
        </link>
        <updated>2023-10-09T12:10:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[拖拽排序列表]]></title>
        <id>https://blog.icehoney.me/posts/2023-04-16-draggable-list/</id>
        <link href="https://blog.icehoney.me/posts/2023-04-16-draggable-list/">
        </link>
        <updated>2023-04-16T12:31:00.000Z</updated>
        <summary type="html"><![CDATA[const dragStartHandler = useCallback(
  (event: React.DragEvent, index: number) => {
    event.dataTransfer.effectAllowed = 'move';
    // set dataTransfer enable mobile drag
    event.dataTransfer.setData('text/plain', index.toString());
    dragItem.current = index;
    copyData.current = deepClone(sortedData);
    recordRect();
    onDragStart?.();
  },
  [sortedData, recordRect, onDragStart]
);
const dragEnterHandler = useCallback(
  (index: number) => {
    if (dragItem.current !== index && dragOverItem.current !== index) {
      dragOverItem.current = index;
      const newData = deepClone(copyData.current);
      const dragData = newData[dragItem.current];
      newData.splice(dragItem.current, 1);
      newData.splice(dragOverItem.current, 0, dragData);
      setSortedData(newData);
      onDragEnter?.();
    }
  },
  [onDragEnter]
);
const dragEndHandler = useCallback(() => {
  updateData?.(sortedData);
  onDragEnd?.();
}, [sortedData, updateData, onDragEnd]);
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[正则表达式匹配信用卡]]></title>
        <id>https://blog.icehoney.me/posts/2023-07-09-credit-regex/</id>
        <link href="https://blog.icehoney.me/posts/2023-07-09-credit-regex/">
        </link>
        <updated>2023-07-09T13:41:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[QR code 生成的相关参数]]></title>
        <id>https://blog.icehoney.me/posts/2023-03-03-qrcode-version/</id>
        <link href="https://blog.icehoney.me/posts/2023-03-03-qrcode-version/">
        </link>
        <updated>2023-03-03T20:42:00.000Z</updated>
        <summary type="html"><![CDATA[QR code 本身就是把文字生成一个二维码的过程，顶多指定一下纠错等级。但是有些硬件设备只支持特定参数的二维码，所以我就查了一下二维码的相关规范了解一下生成过程中需要哪些参数。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何使用TypeScript进行后端开发]]></title>
        <id>https://blog.icehoney.me/posts/2022-10-29-typescript-backend/</id>
        <link href="https://blog.icehoney.me/posts/2022-10-29-typescript-backend/">
        </link>
        <updated>2022-10-29T11:47:00.000Z</updated>
        <summary type="html"><![CDATA[前端有 HMR 技术可以实在自动热加载。后端实现这个功能其实也很简单。 首先需要按照 nodemon 和 ts-node。
我们使用 pnpm 进行包管理。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[安卓逆向的经验记录]]></title>
        <id>https://blog.icehoney.me/posts/2023-01-14-android-reverse/</id>
        <link href="https://blog.icehoney.me/posts/2023-01-14-android-reverse/">
        </link>
        <updated>2023-01-14T13:05:00.000Z</updated>
        <summary type="html"><![CDATA[jadx -d distfold ./cookiexxx.dex
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[网页调用摄像头读取QR code]]></title>
        <id>https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/</id>
        <link href="https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/">
        </link>
        <updated>2022-12-17T17:29:00.000Z</updated>
        <summary type="html"><![CDATA[videoId = 'video',
  scanDelay = 500,
  constraints = {
    facingMode: 'environment'
  },
  className = '',
  onResult
}) => {
  const stopRef = useRef(false);
  const videoRef = useRef(null);]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何编写Telegram Bot]]></title>
        <id>https://blog.icehoney.me/posts/2022-09-24-telegram-bot/</id>
        <link href="https://blog.icehoney.me/posts/2022-09-24-telegram-bot/">
        </link>
        <updated>2022-09-24T11:07:00.000Z</updated>
        <summary type="html"><![CDATA[const message = I can help you to query MAPCODE with Telegram.\nYou can copy plus code from Google Maps and paste it to tell me.;
  ctx.reply(message);
});]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用MobX管理React的状态]]></title>
        <id>https://blog.icehoney.me/posts/2022-08-07-mobx-react/</id>
        <link href="https://blog.icehoney.me/posts/2022-08-07-mobx-react/">
        </link>
        <updated>2022-08-07T14:43:00.000Z</updated>
        <summary type="html"><![CDATA[this.list = this.activeTodos;
  };]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[TypeScript中应该禁止使用enum]]></title>
        <id>https://blog.icehoney.me/posts/2022-07-04-typescript-enum/</id>
        <link href="https://blog.icehoney.me/posts/2022-07-04-typescript-enum/">
        </link>
        <updated>2022-07-04T20:37:00.000Z</updated>
        <summary type="html"><![CDATA[function fetchJSON(url: string, method: HTTPRequestMethodType) {
  return fetch(url, { method }).then(response => response.json());
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS 关于颜色的相关处理]]></title>
        <id>https://blog.icehoney.me/posts/2021-10-02-js-color/</id>
        <link href="https://blog.icehoney.me/posts/2021-10-02-js-color/">
        </link>
        <updated>2021-10-02T10:26:00.000Z</updated>
        <summary type="html"><![CDATA[}
  get hslColor() {
    return this.RGBToHSL(this.rgbColor);
  }]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS中关于深拷贝和浅拷贝]]></title>
        <id>https://blog.icehoney.me/posts/2022-06-20-deep-copy/</id>
        <link href="https://blog.icehoney.me/posts/2022-06-20-deep-copy/">
        </link>
        <updated>2022-06-20T19:37:00.000Z</updated>
        <summary type="html"><![CDATA[}
  if (isMap(val)) {
    return new Map(val) as typeof val;
  }
  if (isSet(val)) {
    return new Set(val) as typeof val;
  }
  if (isRegExp(val)) {
    return new RegExp(val.source, val.flags) as typeof val;
  }
  return Object.keys(val).reduce((acc, key) => {
    acc[key as keyof T] = deepClone(val[key as keyof T]);
    return acc;
  }, {} as T);
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git 提交规范]]></title>
        <id>https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/</id>
        <link href="https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/">
        </link>
        <updated>2022-07-23T20:37:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何实现虚拟滚动条]]></title>
        <id>https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/</id>
        <link href="https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/">
        </link>
        <updated>2022-05-12T19:25:00.000Z</updated>
        <summary type="html"><![CDATA[最近在做UI组件，发现下拉组件经常会有很多选项导致渲染的DOM过多，在低性能的设备上交互变的很卡。例如最常见的需求就是下拉选择所在国家或者地区，全世界有两百多个国家或者地区。
如果把所有国家或者地区都渲染出来必然会导致DOM过多，在低性能设备上滚动起来都会很卡。这时候就需要使用虚拟滚动条来提高渲染性能。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac M1系统配置C++环境]]></title>
        <id>https://blog.icehoney.me/posts/2022-04-13-m1-cpp/</id>
        <link href="https://blog.icehoney.me/posts/2022-04-13-m1-cpp/">
        </link>
        <updated>2022-04-13T20:03:00.000Z</updated>
        <summary type="html"><![CDATA[brew install gcc cmake
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何瘦身docker镜像]]></title>
        <id>https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/</id>
        <link href="https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/">
        </link>
        <updated>2021-09-09T21:44:00.000Z</updated>
        <summary type="html"><![CDATA[大家都知道前端网站编译需要安装很多依赖，但这些依赖在网站运行的时候并不需要。那如何才能做到，编译之后丢弃这些不用的依赖呢？ 我一开始尝试主动删除，但发现并没有减少 docker 的大小。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github 存储大文件]]></title>
        <id>https://blog.icehoney.me/posts/2022-02-10-github-lfs/</id>
        <link href="https://blog.icehoney.me/posts/2022-02-10-github-lfs/">
        </link>
        <updated>2022-02-10T23:16:00.000Z</updated>
        <summary type="html"><![CDATA[Delta compression using up to 10 threads
Compressing objects: 100% (17/17), done.
Writing objects: 100% (17/17), 153.95 MiB | 13.82 MiB/s, done.
Total 17 (delta 4), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (4/4), completed with 3 local objects.
remote: error: Trace:
remote: error: See http://git.io/iEPt8g for more information.
remote: error: File xxx.db is 259.50 MB; this exceeds GitHub's file size limit of 100.00 MB
remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.
To https://github.com/acgotaku/switch.git
 ! [remote rejected] master -> master (pre-receive hook declined)
error: failed to push some refs to 'https://github.com/{user}/{repo}.git'
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[禁用页面滚动]]></title>
        <id>https://blog.icehoney.me/posts/2022-03-13-scroll-lock/</id>
        <link href="https://blog.icehoney.me/posts/2022-03-13-scroll-lock/">
        </link>
        <updated>2022-03-13T15:11:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[React 实现 Tabs 组件]]></title>
        <id>https://blog.icehoney.me/posts/2022-01-27-react-tabs/</id>
        <link href="https://blog.icehoney.me/posts/2022-01-27-react-tabs/">
        </link>
        <updated>2022-01-27T20:16:00.000Z</updated>
        <summary type="html"><![CDATA[基于 Vue 框架来实现各种 UI 组件之前有讲过，并且讲述了复合组件如何传递数据。一种方式是使用 Provide / inject， 另外一种是传统的 props 和 $emit()。
但是 React 下复合组件如何实现，和 Vue 相比差距还是挺大的。接下来就讲述经典的 Tabs 组件如何来实现。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[代理Sentry的请求]]></title>
        <id>https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/</id>
        <link href="https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/">
        </link>
        <updated>2021-12-30T22:21:00.000Z</updated>
        <summary type="html"><![CDATA[添加 tunnel 选项，Sentry 就会把请求发到这个路径下，然后我们后台再处理转发。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS如何处理固定Header哈希标记跳转的问题]]></title>
        <id>https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/</id>
        <link href="https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/">
        </link>
        <updated>2021-11-20T21:21:00.000Z</updated>
        <summary type="html"><![CDATA[h1[id] {
  padding-top: var(--header-height);
  margin-top: calc(var(--header-height) * -1);
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何检测用户启动广告屏蔽插件]]></title>
        <id>https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/</id>
        <link href="https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/">
        </link>
        <updated>2021-07-25T14:32:00.000Z</updated>
        <summary type="html"><![CDATA[return isDisplayNone(node.parentElement);
}]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[ELK收集Docker项目的日志]]></title>
        <id>https://blog.icehoney.me/posts/2021-06-14-elk-docker/</id>
        <link href="https://blog.icehoney.me/posts/2021-06-14-elk-docker/">
        </link>
        <updated>2021-06-14T11:21:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Django使用CKEditor的相关经验]]></title>
        <id>https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/</id>
        <link href="https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/">
        </link>
        <updated>2021-05-19T22:06:00.000Z</updated>
        <summary type="html"><![CDATA[default_acl = 'private'
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Service Worker的 Web Push 功能]]></title>
        <id>https://blog.icehoney.me/posts/2021-04-25-service-worker-push/</id>
        <link href="https://blog.icehoney.me/posts/2021-04-25-service-worker-push/">
        </link>
        <updated>2021-04-25T12:27:00.000Z</updated>
        <summary type="html"><![CDATA[function generateVAPIDKeys() {
  const vapidKeys = webpush.generateVAPIDKeys();]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue代码风格]]></title>
        <id>https://blog.icehoney.me/posts/2021-03-06-vue-code-style/</id>
        <link href="https://blog.icehoney.me/posts/2021-03-06-vue-code-style/">
        </link>
        <updated>2021-03-06T12:02:00.000Z</updated>
        <summary type="html"><![CDATA[@on-blur="updateDate"
        >
]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据库查询的N+1问题]]></title>
        <id>https://blog.icehoney.me/posts/2021-02-20-sql-n-1/</id>
        <link href="https://blog.icehoney.me/posts/2021-02-20-sql-n-1/">
        </link>
        <updated>2021-02-20T13:44:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[提高网页的易读性]]></title>
        <id>https://blog.icehoney.me/posts/2021-02-06-web-accessibility/</id>
        <link href="https://blog.icehoney.me/posts/2021-02-06-web-accessibility/">
        </link>
        <updated>2021-02-06T11:04:00.000Z</updated>
        <summary type="html"><![CDATA[正常人可以通过鼠标和键盘来操作浏览器，使用滚轮来滚动网页，使用鼠标左键和右键来执行操作，使用键盘输入内容。但是对于残疾人来说可能就不是这样的了，如果一个人身体行动不便只能通过键盘敲击来操作电脑，无法使用鼠标的情况下，如果网页不支持键盘 Tab 键来切换各种点击按钮，那就会给残疾人的使用带来困难。如果视力不好的人只能借助屏幕阅读器来查看网页，如果按钮或者图片没有合适的标签信息，那就无法通过屏幕阅读器来听到这个按钮或者图片的含义。我们不仅要考虑正常人如何查看网页，也需要顾及到特殊人群的需求，这样才能让每个人都享受到互联网带来的便利。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript的加载优化]]></title>
        <id>https://blog.icehoney.me/posts/2021-01-23-javascript-performance/</id>
        <link href="https://blog.icehoney.me/posts/2021-01-23-javascript-performance/">
        </link>
        <updated>2021-01-23T16:11:00.000Z</updated>
        <summary type="html"><![CDATA[使用terser来压缩 JavaScript 代码。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端中debounce和throttle函数说明]]></title>
        <id>https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/</id>
        <link href="https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/">
        </link>
        <updated>2020-10-17T20:52:00.000Z</updated>
        <summary type="html"><![CDATA[throttle (节流)函数的代码实现：]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端开发中的加载性能优化]]></title>
        <id>https://blog.icehoney.me/posts/2020-12-20-loading-performance/</id>
        <link href="https://blog.icehoney.me/posts/2020-12-20-loading-performance/">
        </link>
        <updated>2020-12-20T10:48:00.000Z</updated>
        <summary type="html"><![CDATA[在 2010 年左右，人们都爱使用 jQuery 框架进行开发，因为 jQuery 抹平了浏览器之间的差异性，大大提高了开发效率。但随着浏览器吸收了 jQuery 的各种优点，例如可以使用document.querySelector很方便的像 jQuery 一样选择元素。现在的前端开发已经不那么需要 jQuery 了，你可以访问You might not need jQuery来查找替代的方法。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[vue实现datepicker组件]]></title>
        <id>https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/</id>
        <link href="https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/">
        </link>
        <updated>2020-11-30T14:07:00.000Z</updated>
        <summary type="html"><![CDATA[点击日期输入框，需要弹出下拉菜单，下拉菜单位置的计算并不简单，需要考虑到浏览器的窗口，如果输入框在下方，需要在上方弹出，如果输入框在上方，需要在下方弹出。
并且用户滑动到可视范围以外的话，还要可以隐藏。所以我们这里引用了一个比较成熟的第三方库来解决这个问题。
popperjs
这个库可以帮我们解决上面的问题，节约开发的成本。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[在浏览器上显示TIF图像]]></title>
        <id>https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/</id>
        <link href="https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/">
        </link>
        <updated>2020-09-10T20:57:00.000Z</updated>
        <summary type="html"><![CDATA[const imgData = new ImageData(
          new Uint8ClampedArray(rgba.buffer),
          widh,
          height
        );
        ctx?.putImageData(imgData, 0, 0);
        canvas.toBlob(blob => {
          this.imgData = URL.createObjectURL(blob);
        });
      });
  }
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue中组件的设计]]></title>
        <id>https://blog.icehoney.me/posts/2020-07-30-vue-components/</id>
        <link href="https://blog.icehoney.me/posts/2020-07-30-vue-components/">
        </link>
        <updated>2020-07-30T22:08:00.000Z</updated>
        <summary type="html"><![CDATA[created() {
  this.select.options.push(this);
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[简单多边形的判定]]></title>
        <id>https://blog.icehoney.me/posts/2020-08-09-simple-polygon/</id>
        <link href="https://blog.icehoney.me/posts/2020-08-09-simple-polygon/">
        </link>
        <updated>2020-08-09T14:50:00.000Z</updated>
        <summary type="html"><![CDATA[);
}]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[React的TypeScript写法]]></title>
        <id>https://blog.icehoney.me/posts/2020-05-22-react-typescript/</id>
        <link href="https://blog.icehoney.me/posts/2020-05-22-react-typescript/">
        </link>
        <updated>2020-05-22T22:43:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue实现双Slider]]></title>
        <id>https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/</id>
        <link href="https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/">
        </link>
        <updated>2020-06-14T21:31:00.000Z</updated>
        <summary type="html"><![CDATA[前端由于历史原因，基本上没有组件的概念，原生的 HTML 元素提供的功能非常简陋，所以都需要开发者自己实现或者定制组件。这次讲讲双 Slider 的实现。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue表单组件如何自动化输入]]></title>
        <id>https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/</id>
        <link href="https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/">
        </link>
        <updated>2020-04-23T22:43:00.000Z</updated>
        <summary type="html"><![CDATA[对于传统的表单我们可以很简单的自动化输入过程，例如checkbox和input元素，我们可以自动选中和输入内容：]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue下使用jest进行单元测试]]></title>
        <id>https://blog.icehoney.me/posts/2020-03-19-vue-jest/</id>
        <link href="https://blog.icehoney.me/posts/2020-03-19-vue-jest/">
        </link>
        <updated>2020-03-19T21:56:00.000Z</updated>
        <summary type="html"><![CDATA[当今的前端开发都离不开 webpack 进行打包，我们使用各种各样的 loader 来处理代码，所以可以使用例如import语法来引用 JS 文件，但是 node 环境目前还不支持原生的 es6 import文件。所以在使用 jest 的时候，我们需要用 babel 进行代码转换，好在 @vue/cli-plugin-unit-jest 都已经给配置好了，使用预置的 preset 就行。我是基于 TS 开发，所以用的 preset 是 @vue/cli-plugin-unit-jest/presets/typescript-and-babel。但是我们在代码里使用的一些 webpack 的特殊语法就不太好对应了，例如我有使用inline loader来打包特殊的 SVG 文件到代码中，但是在测试的时候就会遇到无法 import 的尴尬问题。这时候的解决方案就是使用moduleNameMapper:]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端开发如何防止逆向以及对策]]></title>
        <id>https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/</id>
        <link href="https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/">
        </link>
        <updated>2020-02-22T18:03:00.000Z</updated>
        <summary type="html"><![CDATA[window.Image = function() {};
Object.defineProperty(window, 'Image', { writable: false });
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端部署之CDN的那些事情]]></title>
        <id>https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/</id>
        <link href="https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/">
        </link>
        <updated>2020-01-14T22:59:00.000Z</updated>
        <summary type="html"><![CDATA[由于 Service Workers 的导入使得 CDN 部署变得有些麻烦，不过这些问题好在都能找到解决方案。还有一点是 Chrome 的 Network 面板里的 offline 模式不能测试 Service Workers 的离线。需要自己手动拔网线才能测试。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[iOS12下Safari浏览器的BUG]]></title>
        <id>https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/</id>
        <link href="https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/">
        </link>
        <updated>2019-12-10T22:39:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Docker运行node项目]]></title>
        <id>https://blog.icehoney.me/posts/2019-09-23-node-docker/</id>
        <link href="https://blog.icehoney.me/posts/2019-09-23-node-docker/">
        </link>
        <updated>2019-09-23T22:43:00.000Z</updated>
        <summary type="html"><![CDATA[使用 Docker 容器化开发和部署，是当今的主流。因为程序跑在了容器之内，我们再也不用担心安装各种依赖和版本管理。接下来就来介绍如何使用 Docker 开发自己的 node 项目。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[计算贝塞尔曲线的长度]]></title>
        <id>https://blog.icehoney.me/posts/2019-10-22-bezier-length/</id>
        <link href="https://blog.icehoney.me/posts/2019-10-22-bezier-length/">
        </link>
        <updated>2019-10-22T22:28:00.000Z</updated>
        <summary type="html"><![CDATA[这次讲述的是二阶贝塞尔曲线的长度计算。首先计算曲线的长度之前，我们需要知道曲线的数学方程表达式，由于目前博客还未支持数学表达式的显示，所以我只能帖出wiki 链接。求曲线的长度，本质上是很难计算出精确值的，但只要近似值的误差绝对小，在实际使用中也是足够的。求曲线的长度本质上是进行定积分的计算。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[求经纬度两点距离]]></title>
        <id>https://blog.icehoney.me/posts/2019-09-11-distance-latlng/</id>
        <link href="https://blog.icehoney.me/posts/2019-09-11-distance-latlng/">
        </link>
        <updated>2019-09-11T22:43:00.000Z</updated>
        <summary type="html"><![CDATA[世界大地测量系统是三维描述地球的位置信息，对于导航或者显示来说很不方便。所以在平面上使用麦卡托投影（Mercator projection），可以把三维平铺到二维。但是注意，麦卡托投影会使面积发生变形。所以投影出来的坐标是不能直接用来计算距离的。维度越高，变形就越大。所以需要计算比例因子来纠正。但对于两个坐标纬度相差比较大的情况下，计算就更复杂了。所以不推荐使用麦卡托投影来计算距离。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vue中如何设计面包屑]]></title>
        <id>https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/</id>
        <link href="https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/">
        </link>
        <updated>2019-07-28T23:21:00.000Z</updated>
        <summary type="html"><![CDATA[component: userSettings
      },
      {
        path: '',
        name: 'user-dashboard'
      }
      // ...
    ]
  }
]
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github如何省略每次输入验证信息]]></title>
        <id>https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/</id>
        <link href="https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/">
        </link>
        <updated>2019-06-23T20:21:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用WebAssembly编译C++到JS]]></title>
        <id>https://blog.icehoney.me/posts/2019-04-28-webassmebly/</id>
        <link href="https://blog.icehoney.me/posts/2019-04-28-webassmebly/">
        </link>
        <updated>2019-04-28T20:51:00.000Z</updated>
        <summary type="html"><![CDATA[官方的 demo 是使用 src 的方式来引入，并且暴露成 Module 的全局变量。但是现代化的 Web 项目都是使用 webpack 打包，并且自动化引入的。所以我们也不想为了 WebAssembly 搞特殊。接下来就讲述如何配置来引入。首先，使用 emscripten 输出 mjs 文件，这样才可以作为模块被导入。具体的编译参数可以参照emcc。
首先，wasm 格式并不能被 webpack 正确识别，我们需要添加 loader]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端中的e2e测试]]></title>
        <id>https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/</id>
        <link href="https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/">
        </link>
        <updated>2019-04-06T12:12:00.000Z</updated>
        <summary type="html"><![CDATA[customassertionspath: ["tests/e2e/custom-assertions"],
      globals_path: "globalsModule.js",
      src_folders: ["tests/e2e/specs/web"]]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[localStorage互斥锁的使用]]></title>
        <id>https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/</id>
        <link href="https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/">
        </link>
        <updated>2019-02-28T20:20:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[跨域请求中的cookies处理]]></title>
        <id>https://blog.icehoney.me/posts/2018-09-08-cors-cookie/</id>
        <link href="https://blog.icehoney.me/posts/2018-09-08-cors-cookie/">
        </link>
        <updated>2018-09-08T23:07:00.000Z</updated>
        <summary type="html"><![CDATA[现在的前后端开发已经完全分离，后端服务器和前端服务器分别部署在不同的服务器。同时也对应不同的域名，所以跨域请求领域方面的知识也需要补充。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[亚马逊S3服务简单介绍]]></title>
        <id>https://blog.icehoney.me/posts/2019-01-23-aws-s3/</id>
        <link href="https://blog.icehoney.me/posts/2019-01-23-aws-s3/">
        </link>
        <updated>2019-01-23T21:20:00.000Z</updated>
        <summary type="html"><![CDATA[需要云服务有稳定性保证，并且可以批量上传文件。可以设置上传和下载链接的有效期。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端开发地图应用的调研]]></title>
        <id>https://blog.icehoney.me/posts/2018-11-27-js-map/</id>
        <link href="https://blog.icehoney.me/posts/2018-11-27-js-map/">
        </link>
        <updated>2018-11-27T21:20:00.000Z</updated>
        <summary type="html"><![CDATA[苹果居然也出了网页版本的地图产品MapKit JS，可谓是良心。但是目前还处于 Beta 版本。如果以后要考虑产品的全平台化，显然不是一个很好的选择。不过苹果的产品可以在国内国外使用不用太担心地图偏移问题，而且可以贴图和绘制图形，但是目前网页版还不能绘制贝塞尔曲线，iOS 客户端倒是可以。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[后端开发的技术总结]]></title>
        <id>https://blog.icehoney.me/posts/2018-10-15-backend-development/</id>
        <link href="https://blog.icehoney.me/posts/2018-10-15-backend-development/">
        </link>
        <updated>2018-10-15T21:20:00.000Z</updated>
        <summary type="html"><![CDATA[Models 主要是用来描述数据库结构，表与表之间的关系。还可以定义对数据库操作的方法，数据之间复杂的业务逻辑基本都是放在这里。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Web离线的解决方案]]></title>
        <id>https://blog.icehoney.me/posts/2018-07-06-offline-web/</id>
        <link href="https://blog.icehoney.me/posts/2018-07-06-offline-web/">
        </link>
        <updated>2018-07-06T23:25:00.000Z</updated>
        <summary type="html"><![CDATA[这里要补充的一点是，针对 https 的 Application Cache 是无法完成跨域请求的，所以请慎重。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[伪随机的种子问题]]></title>
        <id>https://blog.icehoney.me/posts/2018-08-01-random-seed/</id>
        <link href="https://blog.icehoney.me/posts/2018-08-01-random-seed/">
        </link>
        <updated>2018-08-01T22:07:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript开发中的性能优化]]></title>
        <id>https://blog.icehoney.me/posts/2018-04-25-javascript-performance/</id>
        <link href="https://blog.icehoney.me/posts/2018-04-25-javascript-performance/">
        </link>
        <updated>2018-04-25T23:22:00.000Z</updated>
        <summary type="html"><![CDATA[最近工作比较清闲，5 月又换了一个工作环境。总结下最近看的有关 JavaScript 性能的知识，并记下来供未来的自己参考。希望自己能不忘初心，继续成长！]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何封装第三方vue组件]]></title>
        <id>https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/</id>
        <link href="https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/">
        </link>
        <updated>2018-05-29T23:19:00.000Z</updated>
        <summary type="html"><![CDATA[这次封装的就是 element 的前端 vue 框架，因为框架本身对 iOS 兼容性不好，所以需要二次封装。封装的是一个 select 组件。所以需要数据的双向绑定，官方教程也已经解释了。
v-model 本质上就是绑定一个值和监听相应的事件。
这次本质是封装的一个 input 元素，所以我们需要手动绑定 value 和监听事件。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[浏览器的渲染性能]]></title>
        <id>https://blog.icehoney.me/posts/2018-02-13-rendering-performance/</id>
        <link href="https://blog.icehoney.me/posts/2018-02-13-rendering-performance/">
        </link>
        <updated>2018-02-13T20:44:00.000Z</updated>
        <summary type="html"><![CDATA[如果修改了元素的布局属性，也就是改变了元素的几何属性（例如宽度，高度）。那么浏览器就必须检查所有元素，然后重新排版页面。任何受影响的部分都要重新绘制，再重新合成。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用letsencrypt为自己的网站加密]]></title>
        <id>https://blog.icehoney.me/posts/2018-04-08-website-https/</id>
        <link href="https://blog.icehoney.me/posts/2018-04-08-website-https/">
        </link>
        <updated>2018-04-08T20:51:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript中的数据类型]]></title>
        <id>https://blog.icehoney.me/posts/2018-01-16-javascript-types/</id>
        <link href="https://blog.icehoney.me/posts/2018-01-16-javascript-types/">
        </link>
        <updated>2018-01-16T22:44:00.000Z</updated>
        <summary type="html"><![CDATA[if (!Number.isNaN) {
  Number.isNaN = function(n) {
    return typeof n === 'number' && window.isNaN(n);
  };
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[网站开发中的Modal问题]]></title>
        <id>https://blog.icehoney.me/posts/2017-10-21-modal-scroll/</id>
        <link href="https://blog.icehoney.me/posts/2017-10-21-modal-scroll/">
        </link>
        <updated>2017-10-21T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[在一个方案中，由于网页内容被设置成了position:fixed，滚动条自然消失。所以滚动位置回到了浏览器的最上面才对。但是有时候遇到打开Modal的时候发现 Modal 打开之后滚动条不在最上方，这时候的原因是因为我们虽然设置了 CSS 进行了变更，但是浏览器没有进行重新绘制，我们可以使用会导致浏览器重绘的 JS API 来让浏览器更新滚动条信息，使得打开的 Modal 处于浏览器的最上方。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端开发的技术栈]]></title>
        <id>https://blog.icehoney.me/posts/2017-11-18-frontend-development/</id>
        <link href="https://blog.icehoney.me/posts/2017-11-18-frontend-development/">
        </link>
        <updated>2017-11-18T17:18:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github团队协作]]></title>
        <id>https://blog.icehoney.me/posts/2017-09-16-github-workflow/</id>
        <link href="https://blog.icehoney.me/posts/2017-09-16-github-workflow/">
        </link>
        <updated>2017-09-16T22:30:00.000Z</updated>
        <summary type="html"><![CDATA[社畜也快半年了，说实话工作确实没有学生生活有趣。每天基本都是坐在电脑前写代码，可能我是那种更喜欢新鲜生活的人吧。对于重复的生活很容易就厌倦了，但生活由不得自己，上班的理由很简单，仅仅是因为穷。学生时代写代码基本都是一个人单干，但进入公司就开始正式的团队协作，也算是学到很多团队合作的知识了吧。特别是利用 Github 进行高效的合作开发。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS技巧和工作总结]]></title>
        <id>https://blog.icehoney.me/posts/2017-08-06-css-trick/</id>
        <link href="https://blog.icehoney.me/posts/2017-08-06-css-trick/">
        </link>
        <updated>2017-08-06T15:30:00.000Z</updated>
        <summary type="html"><![CDATA[这里有个重点概念是堆叠上下文，那么元素是如何形成堆叠上下文呢？]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript对象的常见操作]]></title>
        <id>https://blog.icehoney.me/posts/2017-06-18-javascript-object/</id>
        <link href="https://blog.icehoney.me/posts/2017-06-18-javascript-object/">
        </link>
        <updated>2017-06-18T22:13:00.000Z</updated>
        <summary type="html"><![CDATA[针对数组，现在已经不推荐用 for 循环来进行处理了，请使用数组的map, filter，reduce来处理数组的操作。相信这三个方法足以满足需求。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux高并发系统参数优化]]></title>
        <id>https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/</id>
        <link href="https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/">
        </link>
        <updated>2016-11-27T18:16:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Golang语言学习分享]]></title>
        <id>https://blog.icehoney.me/posts/2017-01-29-go/</id>
        <link href="https://blog.icehoney.me/posts/2017-01-29-go/">
        </link>
        <updated>2017-01-29T09:49:00.000Z</updated>
        <summary type="html"><![CDATA[在开发程序的过程中，为了操作方便，我们会定义各种各样的结构体来表示数据。很多情况下，结构体需要进行网络通讯，这时候我们就不得不序列化结构体进行网络发送。就像前端开发中把 JSON 对象转换成字符串发送出去一样。但是序列化却是一个很耗时的过程，处理不当就会成为系统的瓶颈所在。所以我列举出了几种序列化方案，推荐大家使用。我最后选择的是gencode。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS笔记和杂谈]]></title>
        <id>https://blog.icehoney.me/posts/2017-05-07-css/</id>
        <link href="https://blog.icehoney.me/posts/2017-05-07-css/">
        </link>
        <updated>2017-05-07T21:49:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[逆向JavaScript经验分享]]></title>
        <id>https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/</id>
        <link href="https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/">
        </link>
        <updated>2016-12-19T19:16:00.000Z</updated>
        <summary type="html"><![CDATA[最近心血来潮，想看个国漫。结果爱奇艺独播，还每集那么老长的广告，可是把我恶心的不要不要的。然后为了展现程序员的自我修养，我要分析下这个视频的源文件地址，直接观看，跳过广告！凭着我分析百度网盘的经验，花了三个晚上，总算搞定了。顺便分享下整个逆向分析过程，和大家学习。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[模块化JavaScript开发]]></title>
        <id>https://blog.icehoney.me/posts/2016-06-30-webpack/</id>
        <link href="https://blog.icehoney.me/posts/2016-06-30-webpack/">
        </link>
        <updated>2016-06-30T16:43:00.000Z</updated>
        <summary type="html"><![CDATA[以前开发 Web 项目，全部是服务器来渲染页面，从数据库读入数据，浏览器只负责解释页面，这种情况下不考虑交互性，其实完全不用写任何 JS 代码。但是缺点也很大，处理全部交给服务器，服务器压力大。而且每次都是刷新加载，所以用户体验也不是很好。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Latex书写论文]]></title>
        <id>https://blog.icehoney.me/posts/2016-09-20-latex/</id>
        <link href="https://blog.icehoney.me/posts/2016-09-20-latex/">
        </link>
        <updated>2016-09-20T20:16:00.000Z</updated>
        <summary type="html"><![CDATA[网上有很多 Latex 的学习资料，不过我们也没必要详细学习，在此介绍一个简单的学习资料。一份不太简短的 LATEX 介绍基本上看完这个文档就可以大致明白如何利用 Latex 书写论文。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[WebGL渲染的知识介绍]]></title>
        <id>https://blog.icehoney.me/posts/2016-05-05-webgl-render/</id>
        <link href="https://blog.icehoney.me/posts/2016-05-05-webgl-render/">
        </link>
        <updated>2016-05-05T10:43:00.000Z</updated>
        <summary type="html"><![CDATA[
  attribute vec3 position;
  uniform   mat4 mvpMatrix;]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于JavaScript跨域请求的相关知识]]></title>
        <id>https://blog.icehoney.me/posts/2016-03-21-cors-options-method/</id>
        <link href="https://blog.icehoney.me/posts/2016-03-21-cors-options-method/">
        </link>
        <updated>2016-03-21T14:33:00.000Z</updated>
        <summary type="html"><![CDATA[HTTP access control (CORS)]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用最小费用最大流模型解决酒店管理收益最大化问题]]></title>
        <id>https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/</id>
        <link href="https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/">
        </link>
        <updated>2015-12-29T11:15:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[解决Dota2在Archlinux下的各种疑难杂症]]></title>
        <id>https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/</id>
        <link href="https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/">
        </link>
        <updated>2015-12-01T21:58:00.000Z</updated>
        <summary type="html"><![CDATA[V 社的 steam 平台在 Linux 下出了这么多年还是没解决输入法的问题.本身官方也就只支持 Ubuntu,所以在其它发行版也就难免会有各种各样的问题.容我慢慢道来]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux和Win 10 在 UEFI下 双启动]]></title>
        <id>https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/</id>
        <link href="https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/">
        </link>
        <updated>2015-10-28T23:32:00.000Z</updated>
        <summary type="html"><![CDATA[要安装 Archlinux,首先得对 Windows 进行相应的配置才行.Windows 的安装就不用我介绍了,大家基本都会的.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Python实现Histogram_equalization算法]]></title>
        <id>https://blog.icehoney.me/posts/2015-10-05-python-image-process/</id>
        <link href="https://blog.icehoney.me/posts/2015-10-05-python-image-process/">
        </link>
        <updated>2015-10-05T23:54:00.000Z</updated>
        <summary type="html"><![CDATA[色差的范围只有 0-255.就拿这个作为例子来讲解吧~ 然后就要讲解如何从数值上来分析一张图片是拍的好呢还是不好呢,如果是一张好照片,那这张照片必然是
对比度鲜明,该亮的地方亮,该暗的地方暗.也就是大家所说的曝光合适.然后我们从照片的二进制数据中去读取每个像素的数值,然后画出直方图.发现每个数值的
像素分布比较均匀,就说明这是一张好照片.但是现实生活中,我们可能会拍到一些曝光不足导致整体照片很暗或者曝光过了导致照片过亮的情况.在不能重拍的情况
下只能使用算法来进行优化了,本文就是来说明这个算法的实现的.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chrome扩展和Web Page 进行通讯]]></title>
        <id>https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/</id>
        <link href="https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/">
        </link>
        <updated>2015-08-25T19:54:00.000Z</updated>
        <summary type="html"><![CDATA[首先在 manifest.json 里声明权限]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chromebook Pixel (2013) 安装Linux的方法]]></title>
        <id>https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/</id>
        <link href="https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/">
        </link>
        <updated>2015-04-20T19:54:00.000Z</updated>
        <summary type="html"><![CDATA[在终端里面输入下面的指令：]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[解压和打包安卓DAT文件]]></title>
        <id>https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/</id>
        <link href="https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/">
        </link>
        <updated>2015-07-28T19:54:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS使用box-shadow和border-radius的妙用]]></title>
        <id>https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/</id>
        <link href="https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/">
        </link>
        <updated>2015-03-17T15:08:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[突破同源策略限制的方法]]></title>
        <id>https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/</id>
        <link href="https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/">
        </link>
        <updated>2015-04-20T19:54:00.000Z</updated>
        <summary type="html"><![CDATA[同源策略（Same Origin Policy）是一种约定，它是浏览器最核心也是最基本的安全功能，如果缺少了同源策略，则浏览器的正常功能可能会受到影响。可以说 Web 是构建在同源策略的基础之上的，浏览器只是针对同源策略的一种实现。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Windows下如何进行进程注入]]></title>
        <id>https://blog.icehoney.me/posts/2015-02-28-windows-injection/</id>
        <link href="https://blog.icehoney.me/posts/2015-02-28-windows-injection/">
        </link>
        <updated>2015-02-28T15:53:00.000Z</updated>
        <summary type="html"><![CDATA[使用参数是进程的 PID，可以使用任务管理器查看进程的 PID，打开成功之后返回程序的句柄。]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Aria2下载百度网盘和115的资源]]></title>
        <id>https://blog.icehoney.me/posts/2015-01-31-aria2-download/</id>
        <link href="https://blog.icehoney.me/posts/2015-01-31-aria2-download/">
        </link>
        <updated>2015-01-31T09:41:00.000Z</updated>
        <summary type="html"><![CDATA[RPC 模式就是启动之后什么也不做,等着通过 RPC 接口接受下载请求.下载完也不会退出,一直等待.
使用命令行加参数的方式配置 Aria2 非常不推荐,建议使用配置文件的方式,下面贴出我的配置文件.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript处理二进制数据]]></title>
        <id>https://blog.icehoney.me/posts/2014-11-23-javascript-binary/</id>
        <link href="https://blog.icehoney.me/posts/2014-11-23-javascript-binary/">
        </link>
        <updated>2014-11-23T14:30:00.000Z</updated>
        <summary type="html"><![CDATA[};
    port.postMessage(data);
  };
  reader.readAsBinaryString(blob);
};]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Postfix,Dovecot和Mysql配置邮件服务器]]></title>
        <id>https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/</id>
        <link href="https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/">
        </link>
        <updated>2014-12-25T15:41:00.000Z</updated>
        <summary type="html"><![CDATA[当我们执行 service dovecot restart 时,发现根本没有这个 service.
其实 dovecot 已经在运行了,我们只需执行 dovecot reload 即可]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[计算机中的字节序问题]]></title>
        <id>https://blog.icehoney.me/posts/2014-09-30-computer-endian/</id>
        <link href="https://blog.icehoney.me/posts/2014-09-30-computer-endian/">
        </link>
        <updated>2014-09-30T12:30:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[扇贝单词助手发布]]></title>
        <id>https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/</id>
        <link href="https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/">
        </link>
        <updated>2014-10-30T18:30:00.000Z</updated>
        <summary type="html"><![CDATA[然后我就趁着国庆就开坑了,binux 也给了我很多参考资料.因为之前也开发过 Chrome 的扩展,所以对 Chrome 提供的 API 比较熟悉.这里就介绍下使用的相关的 JavaScript 的知识吧~]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[chrome扩展开发经验记录]]></title>
        <id>https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/</id>
        <link href="https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/">
        </link>
        <updated>2014-08-23T16:01:00.000Z</updated>
        <summary type="html"><![CDATA[Content Scripts 可以获取到匹配网址的 DOM,并进行修改.Content Scripts 也可以使用 chrome 的 API,但是只能使用比较有限的 API.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[百度网盘新版API]]></title>
        <id>https://blog.icehoney.me/posts/2014-07-02-baidu-pan/</id>
        <link href="https://blog.icehoney.me/posts/2014-07-02-baidu-pan/">
        </link>
        <updated>2014-07-02T14:09:00.000Z</updated>
        <summary type="html"><![CDATA[msg: msg,
    sticky: false
  });
};
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux下恢复误删除的文件]]></title>
        <id>https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/</id>
        <link href="https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/">
        </link>
        <updated>2014-07-21T17:39:00.000Z</updated>
        <summary type="html"><![CDATA[`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下声卡的设置与折腾]]></title>
        <id>https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/</id>
        <link href="https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/">
        </link>
        <updated>2014-06-05T09:22:00.000Z</updated>
        <summary type="html"><![CDATA[声音,因为 alsa 默认是静音的需要手动解除才行. 这就需要去官方源安装 alsamixer 工具. alsa-utils
我自己安装的 alsamixer 使用界面是:]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript中一个经典的正则例子]]></title>
        <id>https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/</id>
        <link href="https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/">
        </link>
        <updated>2014-05-08T09:44:00.000Z</updated>
        <summary type="html"><![CDATA[(\/{0,3})
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[面试笔记]]></title>
        <id>https://blog.icehoney.me/posts/2014-04-01-interview/</id>
        <link href="https://blog.icehoney.me/posts/2014-04-01-interview/">
        </link>
        <updated>2014-04-01T19:20:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript函数调用的四种方式]]></title>
        <id>https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/</id>
        <link href="https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/">
        </link>
        <updated>2014-04-24T15:28:00.000Z</updated>
        <summary type="html"><![CDATA[JavaScript 函数调用除了声明时定义的形式参数,每个函数还接收两个附加的参数:this 和 arguments.参数 this 在面向的对象
编程非常重要,它的值取决于调用的模式.典型的两种函数定义方式有:]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript函数中的闭包]]></title>
        <id>https://blog.icehoney.me/posts/2014-04-30-javascript-closure/</id>
        <link href="https://blog.icehoney.me/posts/2014-04-30-javascript-closure/">
        </link>
        <updated>2014-04-30T16:18:00.000Z</updated>
        <summary type="html"><![CDATA[在定义代码块的环境中定义的(局部变量).一个经典的例子就是:]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux折腾笔记]]></title>
        <id>https://blog.icehoney.me/posts/2014-04-20-linux-notes/</id>
        <link href="https://blog.icehoney.me/posts/2014-04-20-linux-notes/">
        </link>
        <updated>2014-04-20T19:52:00.000Z</updated>
        <summary type="html"><![CDATA[观看视频遇到经典的镜头当然得录下来做成 GIF~
首先需要安装 imagemagick 这个软件包才行]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[漫无止境的三月]]></title>
        <id>https://blog.icehoney.me/posts/2014-03-08-long-march/</id>
        <link href="https://blog.icehoney.me/posts/2014-03-08-long-march/">
        </link>
        <updated>2014-03-08T12:03:00.000Z</updated>
        <summary type="html"><![CDATA[新项目就这么愉快的开坑了,前端懒的设计就直接用Bootstrap了,感觉 Bootstrap 也就只能用些组件的 UI,
布局神马的还是不符合我的胃口.项目部署的网址是:http://netkuu.icehoney.me/ 目前还是绝赞填坑中~
前端后端全部自己一个人写,希望能把自己锻炼成 full stack developer~ 现在就差数据库练手了,好久没玩数据库了.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[程序员修炼之道]]></title>
        <id>https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/</id>
        <link href="https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/">
        </link>
        <updated>2014-02-05T17:18:00.000Z</updated>
        <summary type="html"><![CDATA[这本书的精彩之处只可意会不可言传,本人文采不好,但是极力推荐.最后摘抄下这本书阐述的注重实效的程序员的特征:]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[GUI和CLI的使用比较]]></title>
        <id>https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/</id>
        <link href="https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/">
        </link>
        <updated>2014-01-18T23:06:00.000Z</updated>
        <summary type="html"><![CDATA[GUI 的好处是 WYSIWYG--所见即所得(what you see is what you get).缺点是 WYSIAYG--所见即全部所得(what you see is all you get).]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于程序运行效率的一点见解]]></title>
        <id>https://blog.icehoney.me/posts/2013-10-24-program-efficiency/</id>
        <link href="https://blog.icehoney.me/posts/2013-10-24-program-efficiency/">
        </link>
        <updated>2013-10-24T23:06:00.000Z</updated>
        <summary type="html"><![CDATA[杂度都是一样的,运行起来没啥区别的.当然对于现在的高速 CPU 和这个元素比较少的数组来说其实也没多大差别,但是不能
因为这个就去忽略程序的效率问题.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下有关无损音乐的折腾]]></title>
        <id>https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/</id>
        <link href="https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/">
        </link>
        <updated>2013-10-06T23:29:00.000Z</updated>
        <summary type="html"><![CDATA[cuetag.sh 脚本 最新版貌似有问题不能使用.
cuetag.sh file.cue *.mp3
命令很简单,在转换好的音乐文件夹下指定 cue 文件和 mp3 文件即可自动打 TAG,但是需要注意的一点是,这个脚本打的是 ID3v1 的标签,如果是非英语语言的话,
会出现乱码问题.详情请戳Mp3 标签乱码问题分析与解决方案
所以,之后我们还是要使用mp3tagiconv
这个工具来进行标签的转换使得所有的播放器都能够正确识别 mp3 音乐的标签.
for i in *.mp3; do echo "y"| mp3tagiconv "${i}" ;done
因为 mp3tagiconv 这个工具每次更新标签都会提示 yes or no ,所以我就修改了下执行方式,使得批量自动化修改.flac 格式的音乐不存在 TAG 编码问题.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下使用airbase和dhcpd建立虚拟AP]]></title>
        <id>https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/</id>
        <link href="https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/">
        </link>
        <updated>2013-08-26T21:29:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下Galaxy Nexus刷机并root]]></title>
        <id>https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/</id>
        <link href="https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/">
        </link>
        <updated>2013-07-20T14:12:00.000Z</updated>
        <summary type="html"><![CDATA[安卓本来就是 Linux 衍生的,所以必然可以用 Linux 系统进行刷机,而且效果比 Win 还要好.不需要安装驱动,只需要安装 adb 和 fastboot 即可.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Archlinux下终端进行代理的解决方案]]></title>
        <id>https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/</id>
        <link href="https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/">
        </link>
        <updated>2013-07-18T22:05:00.000Z</updated>
        <summary type="html"><![CDATA[软件来源各种各样,有的是 Google code 上的,有的是 GitHub 上的,有的就是 sourceforge 上的了.
但是在中国的大环境下不能保证上面网站的正常访问 QAQ Google 的话有 hosts 的情况下基本上是
把 http 修改成 https 就可以下载了,其余两个就只能代理进行下载软件并安装了.]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu下apache2的配置记录]]></title>
        <id>https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/</id>
        <link href="https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/">
        </link>
        <updated>2013-06-06T21:41:00.000Z</updated>
        <summary type="html"><![CDATA[启用 mod_rewrite 模块]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sublime使用笔记以及插件推荐]]></title>
        <id>https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/</id>
        <link href="https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/">
        </link>
        <updated>2013-07-02T22:06:00.000Z</updated>
        <summary type="html"><![CDATA["font_face": "Deja Vu Sans Mono",
  "font_size": 11.5,
  "ignored_packages": ["Vintage"]
}
`]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于CSS解决高度自适应和宽度自适应的问题]]></title>
        <id>https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/</id>
        <link href="https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/">
        </link>
        <updated>2013-03-10T19:09:00.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[个人博客的建立]]></title>
        <id>https://blog.icehoney.me/posts/2013-02-07-start-blog/</id>
        <link href="https://blog.icehoney.me/posts/2013-02-07-start-blog/">
        </link>
        <updated>2013-02-07T22:07:00.000Z</updated>
        <summary type="html"><![CDATA[好吧,我建立个人博客的想法其实已经差不多有一年了吧.一直没去实现...主要原因还是自己太懒...一开始想用 WordPress 搭建一个....其实我也搭建了
但是由于一直找不到好看的主题就坑在那一年多了...后来还想用 Octopress 来搭建...又由于自己当时的系统是 Win 而放弃了,现在我把自己的系统换成
Arch 并且在学习 Python,于是又开坑了...]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用GRUB2引导ISO镜像]]></title>
        <id>https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/</id>
        <link href="https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/">
        </link>
        <updated>2013-04-25T21:17:00.000Z</updated>
        <summary type="html"><![CDATA[都会是硬盘,由硬盘启动时，BIOS 通常是转向第一块硬盘的第一个扇区，即主引导记录(MBR).]]></summary>
    </entry>
    <entry>
        <title type="html"><![CDATA[安徽师范大学校园视频下载器2.0版本发布]]></title>
        <id>https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/</id>
        <link href="https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/">
        </link>
        <updated>2013-03-15T15:30:00.000Z</updated>
        <summary type="html"><![CDATA[视频资源和视频的 ID,然后通过一步步的研究直接找到了资源的下载地址.详细的原理请看我 github 上公开的VideoSeach
里面的 Function.cs 记录了具体解析过程.]]></summary>
    </entry>
</feed>