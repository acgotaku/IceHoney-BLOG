{
    "version": "https://jsonfeed.org/version/1",
    "title": "IceHoney",
    "home_page_url": "https://blog.icehoney.me/",
    "feed_url": "https://blog.icehoney.me/feed.json",
    "description": "IceHoney是雪月秋水君的博客~ 记录秋水君生活的点点滴滴~",
    "items": [
        {
            "id": "https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/",
            "url": "https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/",
            "title": "Archlinux下安装过wps之后字体发虚的问题",
            "summary": "Office 是 Linux 永远的痛...微软的 Office 市场霸主地位是根本无法撼动的... 但是微软那家伙很讨厌 Linux 和开源... Office 产品目前也只有 Windows 和 Mac 据说微软要出 Linux 版本的 Office...但是不知道猴年马月啊 (望天",
            "date_modified": "2013-07-04T12:39:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-04-28-about-weiyun/",
            "url": "https://blog.icehoney.me/posts/2013-04-28-about-weiyun/",
            "title": "关于微云下载的那点事",
            "summary": "在这个页面载入的时候可以很清楚的看到网页对这个网址进行 POST 请求,提交的表单是个 json 对象",
            "date_modified": "2013-04-28T21:31:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2024-07-02-compare-version/",
            "url": "https://blog.icehoney.me/posts/2024-07-02-compare-version/",
            "title": "如何比较版本号",
            "date_modified": "2024-07-02T21:52:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2024-06-01-zbar-wasm/",
            "url": "https://blog.icehoney.me/posts/2024-06-01-zbar-wasm/",
            "title": "编译 zbar 到 WebAssembly",
            "summary": "工作上需要前端实现扫描二维码的功能，这部分属于图像识别的工作，图像识别相关的库基本都是 C 语言库，所以需要将这些库编译到 WebAssembly，然后在前端调用。",
            "date_modified": "2024-06-01T16:06:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2024-03-13-cache-control/",
            "url": "https://blog.icehoney.me/posts/2024-03-13-cache-control/",
            "title": "前端的缓存策略",
            "summary": "Cache-Control 用来设置资源的缓存策略，常见的的值有：no-store 、no-cache、public、private、max-age、immutable。",
            "date_modified": "2024-03-13T21:58:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-11-11-flash-ios/",
            "url": "https://blog.icehoney.me/posts/2023-11-11-flash-ios/",
            "title": "macOS下苹果手机刷机",
            "summary": "MacOS 在版本 12 以上的系统中，已经不支持使用 iTunes 来管理手机了，所以我们需要使用 Finder 来管理手机。我们连接手机到 Mac 系统，这时候会弹出一个提示框，我们需要点击信任按钮。",
            "date_modified": "2023-11-11T20:03:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-12-17-macos-ra2/",
            "url": "https://blog.icehoney.me/posts/2023-12-17-macos-ra2/",
            "title": "macOS下运行红警2游戏",
            "summary": "在最后的环境变量配置中添加下面的内容：",
            "date_modified": "2023-12-17T11:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/",
            "url": "https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/",
            "title": "网页调用摄像头读取QR code",
            "summary": "const QrReader: React.FC = ({\n  videoId = 'video',\n  scanDelay = 500,\n  constraints = {\n    facingMode: 'environment'\n  },\n  className = '',\n  onResult\n}) => {\n  const stopRef = useRef(false);\n  const videoRef = useRef(null);",
            "date_modified": "2022-12-17T17:29:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-12-03-css-nested-table/",
            "url": "https://blog.icehoney.me/posts/2023-12-03-css-nested-table/",
            "title": "嵌套表格如何实现边框合并",
            "date_modified": "2023-12-03T10:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-10-29-typescript-backend/",
            "url": "https://blog.icehoney.me/posts/2022-10-29-typescript-backend/",
            "title": "如何使用TypeScript进行后端开发",
            "summary": "我们经常使用 TypeScript 进行开发，webpack 会自动帮我们编译成浏览器可以执行的 JS 文件。相关的开发工具也很完善，但是进行后端开发的资料就比较少了，我们来讲解下如何使用 TypeScript 进行后端开发。",
            "date_modified": "2022-10-29T11:47:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/",
            "url": "https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/",
            "title": "macOS下编译C++文件",
            "summary": "scan_image.cpp",
            "date_modified": "2023-10-09T12:10:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-04-13-m1-cpp/",
            "url": "https://blog.icehoney.me/posts/2022-04-13-m1-cpp/",
            "title": "Mac M1系统配置C++环境",
            "summary": "homebrew 官网有描述M1的安装路径更改到 /opt/homebrew 了。所以我们需要指定头文件路径，这里我们指定到 /opt/homebrew/include。",
            "date_modified": "2022-04-13T20:03:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-04-16-draggable-list/",
            "url": "https://blog.icehoney.me/posts/2023-04-16-draggable-list/",
            "title": "拖拽排序列表",
            "summary": "return false;\n}, []);\nconst dropHandler = useCallback((event: React.DragEvent) => {\n  event.stopPropagation();\n  event.preventDefault();\n  return false;\n}, []);\n`",
            "date_modified": "2023-04-16T12:31:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/",
            "url": "https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/",
            "title": "Git 提交规范",
            "summary": "Body 是可选的，用来对本次提交进行详细描述， 可以写成多行，例如：",
            "date_modified": "2022-07-23T20:37:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-07-09-credit-regex/",
            "url": "https://blog.icehoney.me/posts/2023-07-09-credit-regex/",
            "title": "正则表达式匹配信用卡",
            "summary": "`",
            "date_modified": "2023-07-09T13:41:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-06-03-scroll-loader/",
            "url": "https://blog.icehoney.me/posts/2023-06-03-scroll-loader/",
            "title": "无限滚动加载列表",
            "summary": "observerRef.current.observe(loaderRef.current);\n        }\n      } else {\n        setCompleted(true);\n        updateCompleted?.(true);\n      }\n    });\n  }, [inView, updateCompleted]);",
            "date_modified": "2023-06-03T12:55:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-01-14-android-reverse/",
            "url": "https://blog.icehoney.me/posts/2023-01-14-android-reverse/",
            "title": "安卓逆向的经验记录",
            "summary": "}",
            "date_modified": "2023-01-14T13:05:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-09-24-telegram-bot/",
            "url": "https://blog.icehoney.me/posts/2022-09-24-telegram-bot/",
            "title": "如何编写Telegram Bot",
            "summary": "`",
            "date_modified": "2022-09-24T11:07:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-03-03-qrcode-version/",
            "url": "https://blog.icehoney.me/posts/2023-03-03-qrcode-version/",
            "title": "QR code 生成的相关参数",
            "image": "https://upload.wikimedia.org/wikipedia/commons/c/c8/QR_Code_Mask_Patterns.svg",
            "date_modified": "2023-03-03T20:42:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/",
            "url": "https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/",
            "title": "前端开发如何防止逆向以及对策",
            "summary": "前端开发分析代码的途径最简单不过了，第一个途径是查看网页源代码，第二个途径是打开开发者工具审查元素。",
            "date_modified": "2020-02-22T18:03:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-08-07-mobx-react/",
            "url": "https://blog.icehoney.me/posts/2022-08-07-mobx-react/",
            "title": "使用MobX管理React的状态",
            "summary": "@reduxjs/toolkit 和 mobx-react。\n个人感觉 Mobx 用起来更简洁，所以本文着重介绍 Mobx。",
            "date_modified": "2022-08-07T14:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-07-04-typescript-enum/",
            "url": "https://blog.icehoney.me/posts/2022-07-04-typescript-enum/",
            "title": "TypeScript中应该禁止使用enum",
            "summary": "GET = 'GET',\n  POST = 'POST'\n}",
            "date_modified": "2022-07-04T20:37:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-06-20-deep-copy/",
            "url": "https://blog.icehoney.me/posts/2022-06-20-deep-copy/",
            "title": "JS中关于深拷贝和浅拷贝",
            "summary": "`",
            "date_modified": "2022-06-20T19:37:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/",
            "url": "https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/",
            "title": "如何实现虚拟滚动条",
            "summary": "细节请参考下面的代码：",
            "date_modified": "2022-05-12T19:25:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-02-10-github-lfs/",
            "url": "https://blog.icehoney.me/posts/2022-02-10-github-lfs/",
            "title": "Github 存储大文件",
            "summary": "Writing objects: 100% (17/17), 153.95 MiB | 13.82 MiB/s, done.\nTotal 17 (delta 4), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (4/4), completed with 3 local objects.\nremote: error: Trace:\nremote: error: See http://git.io/iEPt8g for more information.\nremote: error: File xxx.db is 259.50 MB; this exceeds GitHub's file size limit of 100.00 MB\nremote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.\nTo https://github.com/acgotaku/switch.git\n ! [remote rejected] master -> master (pre-receive hook declined)\nerror: failed to push some refs to 'https://github.com/{user}/{repo}.git'\n`",
            "date_modified": "2022-02-10T23:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-03-13-scroll-lock/",
            "url": "https://blog.icehoney.me/posts/2022-03-13-scroll-lock/",
            "title": "禁用页面滚动",
            "date_modified": "2022-03-13T15:11:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/",
            "url": "https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/",
            "title": "代理Sentry的请求",
            "summary": "Sentry是一款非常不错的网页监控工具，可以帮忙收集网页端的报错方便分析用户使用过程中遇到的问题。但是因为有收集用户隐私的风险，有些广告屏蔽软件会屏蔽 Sentry 的请求，所以我们需要使用反向代理的方式，让 Sentry 把请求发到我们自己的后端，我们再转发到 Sentry 服务器上。",
            "date_modified": "2021-12-30T22:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/",
            "url": "https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/",
            "title": "CSS如何处理固定Header哈希标记跳转的问题",
            "summary": "为了保证多占据的空间和 Header 的高度保持一致，我们可以使用 CSS 变量来存储 Header 的高度，这样就能保证一致性。",
            "date_modified": "2021-11-20T21:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-01-27-react-tabs/",
            "url": "https://blog.icehoney.me/posts/2022-01-27-react-tabs/",
            "title": "React 实现 Tabs 组件",
            "summary": "\n\n    文档\n\n    快速起步\n\n    帮助\n\n`",
            "date_modified": "2022-01-27T20:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-10-02-js-color/",
            "url": "https://blog.icehoney.me/posts/2021-10-02-js-color/",
            "title": "JS 关于颜色的相关处理",
            "summary": "}\n`",
            "date_modified": "2021-10-02T10:26:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/",
            "url": "https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/",
            "title": "如何检测用户启动广告屏蔽插件",
            "summary": "if (isDisplayNone(node)) return true;",
            "date_modified": "2021-07-25T14:32:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/",
            "url": "https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/",
            "title": "如何瘦身docker镜像",
            "summary": "WORKDIR /app\nCOPY . /app\nENV NODE_ENV production\nRUN yarn build && yarn express:build\n`",
            "date_modified": "2021-09-09T21:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/",
            "url": "https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/",
            "title": "在浏览器上显示TIF图像",
            "summary": "this.imgData = URL.createObjectURL(blob);\n        });\n      });\n  }\n`",
            "date_modified": "2020-09-10T20:57:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/",
            "url": "https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/",
            "title": "Django使用CKEditor的相关经验",
            "summary": "在开启认证参数的时候，编辑器保存的是当时上传照片时候的认证参数，也就意味着一个小时之后再访问的时候，就没法正常显示图片。如何保证页面载入编辑器的时候，保证图片正常显示呢？",
            "date_modified": "2021-05-19T22:06:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-06-14-elk-docker/",
            "url": "https://blog.icehoney.me/posts/2021-06-14-elk-docker/",
            "title": "ELK收集Docker项目的日志",
            "summary": "我只是通过 nmap 命令来检测 5000 端口是否开放，并不知道是否正常运行。",
            "date_modified": "2021-06-14T11:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-04-25-service-worker-push/",
            "url": "https://blog.icehoney.me/posts/2021-04-25-service-worker-push/",
            "title": "使用Service Worker的 Web Push 功能",
            "summary": "\"expirationTime\": null,\n  \"keys\": {\n    \"p256dh\": \"BDtGmJB0Bkyum0WJw8NiiCn4U9ckX8UjhzXPUad2HM0yID0ced8zUHKr-Yhf6p2Z7IS0G07dGG7Tnl5jlwQVog4\",\n    \"auth\": \"25JGSYqTKvj_nAeodHBHSQ\"\n  }\n}\n`",
            "date_modified": "2021-04-25T12:27:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-03-06-vue-code-style/",
            "url": "https://blog.icehoney.me/posts/2021-03-06-vue-code-style/",
            "title": "Vue代码风格",
            "summary": "import { namespace } from 'vuex-class';",
            "date_modified": "2021-03-06T12:02:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-02-06-web-accessibility/",
            "url": "https://blog.icehoney.me/posts/2021-02-06-web-accessibility/",
            "title": "提高网页的易读性",
            "summary": "针对隐藏的元素， Tab 键也不会触发这个元素的 focus，隐藏的元素 CSS 属性可能含有 display: none 或者 visibility: hidden。",
            "date_modified": "2021-02-06T11:04:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-02-20-sql-n-1/",
            "url": "https://blog.icehoney.me/posts/2021-02-20-sql-n-1/",
            "title": "数据库查询的N+1问题",
            "date_modified": "2021-02-20T13:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/",
            "url": "https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/",
            "title": "vue实现datepicker组件",
            "summary": "前端组件化的今天，选择日期组件算是最复杂的一个了吧。我们需要考虑日期显示的多语言，弹框的显示位置，以及日期月份的计算。",
            "date_modified": "2020-11-30T14:07:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-01-23-javascript-performance/",
            "url": "https://blog.icehoney.me/posts/2021-01-23-javascript-performance/",
            "title": "JavaScript的加载优化",
            "summary": "一方面，只加载当前页面需要的 JavaScript 文件，可以使用 webpack 的code-splitting来解决。另一方面，懒加载一些不是必须的 JavaScript 文件。",
            "image": "https://blog.icehoney.me/~@assets/js_async_defer.png",
            "date_modified": "2021-01-23T16:11:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-12-20-loading-performance/",
            "url": "https://blog.icehoney.me/posts/2020-12-20-loading-performance/",
            "title": "前端开发中的加载性能优化",
            "summary": "现代化浏览器都支持 GZIP 进行压缩，并且服务器端 NGINX 也可以很方便的配置使用 GZIP 压缩请求的资源文件。",
            "date_modified": "2020-12-20T10:48:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/",
            "url": "https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/",
            "title": "前端中debounce和throttle函数说明",
            "summary": "function throttle(fn: Function, time: number): Function {\n  let inThrottle: boolean;",
            "date_modified": "2020-10-17T20:52:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-08-09-simple-polygon/",
            "url": "https://blog.icehoney.me/posts/2020-08-09-simple-polygon/",
            "title": "简单多边形的判定",
            "summary": "start: Point;\n  end: Point;\n}",
            "date_modified": "2020-08-09T14:50:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-07-30-vue-components/",
            "url": "https://blog.icehoney.me/posts/2020-07-30-vue-components/",
            "title": "Vue中组件的设计",
            "summary": ":value=\"item.value\"\n  >\n\n`",
            "date_modified": "2020-07-30T22:08:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/",
            "url": "https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/",
            "title": "Vue实现双Slider",
            "summary": "HTML 本身只提供了单滑块，要想实现双 Slider，只能两个叠加在一起了，并且需要自己实现 Slider 的选中范围，因为目前的 css selector 并不能达到这种效果。如何动态的控制 Slider 的显示长度呢？当然可以计算出目前的选中百分比，通过 css variables 来达到更新样式的效果。",
            "date_modified": "2020-06-14T21:31:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-05-22-react-typescript/",
            "url": "https://blog.icehoney.me/posts/2020-05-22-react-typescript/",
            "title": "React的TypeScript写法",
            "summary": "`",
            "date_modified": "2020-05-22T22:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/",
            "url": "https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/",
            "title": "Vue表单组件如何自动化输入",
            "summary": "`",
            "date_modified": "2020-04-23T22:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/",
            "url": "https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/",
            "title": "前端部署之CDN的那些事情",
            "summary": "由于 Service Workers 的导入使得 CDN 部署变得有些麻烦，不过这些问题好在都能找到解决方案。还有一点是 Chrome 的 Network 面板里的 offline 模式不能测试 Service Workers 的离线。需要自己手动拔网线才能测试。",
            "date_modified": "2020-01-14T22:59:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-03-19-vue-jest/",
            "url": "https://blog.icehoney.me/posts/2020-03-19-vue-jest/",
            "title": "Vue下使用jest进行单元测试",
            "summary": "jest.doMock('@/store', () => ({\n  state: {\n    account: {\n      hello: 'world'\n    }\n  }\n}));\nconst { default: formatter } = await import('@/utils/formatter');\n`",
            "date_modified": "2020-03-19T21:56:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/",
            "url": "https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/",
            "title": "iOS12下Safari浏览器的BUG",
            "date_modified": "2019-12-10T22:39:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-10-22-bezier-length/",
            "url": "https://blog.icehoney.me/posts/2019-10-22-bezier-length/",
            "title": "计算贝塞尔曲线的长度",
            "summary": "贝塞尔曲线是工业上经常用的一种曲线，经常用用来汽车的外观设计。贝塞尔曲线根据控制点的不同可以分为：",
            "date_modified": "2019-10-22T22:28:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-09-11-distance-latlng/",
            "url": "https://blog.icehoney.me/posts/2019-09-11-distance-latlng/",
            "title": "求经纬度两点距离",
            "summary": "世界大地测量系统（World Geodetic System）就是我们常说的经纬度，维度指得是当前地点和赤道的夹角。所以赤道的纬度（Latitude）是 0，北极是正 90,南极是负 90.\n经度是本初子午线(Prime meridian)为分界，东边是东经（正值），西边是西经（负值）。当经度为 180 度的时候，我们称之为对向子午线（antimeridian）。当跨过对向子午线的时候，很多相关计算都需要特殊处理，需要注意。这里计算两个坐标的距离的话，由于是球面，其实计算的是两个坐标沿着球面的弧线。本质思想是求出两个坐标的夹角，然后乘以地球半径得出结果。详细细节可以参考Calculate distance, bearing and more between Latitude/Longitude points",
            "date_modified": "2019-09-11T22:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-09-23-node-docker/",
            "url": "https://blog.icehoney.me/posts/2019-09-23-node-docker/",
            "title": "使用Docker运行node项目",
            "summary": "然后声明services，service 下的每一个声明都是一个 Docker 的实例。下面介绍一个实际例子：",
            "date_modified": "2019-09-23T22:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/",
            "url": "https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/",
            "title": "Vue中如何设计面包屑",
            "summary": "当资源层级很深的时候，我们需要做很多空的父节点来处理。",
            "date_modified": "2019-07-28T23:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/",
            "url": "https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/",
            "title": "Github如何省略每次输入验证信息",
            "summary": "password xxxxxxx\n`",
            "date_modified": "2019-06-23T20:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-04-28-webassmebly/",
            "url": "https://blog.icehoney.me/posts/2019-04-28-webassmebly/",
            "title": "使用WebAssembly编译C++到JS",
            "summary": "官方的 demo 是使用 src 的方式来引入，并且暴露成 Module 的全局变量。但是现代化的 Web 项目都是使用 webpack 打包，并且自动化引入的。所以我们也不想为了 WebAssembly 搞特殊。接下来就讲述如何配置来引入。首先，使用 emscripten 输出 mjs 文件，这样才可以作为模块被导入。具体的编译参数可以参照emcc。\n首先，wasm 格式并不能被 webpack 正确识别，我们需要添加 loader",
            "date_modified": "2019-04-28T20:51:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/",
            "url": "https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/",
            "title": "前端中的e2e测试",
            "summary": "customassertionspath: [\"tests/e2e/custom-assertions\"],\n      globals_path: \"globalsModule.js\",\n      src_folders: [\"tests/e2e/specs/web\"]",
            "date_modified": "2019-04-06T12:12:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/",
            "url": "https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/",
            "title": "localStorage互斥锁的使用",
            "date_modified": "2019-02-28T20:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-01-23-aws-s3/",
            "url": "https://blog.icehoney.me/posts/2019-01-23-aws-s3/",
            "title": "亚马逊S3服务简单介绍",
            "summary": "最近在做后端的开发，需要一些二进制数据保存在服务器云端。团队决定调查 AWS 的 S3 服务是否满足需求，所以就做了一些调查工作。不过也遇到很多坑的地方。所以记录下来，防止以后再遇到。",
            "date_modified": "2019-01-23T21:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-11-27-js-map/",
            "url": "https://blog.icehoney.me/posts/2018-11-27-js-map/",
            "title": "前端开发地图应用的调研",
            "summary": "产品需要在国内和国外使用，费用合理，可以换地图的贴图并且能在地图上绘制各种信息。例如多边形或圆形还有贝塞尔曲线。",
            "date_modified": "2018-11-27T21:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-10-15-backend-development/",
            "url": "https://blog.icehoney.me/posts/2018-10-15-backend-development/",
            "title": "后端开发的技术总结",
            "summary": "生成的 Markdown 文件，可以很方便的转换成网页便于客户端开发。例如这个工具aglio。",
            "date_modified": "2018-10-15T21:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-09-08-cors-cookie/",
            "url": "https://blog.icehoney.me/posts/2018-09-08-cors-cookie/",
            "title": "跨域请求中的cookies处理",
            "summary": "我们都知道服务器设置 cookie 是通过set-cookie的 http header 来完成。浏览器会读取这个信息设置 cookie。但是对于跨与请求，默认是无效的。我们需要再添加一个 http header。",
            "date_modified": "2018-09-08T23:07:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-08-01-random-seed/",
            "url": "https://blog.icehoney.me/posts/2018-08-01-random-seed/",
            "title": "伪随机的种子问题",
            "summary": "puts @rand.rand(10..150)",
            "date_modified": "2018-08-01T22:07:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-07-06-offline-web/",
            "url": "https://blog.icehoney.me/posts/2018-07-06-offline-web/",
            "title": "Web离线的解决方案",
            "summary": "这里要补充的一点是，针对 https 的 Application Cache 是无法完成跨域请求的，所以请慎重。",
            "date_modified": "2018-07-06T23:25:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/",
            "url": "https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/",
            "title": "如何封装第三方vue组件",
            "date_modified": "2018-05-29T23:19:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-04-25-javascript-performance/",
            "url": "https://blog.icehoney.me/posts/2018-04-25-javascript-performance/",
            "title": "JavaScript开发中的性能优化",
            "summary": "最近工作比较清闲，5 月又换了一个工作环境。总结下最近看的有关 JavaScript 性能的知识，并记下来供未来的自己参考。希望自己能不忘初心，继续成长！",
            "date_modified": "2018-04-25T23:22:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-09-16-github-workflow/",
            "url": "https://blog.icehoney.me/posts/2017-09-16-github-workflow/",
            "title": "Github团队协作",
            "summary": "首先是切换到需要开发的分支，这里我们假设要在dev分支上进行开发。",
            "date_modified": "2017-09-16T22:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-04-08-website-https/",
            "url": "https://blog.icehoney.me/posts/2018-04-08-website-https/",
            "title": "使用letsencrypt为自己的网站加密",
            "summary": "我把自己的 DNS 服务托管到 cloudflare 上，还可以使用 cloudflare 提供免费的 CDN 服务。最重要的一点是 cloudflare 有 API 接口。利用这个接口就可以自动完成 DNS-01 challenge。简单的来说，就是通过添加一条 DNS 记录来证明自己对这个域名的所有权，才能给这个域名颁发证书。",
            "date_modified": "2018-04-08T20:51:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-02-13-rendering-performance/",
            "url": "https://blog.icehoney.me/posts/2018-02-13-rendering-performance/",
            "title": "浏览器的渲染性能",
            "summary": "如果修改了元素的布局属性，也就是改变了元素的几何属性（例如宽度，高度）。那么浏览器就必须检查所有元素，然后重新排版页面。任何受影响的部分都要重新绘制，再重新合成。",
            "image": "https://blog.icehoney.me/~@assets/frame-full.jpg",
            "date_modified": "2018-02-13T20:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-01-16-javascript-types/",
            "url": "https://blog.icehoney.me/posts/2018-01-16-javascript-types/",
            "title": "JavaScript中的数据类型",
            "summary": "if (!Number.isNaN) {\n  Number.isNaN = function(n) {\n    return typeof n === 'number' && window.isNaN(n);\n  };\n}\n`",
            "date_modified": "2018-01-16T22:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-06-18-javascript-object/",
            "url": "https://blog.icehoney.me/posts/2017-06-18-javascript-object/",
            "title": "JavaScript对象的常见操作",
            "summary": "现在 JavaScript 已经是 es6 的时代，所以我们也需要顺应时代学习新知识。这里我建议大家读读 airbnb 的JavaScript Style Guide。这里不仅教会你正确的编码格式，更多的是优秀的写法。如何合理的拷贝对象，遍历数组等等。",
            "date_modified": "2017-06-18T22:13:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-11-18-frontend-development/",
            "url": "https://blog.icehoney.me/posts/2017-11-18-frontend-development/",
            "title": "前端开发的技术栈",
            "date_modified": "2017-11-18T17:18:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-10-21-modal-scroll/",
            "url": "https://blog.icehoney.me/posts/2017-10-21-modal-scroll/",
            "title": "网站开发中的Modal问题",
            "summary": "最近在开发的网站基本上全是使用弹出的对话框（Modal）来进行 UI 交互的，所以对于 Modal 的处理也算积攒了一点经验。便想写下来供自己以后参考和学习。说实话，在目前响应式布局的主流开发方式下，Modal 非常不适合作为一个良好的交互方式。因为对于手机触屏用户非常不友好。当然，我开发的这个网站也没有考虑手机用户。当前的主流方式还是采用 SPA，JS 软路由切换页面来交互才是正解。",
            "date_modified": "2017-10-21T14:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-08-06-css-trick/",
            "url": "https://blog.icehoney.me/posts/2017-08-06-css-trick/",
            "title": "CSS技巧和工作总结",
            "summary": "这里有个重点概念是堆叠上下文，那么元素是如何形成堆叠上下文呢？",
            "date_modified": "2017-08-06T15:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-05-07-css/",
            "url": "https://blog.icehoney.me/posts/2017-05-07-css/",
            "title": "CSS笔记和杂谈",
            "summary": "有些时候根据需求我们设计的子 DIV 要比父 DIV 超出一定范围，这时候要怎么设计才好呢？有时候会想到利用position: relative;来改变子 DIV 的文档流进行实现。但这种方式实在是不推荐，因为会影响父 DIV 在页面的布局。我建议的解决方案是使用margin来进行溢出，margin不仅可以输入正数，也可以使用负数。当使用负数的时候就会朝反方向扩展达到溢出的目的。",
            "date_modified": "2017-05-07T21:49:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-01-29-go/",
            "url": "https://blog.icehoney.me/posts/2017-01-29-go/",
            "title": "Golang语言学习分享",
            "summary": "`",
            "date_modified": "2017-01-29T09:49:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-10-05-python-image-process/",
            "url": "https://blog.icehoney.me/posts/2015-10-05-python-image-process/",
            "title": "使用Python实现Histogram_equalization算法",
            "date_modified": "2015-10-05T23:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-09-20-latex/",
            "url": "https://blog.icehoney.me/posts/2016-09-20-latex/",
            "title": "使用Latex书写论文",
            "summary": "最近忙着写论文，博客都快要长草了。。。但是我还是要坚持写下去！因为早就知道写论文排版会很麻烦，所以就选择了使用 Latex 来写论文。看到后期同学们在 Word 上一句一句的调整格式，我只能说学会了 Latex 真是磨刀不误砍柴工，后期真是太省心了，接下来就向大家介绍下如何使用 Latex 写论文，免除排版之忧。",
            "date_modified": "2016-09-20T20:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/",
            "url": "https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/",
            "title": "逆向JavaScript经验分享",
            "summary": "通过一个个查找，我们找到了一个请求返回了一个 JSONP 格式的数据，这个数据里面包含了 MP4 源文件的地址。注意，很多人分析请求的时候经常喜欢找 MP4 文件的请求，这个可以算是一个切入点。但是一般网站不会把视频网址固定死的，所以找到 MP4 请求并没有什么实际意义，而是一定有一个请求去向服务器索取真实的 MP4 地址，一般这个数据都是 JSON 格式的。所以只要耐心找，一定找得到的。很多请求都只不过是资源文件，所以很容易过滤掉的。",
            "image": "https://blog.icehoney.me/~@assets/iqiyi.png",
            "date_modified": "2016-12-19T19:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/",
            "url": "https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/",
            "title": "Linux高并发系统参数优化",
            "summary": "`",
            "date_modified": "2016-11-27T18:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-06-30-webpack/",
            "url": "https://blog.icehoney.me/posts/2016-06-30-webpack/",
            "title": "模块化JavaScript开发",
            "summary": "webpack 指南",
            "date_modified": "2016-06-30T16:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-05-05-webgl-render/",
            "url": "https://blog.icehoney.me/posts/2016-05-05-webgl-render/",
            "title": "WebGL渲染的知识介绍",
            "summary": "\n  attribute vec3 position;\n  uniform   mat4 mvpMatrix;",
            "image": "https://blog.icehoney.me/~@assets/webgl_graphics_pipeline.jpg",
            "date_modified": "2016-05-05T10:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/",
            "url": "https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/",
            "title": "使用最小费用最大流模型解决酒店管理收益最大化问题",
            "image": "https://blog.icehoney.me/~@assets/model.png",
            "date_modified": "2015-12-29T11:15:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-03-21-cors-options-method/",
            "url": "https://blog.icehoney.me/posts/2016-03-21-cors-options-method/",
            "title": "关于JavaScript跨域请求的相关知识",
            "summary": "2016 年已经过了 3 个月了,还没来得及更新博客...实在是惭愧惭愧...最近确实也很忙,一边要打工,一边要写论文,一边还要找工作...",
            "date_modified": "2016-03-21T14:33:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/",
            "url": "https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/",
            "title": "解决Dota2在Archlinux下的各种疑难杂症",
            "summary": "Dota2 只能通过 Alt 和鼠标左键的配合发信号.无法像 Dota 一样可以单纯使用鼠标发信号.但是有些用户可能发现自己无法发信号.\n原因在于你使用的窗口管理器已经为 Alt 和鼠标左键绑定了事件,所以你得取消窗口管理器的事件绑定,例如 openbox 需要修改配置文件 rc.xml 找到鼠标事件并注释掉事件绑定的内容.",
            "date_modified": "2015-12-01T21:58:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/",
            "url": "https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/",
            "title": "Archlinux和Win 10 在 UEFI下 双启动",
            "summary": "把 Win10 的这个加速系统开机的配置禁用掉,应该在电源管理界面可以禁用的.因为切换系统的话这个功能会导致你丢失数据.",
            "date_modified": "2015-10-28T23:32:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/",
            "url": "https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/",
            "title": "Chrome扩展和Web Page 进行通讯",
            "summary": "这种方式适合单向通讯,只从 web page 发送数据到 Background 或者 Background 发送给 web page 如果双向通讯的话就很不方便了\n因为 Content Scripts 和 web page 共享 window 会造成事件重复绑定的.",
            "date_modified": "2015-08-25T19:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/",
            "url": "https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/",
            "title": "解压和打包安卓DAT文件",
            "summary": "`",
            "date_modified": "2015-07-28T19:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/",
            "url": "https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/",
            "title": "Chromebook Pixel (2013) 安装Linux的方法",
            "summary": "在终端里面输入下面的指令：",
            "date_modified": "2015-04-20T19:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-01-31-aria2-download/",
            "url": "https://blog.icehoney.me/posts/2015-01-31-aria2-download/",
            "title": "使用Aria2下载百度网盘和115的资源",
            "summary": "file-allocation=prealloc\n`",
            "date_modified": "2015-01-31T09:41:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/",
            "url": "https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/",
            "title": "突破同源策略限制的方法",
            "summary": "callback(data);\n                }, 'json');\n        };\n      }).appendTo('html');\n}\n`",
            "date_modified": "2015-04-20T19:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/",
            "url": "https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/",
            "title": "CSS使用box-shadow和border-radius的妙用",
            "image": "https://blog.icehoney.me/~@assets/css_1.png",
            "date_modified": "2015-03-17T15:08:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/",
            "url": "https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/",
            "title": "使用Postfix,Dovecot和Mysql配置邮件服务器",
            "summary": "由于学习的需要,我要配置个本地邮件服务器.虽然找到了一篇很详细的资料,但是在配置过程中还是遇到了这样那样的问题.\n写篇文章记下来自己的学习过程,毕竟好记性不如烂笔头嘛.",
            "date_modified": "2014-12-25T15:41:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-02-28-windows-injection/",
            "url": "https://blog.icehoney.me/posts/2015-02-28-windows-injection/",
            "title": "Windows下如何进行进程注入",
            "summary": "首先使用 Win 系统的OpenProcessAPI 打开所要注入的进程。\n使用参数是进程的 PID，可以使用任务管理器查看进程的 PID，打开成功之后返回程序的句柄。",
            "date_modified": "2015-02-28T15:53:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-11-23-javascript-binary/",
            "url": "https://blog.icehoney.me/posts/2014-11-23-javascript-binary/",
            "title": "JavaScript处理二进制数据",
            "summary": "不过稍作修改:",
            "date_modified": "2014-11-23T14:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/",
            "url": "https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/",
            "title": "扇贝单词助手发布",
            "summary": "resolve(data);\n      } else {\n        reject();\n      }\n    });\n  });\n}\n`",
            "date_modified": "2014-10-30T18:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/",
            "url": "https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/",
            "title": "chrome扩展开发经验记录",
            "summary": "官方文档有例子.但是我要说的是这个 Simple requests 真的太 Simple.\ncontent js 使用 sendMessage,就立即回调获取 response.\n如果 background page 稍微进行处理下占用点时间就会导致 response 的函数根本无法执行的情况.\n推测可能是没接收到数据就直接 pass 了.所以稍微复杂点需要处理数据的通讯操作千万不能用这个.",
            "date_modified": "2014-08-23T16:01:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/",
            "url": "https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/",
            "title": "Archlinux下声卡的设置与折腾",
            "image": "https://blog.icehoney.me/~@assets/alsamixer.png",
            "date_modified": "2014-06-05T09:22:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-09-30-computer-endian/",
            "url": "https://blog.icehoney.me/posts/2014-09-30-computer-endian/",
            "title": "计算机中的字节序问题",
            "summary": "计算机字节序这个问题,最近被老师反复提到.我也在本科阶段折腾交叉编译的时候遇到过.并且这个问题貌似也是面试的时候一个常见问题,所以还是写下来比较好.",
            "date_modified": "2014-09-30T12:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-07-02-baidu-pan/",
            "url": "https://blog.icehoney.me/posts/2014-07-02-baidu-pan/",
            "title": "百度网盘新版API",
            "summary": "于是我又苦苦寻找新版的 JS 到底是怎么实现下载的,虽说可以直接操纵 DOM 获取选中的文件的 fs_id 信息\n然后 POST 数据获取 dlink(下载地址),但是这样怎么也不够优雅啊...因为百度自己的 JS 肯定实现了这部分内容\n于是我便花了更多的时间找 API,但是百度那既压缩又混淆的 JS 代码真是读起来特带劲啊(我绝对不是抖 M)",
            "date_modified": "2014-07-02T14:09:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/",
            "url": "https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/",
            "title": "Linux下恢复误删除的文件",
            "summary": "PhotoRec 是用来恢复丢失的文件和照片.即使重新格式化或严重损坏的文件系统都可以恢复.\n但是 PhotoRec 只有全盘扫描和空闲分区扫描.耗时很长.对于自己无意中删除的小文件来说就是\n杀鸡焉用牛刀.没有这个必要.",
            "date_modified": "2014-07-21T17:39:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/",
            "url": "https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/",
            "title": "JavaScript中一个经典的正则例子",
            "summary": "}\n`",
            "date_modified": "2014-05-08T09:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-04-30-javascript-closure/",
            "url": "https://blog.icehoney.me/posts/2014-04-30-javascript-closure/",
            "title": "JavaScript函数中的闭包",
            "summary": "举例来说,假定我们想要给 String 增加一个 deentityify 方法.它的任务是寻找字符串中的 HTML 字符实体并把它们替换为对应的字符.\n这就需要在一个对象中保存字符实体的名字和它们对应的字符.但我们该在哪里保存这个对象呢?我们可以把它放到一个全局变量中,\n但全局变量是魔鬼.我们可以把它定义在该函数的内部,但是那会带来运行时的损耗,因为每次执行该函数的时候该字面量都会被求值一次.\n理想的方式就是使用闭包实现.",
            "date_modified": "2014-04-30T16:18:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/",
            "url": "https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/",
            "title": "JavaScript函数调用的四种方式",
            "summary": "使得函数可以对 this 高度复用.通过 this 可取得他们所属对象的上下文的方法成为公共方法(public method).",
            "date_modified": "2014-04-24T15:28:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-04-20-linux-notes/",
            "url": "https://blog.icehoney.me/posts/2014-04-20-linux-notes/",
            "title": "Archlinux折腾笔记",
            "date_modified": "2014-04-20T19:52:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-04-01-interview/",
            "url": "https://blog.icehoney.me/posts/2014-04-01-interview/",
            "title": "面试笔记",
            "summary": "三月下旬,病还没有完全康复.我便赶往上海.只因为认识的一位菊苣帮我投递了一下简历.而且据说人家对我简历印象还不错.\n现在想想,自己还真是幼稚...这句话就像你问店里员工我的菜怎么还没上,人家一定会回答:马上就好了,都已经下锅了.\n刚刚抵达上海的时候已经是晚上,这是我人生第一次去上海,有种乡下人进城里的感觉.带着梦想与希望,来到了这个地方.",
            "date_modified": "2014-04-01T19:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-03-08-long-march/",
            "url": "https://blog.icehoney.me/posts/2014-03-08-long-march/",
            "title": "漫无止境的三月",
            "summary": "光看书真的很没劲,于是我又开坑了...为了练习 python,我想当后端工程师啊!IE 一天不死我写前端就不会痛快!\n新项目就这么愉快的开坑了,前端懒的设计就直接用Bootstrap了,感觉 Bootstrap 也就只能用些组件的 UI,\n布局神马的还是不符合我的胃口.项目部署的网址是:http://netkuu.icehoney.me/ 目前还是绝赞填坑中~\n前端后端全部自己一个人写,希望能把自己锻炼成 full stack developer~ 现在就差数据库练手了,好久没玩数据库了.",
            "date_modified": "2014-03-08T12:03:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/",
            "url": "https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/",
            "title": "GUI和CLI的使用比较",
            "summary": "力量.同时,你也将无法组合你的各种工具,创建定制的宏工具.\nGUI 的好处是 WYSIWYG--所见即所得(what you see is what you get).缺点是 WYSIAYG--所见即全部所得(what you see is all you get).",
            "date_modified": "2014-01-18T23:06:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/",
            "url": "https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/",
            "title": "程序员修炼之道",
            "date_modified": "2014-02-05T17:18:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-10-24-program-efficiency/",
            "url": "https://blog.icehoney.me/posts/2013-10-24-program-efficiency/",
            "title": "关于程序运行效率的一点见解",
            "summary": "最近在看计算机组成原理等 4 本考研书籍...发现其实回过头来看这些当年没认真学的书的话还是有不少收获的.\n当年小白的我只知道编程看语言类的书籍,无法理解数据结构,计算机组成原理一类书对编程的影响.\n刚开始学这本书的时候就感觉我一个搞软件编程的看硬件干嘛.又是指令又是寄存器啥的,还有那可怕的电路图...\n看的真头大啊,不过其实想想,这门课要是真没用学校也不会开考研也不会考啊!当年真是图样图森破啊...",
            "date_modified": "2013-10-24T23:06:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/",
            "url": "https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/",
            "title": "Archlinux下有关无损音乐的折腾",
            "summary": "而且还是我不怎么喜欢的 wav 格式...\n不过我还是在菊苣的帮助下找到了完美的解决方案~",
            "date_modified": "2013-10-06T23:29:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/",
            "url": "https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/",
            "title": "Archlinux下使用airbase和dhcpd建立虚拟AP",
            "summary": "`",
            "date_modified": "2013-08-26T21:29:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/",
            "url": "https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/",
            "title": "Archlinux下Galaxy Nexus刷机并root",
            "summary": "前面提供的 wiki 已经很详细的讲述如何进行ADB 的配置了",
            "date_modified": "2013-07-20T14:12:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/",
            "url": "https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/",
            "title": "Archlinux下终端进行代理的解决方案",
            "summary": "注意后面有个点,容易忽略. 这个是转入的 SOCKET5 代理,指的是 SSH 的代理监听的端口号.\n配置文件里面有句话是 listen-address 127.0.0.1:8118 这个是转发出去的 HTTP 代理的端口号.\n这样写好之后, 启动服务 sudo systemctl start privoxy.service",
            "date_modified": "2013-07-18T22:05:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/",
            "url": "https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/",
            "title": "Sublime使用笔记以及插件推荐",
            "summary": "`",
            "date_modified": "2013-07-02T22:06:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/",
            "url": "https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/",
            "title": "Ubuntu下apache2的配置记录",
            "summary": "Order allow,deny\n  Allow from all\n",
            "date_modified": "2013-06-06T21:41:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/",
            "url": "https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/",
            "title": "使用GRUB2引导ISO镜像",
            "summary": "的意思是 IDE 硬盘用 hd 表示,这里也可以表示 U 盘,0 表示第一块磁盘,从 0 开始计数.1 代表的是第一块分区,这里是从 1 开始计数.因为 U 盘引导的话第一块磁盘肯定是\nU 盘,所以前面的肯定是 0,后面的 1 代表的是分区,如果你的分区是从其它数字开始的就做相应修改.第四行是加载内核,也就是 ios 里面的内核所在路径,archisolabel 代表的\n是虚拟挂载的时候的卷标,注意这个一定不能和你现有的硬盘或者 U 盘的卷标重复,否则会出现错误的.img_dev 表示的是镜像所在的设备位置,这里使用 uuid 来表示,因为 uuid 是\nU 盘的固有属性,一般不会发生变化(除非你格式化 U 盘),所以保证一定能找到设备.",
            "date_modified": "2013-04-25T21:17:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/",
            "url": "https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/",
            "title": "安徽师范大学校园视频下载器2.0版本发布",
            "date_modified": "2013-03-15T15:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/",
            "url": "https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/",
            "title": "关于CSS解决高度自适应和宽度自适应的问题",
            "summary": "今天在做一个地图的 web 应用,这是个大坑...首先开始设计首页,于是开始山寨谷歌地图了 =.=\n设计出来基本的 div 框架之后,想做到地图界面宽度和高度自动适应浏览器.之前做网站的需求都是固定宽度和高度的.于是我变开始折腾了.",
            "date_modified": "2013-03-10T19:09:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-02-07-start-blog/",
            "url": "https://blog.icehoney.me/posts/2013-02-07-start-blog/",
            "title": "个人博客的建立",
            "summary": "Arch 并且在学习 Python,于是又开坑了...",
            "date_modified": "2013-02-07T22:07:00.000Z"
        }
    ]
}