{
    "version": "https://jsonfeed.org/version/1",
    "title": "IceHoney",
    "home_page_url": "https://blog.icehoney.me/",
    "feed_url": "https://blog.icehoney.me/feed.json",
    "description": "IceHoney是雪月秋水君的博客~ 记录秋水君生活的点点滴滴~",
    "items": [
        {
            "id": "https://blog.icehoney.me/posts/2023-04-16-draggable-list/",
            "url": "https://blog.icehoney.me/posts/2023-04-16-draggable-list/",
            "title": "拖拽排序列表",
            "summary": "拖拽排序是一个很常见的功能，在浏览器不支持原生拖拽功能的时代，人们只能使用鼠标的点击事件来模拟拖拽效果，手动控制拖拽元素的位置来进行移动操作。随着原生拖拽 API 的支持，在实现这个功能的时候就可以更简单一点了。",
            "date_modified": "2023-04-16T12:31:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/",
            "url": "https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/",
            "title": "Archlinux下安装过wps之后字体发虚的问题",
            "summary": "之所以字体发虚是因为安装 WPS 之后的方正字体使得 Sans 和 Sans-Serif 字体的中文部分默认指向了方正宋体.所以导致个这个问题的发生...\n左边是微米黑,右边是装过 WPS 之后映射的宋体字.... 明显右边太难看了有木有!!! 解决方案是自己编写 fonts.conf 设置字体的优先级...\n文泉驿提供了一个在线配置生成工具\n这个网页有部分 JS 资源被墙了,所以需要科学上网才能正常使用,需要注意.\n配置完成之后点上面的“生成[create]”按钮,将结果复制保存到~/.fonts.conf 就能覆盖系统的字体选择顺序.\n注意上面的方法在 Archlinux 下会出现警告错误提示是过时的使用方法.\n正确的解决办法是把配置文件写在 /etc/fonts/conf.avail/50-user.conf\n这样就可以完美解决字体发虚的问题了.",
            "date_modified": "2013-07-04T12:39:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-04-28-about-weiyun/",
            "url": "https://blog.icehoney.me/posts/2013-04-28-about-weiyun/",
            "title": "关于微云下载的那点事",
            "summary": "在这个页面载入的时候可以很清楚的看到网页对这个网址进行 POST 请求,提交的表单是个 json 对象",
            "date_modified": "2013-04-28T21:31:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-10-29-typescript-backend/",
            "url": "https://blog.icehoney.me/posts/2022-10-29-typescript-backend/",
            "title": "如何使用TypeScript进行后端开发",
            "summary": "\"module\": \"commonjs\",\n    \"moduleResolution\": \"Node\",\n    \"outDir\": \"dist\",\n    \"resolveJsonModule\": true,\n    \"skipLibCheck\": true,\n    \"experimentalDecorators\": true,\n    \"emitDecoratorMetadata\": true,\n    \"esModuleInterop\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/\": [\"src/\"]\n    },\n    \"plugins\": [{ \"transform\": \"typescript-transform-paths\" }]\n  },\n  \"include\": [\"src\"]\n}\n`",
            "date_modified": "2022-10-29T11:47:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-11-11-flash-ios/",
            "url": "https://blog.icehoney.me/posts/2023-11-11-flash-ios/",
            "title": "MacOS下苹果手机刷机",
            "date_modified": "2023-11-11T20:03:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/",
            "url": "https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/",
            "title": "MacOS下编译C++文件",
            "summary": "scan_image.cpp",
            "date_modified": "2023-10-09T12:10:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/",
            "url": "https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/",
            "title": "网页调用摄像头读取QR code",
            "summary": "首先安装相关依赖：",
            "date_modified": "2022-12-17T17:29:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-06-03-scroll-loader/",
            "url": "https://blog.icehoney.me/posts/2023-06-03-scroll-loader/",
            "title": "无限滚动加载列表",
            "summary": "inView,\n  updateCompleted\n}) => {\n  const loaderRef = useRef(null);\n  const observerRef = useRef(null);\n  const cursorRef = useRef('');\n  const [completed, setCompleted] = useState(false);",
            "date_modified": "2023-06-03T12:55:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-07-09-credit-regex/",
            "url": "https://blog.icehoney.me/posts/2023-07-09-credit-regex/",
            "title": "正则表达式匹配信用卡",
            "summary": "`",
            "date_modified": "2023-07-09T13:41:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-09-24-telegram-bot/",
            "url": "https://blog.icehoney.me/posts/2022-09-24-telegram-bot/",
            "title": "如何编写Telegram Bot",
            "summary": "import { Telegraf } from 'telegraf';",
            "date_modified": "2022-09-24T11:07:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-03-03-qrcode-version/",
            "url": "https://blog.icehoney.me/posts/2023-03-03-qrcode-version/",
            "title": "QR code 生成的相关参数",
            "summary": "选择 mask 的方案有相关的标准可以自行查询，本质目标是让生成的图片尽量黑白相间，避免同一颜色的色块大量出现，方便扫描器读取数据。",
            "image": "https://upload.wikimedia.org/wikipedia/commons/c/c8/QR_Code_Mask_Patterns.svg",
            "date_modified": "2023-03-03T20:42:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2023-01-14-android-reverse/",
            "url": "https://blog.icehoney.me/posts/2023-01-14-android-reverse/",
            "title": "安卓逆向的经验记录",
            "summary": "为什么这么分析呢，因为服务器端需要进行解密，那必须要把需要的参数都告诉服务端才能把密文解密回明文。",
            "date_modified": "2023-01-14T13:05:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-08-07-mobx-react/",
            "url": "https://blog.icehoney.me/posts/2022-08-07-mobx-react/",
            "title": "使用MobX管理React的状态",
            "summary": "};",
            "date_modified": "2022-08-07T14:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/",
            "url": "https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/",
            "title": "Git 提交规范",
            "summary": "incoming responses other than from latest request.\n`",
            "date_modified": "2022-07-23T20:37:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-07-04-typescript-enum/",
            "url": "https://blog.icehoney.me/posts/2022-07-04-typescript-enum/",
            "title": "TypeScript中应该禁止使用enum",
            "summary": "function fetchJSON(url: string, method: HTTPRequestMethodType) {\n  return fetch(url, { method }).then(response => response.json());\n}\n`",
            "date_modified": "2022-07-04T20:37:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-03-13-scroll-lock/",
            "url": "https://blog.icehoney.me/posts/2022-03-13-scroll-lock/",
            "title": "禁用页面滚动",
            "date_modified": "2022-03-13T15:11:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-06-20-deep-copy/",
            "url": "https://blog.icehoney.me/posts/2022-06-20-deep-copy/",
            "title": "JS中关于深拷贝和浅拷贝",
            "summary": "JS 有基本数据类型和复合数据类型，基本数据类型包括 null，undefined，boolean，number，string，symbol。针对这些数据类型都是值拷贝。复合数据类型包括 object，以及衍生的内置数据类型，Array, Map, Set 等等。默认对复合数据类型的赋值操作都是引用拷贝，就是浅拷贝。",
            "date_modified": "2022-06-20T19:37:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/",
            "url": "https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/",
            "title": "如何实现虚拟滚动条",
            "summary": "虚拟滚动的原理是显示的容器高度固定，我们只渲染用户看到的选项。但是选项容器的高度还是设置成所有选项的高度，这样滚动条效果保持一样，不过实际渲染的DOM数量却大大减少。",
            "date_modified": "2022-05-12T19:25:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-02-10-github-lfs/",
            "url": "https://blog.icehoney.me/posts/2022-02-10-github-lfs/",
            "title": "Github 存储大文件",
            "summary": "Counting objects: 100% (21/21), done.\nDelta compression using up to 10 threads\nCompressing objects: 100% (17/17), done.\nWriting objects: 100% (17/17), 153.95 MiB | 13.82 MiB/s, done.\nTotal 17 (delta 4), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (4/4), completed with 3 local objects.\nremote: error: Trace:\nremote: error: See http://git.io/iEPt8g for more information.\nremote: error: File xxx.db is 259.50 MB; this exceeds GitHub's file size limit of 100.00 MB\nremote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.\nTo https://github.com/acgotaku/switch.git\n ! [remote rejected] master -> master (pre-receive hook declined)\nerror: failed to push some refs to 'https://github.com/{user}/{repo}.git'\n`",
            "date_modified": "2022-02-10T23:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-04-13-m1-cpp/",
            "url": "https://blog.icehoney.me/posts/2022-04-13-m1-cpp/",
            "title": "Mac M1系统配置C++环境",
            "date_modified": "2022-04-13T20:03:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2022-01-27-react-tabs/",
            "url": "https://blog.icehoney.me/posts/2022-01-27-react-tabs/",
            "title": "React 实现 Tabs 组件",
            "summary": "基于 Vue 框架来实现各种 UI 组件之前有讲过，并且讲述了复合组件如何传递数据。一种方式是使用 Provide / inject， 另外一种是传统的 props 和 $emit()。\n但是 React 下复合组件如何实现，和 Vue 相比差距还是挺大的。接下来就讲述经典的 Tabs 组件如何来实现。",
            "date_modified": "2022-01-27T20:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/",
            "url": "https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/",
            "title": "代理Sentry的请求",
            "summary": "添加 tunnel 选项，Sentry 就会把请求发到这个路径下，然后我们后台再处理转发。",
            "date_modified": "2021-12-30T22:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/",
            "url": "https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/",
            "title": "CSS如何处理固定Header哈希标记跳转的问题",
            "summary": "h1[id] {\n  padding-top: var(--header-height);\n  margin-top: calc(var(--header-height) * -1);\n}\n`",
            "date_modified": "2021-11-20T21:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/",
            "url": "https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/",
            "title": "如何瘦身docker镜像",
            "summary": "首先我们需要安装依赖并编译网站，dockerfile 内容如下：",
            "date_modified": "2021-09-09T21:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-10-02-js-color/",
            "url": "https://blog.icehoney.me/posts/2021-10-02-js-color/",
            "title": "JS 关于颜色的相关处理",
            "summary": "return brightness < 128;\n  }\n`",
            "date_modified": "2021-10-02T10:26:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/",
            "url": "https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/",
            "title": "如何检测用户启动广告屏蔽插件",
            "summary": "if (isDisplayNone(node)) return true;",
            "date_modified": "2021-07-25T14:32:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/",
            "url": "https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/",
            "title": "Django使用CKEditor的相关经验",
            "summary": "https://s3.amazonaws.com/photos/puppy.jpg?AWSAccessKeyId=AKIAIOSFODNN7EXAMPLE&Signature=NpgCjnDzrM%2BWFzoENXmpNDUsSn8%3D&Expires=1175139620\n`",
            "date_modified": "2021-05-19T22:06:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-06-14-elk-docker/",
            "url": "https://blog.icehoney.me/posts/2021-06-14-elk-docker/",
            "title": "ELK收集Docker项目的日志",
            "summary": "input {\n\tbeats {\n\t\tport => 5044\n\t}",
            "date_modified": "2021-06-14T11:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-04-25-service-worker-push/",
            "url": "https://blog.icehoney.me/posts/2021-04-25-service-worker-push/",
            "title": "使用Service Worker的 Web Push 功能",
            "summary": ".then(registration => {\n    return registration.pushManager.getSubscription().then(subscription => {\n      if (subscription === null) {\n        return registration.pushManager.subscribe({\n          userVisibleOnly: true,\n          applicationServerKey: this.vapidPublicKey\n        });\n      } else {\n        return subscription;\n      }\n    });\n  })\n  .then(subscription => {\n    this.subJSON = subscription.toJSON();\n  });\n`",
            "date_modified": "2021-04-25T12:27:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-03-06-vue-code-style/",
            "url": "https://blog.icehoney.me/posts/2021-03-06-vue-code-style/",
            "title": "Vue代码风格",
            "summary": "@select=\"selectDate\"\n        />\n",
            "date_modified": "2021-03-06T12:02:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-02-20-sql-n-1/",
            "url": "https://blog.icehoney.me/posts/2021-02-20-sql-n-1/",
            "title": "数据库查询的N+1问题",
            "date_modified": "2021-02-20T13:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-02-06-web-accessibility/",
            "url": "https://blog.icehoney.me/posts/2021-02-06-web-accessibility/",
            "title": "提高网页的易读性",
            "summary": "正常人可以通过鼠标和键盘来操作浏览器，使用滚轮来滚动网页，使用鼠标左键和右键来执行操作，使用键盘输入内容。但是对于残疾人来说可能就不是这样的了，如果一个人身体行动不便只能通过键盘敲击来操作电脑，无法使用鼠标的情况下，如果网页不支持键盘 Tab 键来切换各种点击按钮，那就会给残疾人的使用带来困难。如果视力不好的人只能借助屏幕阅读器来查看网页，如果按钮或者图片没有合适的标签信息，那就无法通过屏幕阅读器来听到这个按钮或者图片的含义。我们不仅要考虑正常人如何查看网页，也需要顾及到特殊人群的需求，这样才能让每个人都享受到互联网带来的便利。",
            "date_modified": "2021-02-06T11:04:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-05-22-react-typescript/",
            "url": "https://blog.icehoney.me/posts/2020-05-22-react-typescript/",
            "title": "React的TypeScript写法",
            "summary": "import React, { ReactNode } from 'react';",
            "date_modified": "2020-05-22T22:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2021-01-23-javascript-performance/",
            "url": "https://blog.icehoney.me/posts/2021-01-23-javascript-performance/",
            "title": "JavaScript的加载优化",
            "summary": "服务器开启 GZIP 来减少传输的文件大小。",
            "image": "https://blog.icehoney.me/~@assets/js_async_defer.png",
            "date_modified": "2021-01-23T16:11:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/",
            "url": "https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/",
            "title": "vue实现datepicker组件",
            "summary": "function getFirstDayOfMonth(date: Date) {\n  const temp = new Date(date.getTime());\n  temp.setDate(1);\n  return temp.getDay();\n}\n`",
            "date_modified": "2020-11-30T14:07:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-12-20-loading-performance/",
            "url": "https://blog.icehoney.me/posts/2020-12-20-loading-performance/",
            "title": "前端开发中的加载性能优化",
            "summary": "可以使用 webpack 的SplitChunksPlugin， 分割 JS 文件，只打包首次载入需要的 JS 文件来减少网络请求。\n我们也可以使用Tree Shaking来引入需要的 JS 库，避免不使用的代码被打包进来。",
            "date_modified": "2020-12-20T10:48:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-08-09-simple-polygon/",
            "url": "https://blog.icehoney.me/posts/2020-08-09-simple-polygon/",
            "title": "简单多边形的判定",
            "summary": "if (\n    samePoint(l1.start, l2.start) ||\n    samePoint(l1.start, l2.end) ||\n    samePoint(l1.end, l2.start) ||\n    samePoint(l1.end, l2.end)\n  ) {\n    return false;\n  }\n  return (\n    signedArea(l1.start, l2.start, l2.end) !==\n      signedArea(l1.end, l2.start, l2.end) &&\n    signedArea(l1.start, l1.end, l2.start) !==\n      signedArea(l1.start, l1.end, l2.end)\n  );\n}",
            "date_modified": "2020-08-09T14:50:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/",
            "url": "https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/",
            "title": "前端中debounce和throttle函数说明",
            "date_modified": "2020-10-17T20:52:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-07-30-vue-components/",
            "url": "https://blog.icehoney.me/posts/2020-07-30-vue-components/",
            "title": "Vue中组件的设计",
            "summary": "Vue 中组件设计经常遇到复合组件的问题，例如下拉菜单，下拉菜单中我们不仅要实现select元素的功能，还要实现option元素的功能，这样才是一个完整的下拉菜单组件。",
            "date_modified": "2020-07-30T22:08:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/",
            "url": "https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/",
            "title": "在浏览器上显示TIF图像",
            "summary": "图像处理是一个很复杂的事情，如果别人有实现就别自己造轮子了。这里我推荐UTIF.js，这位作者实现了网页版图片编辑器。所以质量上还是很高的。",
            "date_modified": "2020-09-10T20:57:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/",
            "url": "https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/",
            "title": "Vue实现双Slider",
            "summary": "目前针对 Range 元素的样式定制化还没有纳入 Web 标准，所以在处理起来稍微花点功夫。首先，我们需要修改默认的滑块样式。使用的 CSS 选择器是-webkit-slider-thumb。由于未纳入标准，需要使用浏览器前缀才行。这里我们可以借助 postcss-input-range 插件来完成这项工作。",
            "date_modified": "2020-06-14T21:31:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/",
            "url": "https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/",
            "title": "Vue表单组件如何自动化输入",
            "summary": "接下来，我们讲下如何选中元素并调用$emit，例子是 Vue 官网的搜索框",
            "date_modified": "2020-04-23T22:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-03-19-vue-jest/",
            "url": "https://blog.icehoney.me/posts/2020-03-19-vue-jest/",
            "title": "Vue下使用jest进行单元测试",
            "summary": "moduleNameMapper: {\n    '^!svg-inline-loader!@(.*)$': require.resolve('jest-transform-stub')\n}\n`",
            "date_modified": "2020-03-19T21:56:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-01-23-aws-s3/",
            "url": "https://blog.icehoney.me/posts/2019-01-23-aws-s3/",
            "title": "亚马逊S3服务简单介绍",
            "summary": "Policy 的 Conditions 数组里面可以添加[\"starts-with\", \"$x-amz-meta-md5checksum\", \"\"]。最后一个参数为空字符串代表可以上传任何数值。",
            "date_modified": "2019-01-23T21:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/",
            "url": "https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/",
            "title": "前端开发如何防止逆向以及对策",
            "date_modified": "2020-02-22T18:03:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/",
            "url": "https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/",
            "title": "前端部署之CDN的那些事情",
            "summary": "现在的前端开发主流是 PWA，简而言之就是像 App 一样使用。基于 PWA 技术可以离线访问，并且可以添加程序到菜单里。离线技术使用的是比较成熟的 Service Workers。但是配合 CDN 就有很多不得不注意的事情。",
            "date_modified": "2020-01-14T22:59:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/",
            "url": "https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/",
            "title": "iOS12下Safari浏览器的BUG",
            "summary": "当我们遇到一个特殊需求，有两个绝对定位的 DIV(position:absolute)。如果指定了z-index必然会有上下的层级关系，值大的在上面，值小的在下面。但是我们需要上面的 DIV 不接受任何的事件，由下层的 DIV 捕获事件并处理。这时候可以使用一个神奇的 CSSpointer-events: none;来解决。只要给上层 DIV 指定了这个 CSS 属性，上层 DIV 就不会接收任何事件，相对的下层就可以收到所有事件的响应。",
            "date_modified": "2019-12-10T22:39:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-09-23-node-docker/",
            "url": "https://blog.icehoney.me/posts/2019-09-23-node-docker/",
            "title": "使用Docker运行node项目",
            "summary": "首先我们需要声明版本号version，不同的 Docker 版本对 docker-compose 的版本支持也不一样，可以参考官方的文档进行对照。\n然后声明services，service 下的每一个声明都是一个 Docker 的实例。下面介绍一个实际例子：",
            "date_modified": "2019-09-23T22:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-10-22-bezier-length/",
            "url": "https://blog.icehoney.me/posts/2019-10-22-bezier-length/",
            "title": "计算贝塞尔曲线的长度",
            "summary": "并且有详细的解释：Arc length",
            "date_modified": "2019-10-22T22:28:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-09-11-distance-latlng/",
            "url": "https://blog.icehoney.me/posts/2019-09-11-distance-latlng/",
            "title": "求经纬度两点距离",
            "summary": "笛卡尔坐标系（Cartesian coordinate system）也称直角坐标系，是我们高中时学过的坐标系。我们可以通过经纬度和地球半径来计算出直接坐标系的 X,Y,Z。然后通过直角坐标系中求两点距离公式，计算出两点距离，不过这个距离是直线距离。如果两点距离很远的情况下，可以看作是我们穿过地球的直线距离。可以借助 Cesium 的Cartesian3库方便的完成笛卡尔坐标系的转换和距离计算。",
            "date_modified": "2019-09-11T22:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/",
            "url": "https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/",
            "title": "Vue中如何设计面包屑",
            "summary": "下面来看看面包屑的结构。",
            "date_modified": "2019-07-28T23:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/",
            "url": "https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/",
            "title": "Github如何省略每次输入验证信息",
            "date_modified": "2019-06-23T20:21:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-04-28-webassmebly/",
            "url": "https://blog.icehoney.me/posts/2019-04-28-webassmebly/",
            "title": "使用WebAssembly编译C++到JS",
            "summary": "官方的 demo 是使用 src 的方式来引入，并且暴露成 Module 的全局变量。但是现代化的 Web 项目都是使用 webpack 打包，并且自动化引入的。所以我们也不想为了 WebAssembly 搞特殊。接下来就讲述如何配置来引入。首先，使用 emscripten 输出 mjs 文件，这样才可以作为模块被导入。具体的编译参数可以参照emcc。\n首先，wasm 格式并不能被 webpack 正确识别，我们需要添加 loader",
            "date_modified": "2019-04-28T20:51:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/",
            "url": "https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/",
            "title": "前端中的e2e测试",
            "summary": "customassertionspath: [\"tests/e2e/custom-assertions\"],\n      globals_path: \"globalsModule.js\",\n      src_folders: [\"tests/e2e/specs/web\"]",
            "date_modified": "2019-04-06T12:12:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/",
            "url": "https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/",
            "title": "localStorage互斥锁的使用",
            "date_modified": "2019-02-28T20:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-10-15-backend-development/",
            "url": "https://blog.icehoney.me/posts/2018-10-15-backend-development/",
            "title": "后端开发的技术总结",
            "summary": "说实话，最近前端开发的事情并不是很多。所以自己也慢慢开始做后端开发，逐渐向全沾工程师靠拢。现在的开发工作，分工分明，后端也只需要专注 API 的请求与返回就好了。",
            "date_modified": "2018-10-15T21:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-11-27-js-map/",
            "url": "https://blog.icehoney.me/posts/2018-11-27-js-map/",
            "title": "前端开发地图应用的调研",
            "summary": "产品需要在国内和国外使用，费用合理，可以换地图的贴图并且能在地图上绘制各种信息。例如多边形或圆形还有贝塞尔曲线。",
            "date_modified": "2018-11-27T21:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-09-08-cors-cookie/",
            "url": "https://blog.icehoney.me/posts/2018-09-08-cors-cookie/",
            "title": "跨域请求中的cookies处理",
            "summary": "`",
            "date_modified": "2018-09-08T23:07:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-08-01-random-seed/",
            "url": "https://blog.icehoney.me/posts/2018-08-01-random-seed/",
            "title": "伪随机的种子问题",
            "summary": "@rand = Random.new(1234)",
            "date_modified": "2018-08-01T22:07:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-07-06-offline-web/",
            "url": "https://blog.icehoney.me/posts/2018-07-06-offline-web/",
            "title": "Web离线的解决方案",
            "summary": "\n  ...\n\n`",
            "date_modified": "2018-07-06T23:25:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/",
            "url": "https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/",
            "title": "如何封装第三方vue组件",
            "summary": "父元素的属性继承可以使用v-bind=\"$attrs\"来完成。所以完成组建的透明封装只需要加上三个指令。",
            "date_modified": "2018-05-29T23:19:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-04-08-website-https/",
            "url": "https://blog.icehoney.me/posts/2018-04-08-website-https/",
            "title": "使用letsencrypt为自己的网站加密",
            "summary": "sudo yum install gcc libffi-devel python-devel openssl-devel\n`",
            "date_modified": "2018-04-08T20:51:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-02-13-rendering-performance/",
            "url": "https://blog.icehoney.me/posts/2018-02-13-rendering-performance/",
            "title": "浏览器的渲染性能",
            "summary": "如果修改了元素的布局属性，也就是改变了元素的几何属性（例如宽度，高度）。那么浏览器就必须检查所有元素，然后重新排版页面。任何受影响的部分都要重新绘制，再重新合成。",
            "image": "https://blog.icehoney.me/~@assets/frame-full.jpg",
            "date_modified": "2018-02-13T20:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-04-25-javascript-performance/",
            "url": "https://blog.icehoney.me/posts/2018-04-25-javascript-performance/",
            "title": "JavaScript开发中的性能优化",
            "summary": "function onScroll(evt) {\n  // Prevent multiple rAF callbacks.\n  if (scheduledAnimationFrame) return;",
            "date_modified": "2018-04-25T23:22:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2018-01-16-javascript-types/",
            "url": "https://blog.icehoney.me/posts/2018-01-16-javascript-types/",
            "title": "JavaScript中的数据类型",
            "summary": "JavaScript 中的变量是没有类型的，只有值才有。变量可以随时持有任何类型的值。",
            "date_modified": "2018-01-16T22:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-11-18-frontend-development/",
            "url": "https://blog.icehoney.me/posts/2017-11-18-frontend-development/",
            "title": "前端开发的技术栈",
            "summary": "参考：",
            "date_modified": "2017-11-18T17:18:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-09-16-github-workflow/",
            "url": "https://blog.icehoney.me/posts/2017-09-16-github-workflow/",
            "title": "Github团队协作",
            "summary": "`",
            "date_modified": "2017-09-16T22:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-10-21-modal-scroll/",
            "url": "https://blog.icehoney.me/posts/2017-10-21-modal-scroll/",
            "title": "网站开发中的Modal问题",
            "summary": "参考：",
            "date_modified": "2017-10-21T14:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-08-06-css-trick/",
            "url": "https://blog.icehoney.me/posts/2017-08-06-css-trick/",
            "title": "CSS技巧和工作总结",
            "summary": "CSS 动画尽量使用transform: translate3d(0,0,0)来实现，因为 ransform3d api 会强制开启 GPU 加速提高页面的流畅度。在公司的项目中，从使用background-position进行动画效果换成transform之后，动画流畅度得到了显著的改善。",
            "date_modified": "2017-08-06T15:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-06-30-webpack/",
            "url": "https://blog.icehoney.me/posts/2016-06-30-webpack/",
            "title": "模块化JavaScript开发",
            "date_modified": "2016-06-30T16:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-06-18-javascript-object/",
            "url": "https://blog.icehoney.me/posts/2017-06-18-javascript-object/",
            "title": "JavaScript对象的常见操作",
            "summary": "工作也算是稳定了，不过理想和现实的差距还是很大。程序员的职责是把枯燥的工作自动化，而不是去进行重复劳动。最近在写 JavaScript 程序的时候，遇到了很多对象相关的操作。所以写点东西来总结下这半个月的成长。",
            "date_modified": "2017-06-18T22:13:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-05-07-css/",
            "url": "https://blog.icehoney.me/posts/2017-05-07-css/",
            "title": "CSS笔记和杂谈",
            "summary": "这是一个最基本的设计布局。在一行上有多列的内容，最简单的例子是导航栏。HTML 的大致结构是这样的：",
            "date_modified": "2017-05-07T21:49:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2017-01-29-go/",
            "url": "https://blog.icehoney.me/posts/2017-01-29-go/",
            "title": "Golang语言学习分享",
            "summary": "首先，请大家阅读官方的这篇文档How to Write Go Code。这篇文章介绍了如何写一个基本的 Golang 程序和类，这里要说的是GOPATH，使用 Golang 语言必须要设置GOPATH环境变量，可以通过使用go env来查询 Golang 相关的环境变量。GOPATH下一般有三个文件夹 bin,src,pkg。src 下存放我们写的 Golang 项目，bin 下是编译好的二进制文件，pkg 文件夹下是生成的库文件。我们安装的第三方库也会存放在 src 文件夹下，记住 Golang 引用的包名的根文件夹是GOPATH的 src 文件夹，所以我们一般都要使用绝对路径来引用包避免出现错误。",
            "date_modified": "2017-01-29T09:49:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/",
            "url": "https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/",
            "title": "Linux高并发系统参数优化",
            "summary": "`",
            "date_modified": "2016-11-27T18:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/",
            "url": "https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/",
            "title": "逆向JavaScript经验分享",
            "summary": "这个请求总共有 17 个请求参数，真是够多的。但是我们不知道所有请求参数是否是必须的。有可能服务器只校验其中的几个参数，所以我们没有必要对每个参数都分析一遍。",
            "image": "https://blog.icehoney.me/~@assets/iqiyi.png",
            "date_modified": "2016-12-19T19:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-05-05-webgl-render/",
            "url": "https://blog.icehoney.me/posts/2016-05-05-webgl-render/",
            "title": "WebGL渲染的知识介绍",
            "summary": "顶点的 X,Y,Z 轴的取值范围全部是-1 到 1 之间，所以要注意变换坐标。",
            "image": "https://blog.icehoney.me/~@assets/webgl_graphics_pipeline.jpg",
            "date_modified": "2016-05-05T10:43:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-09-20-latex/",
            "url": "https://blog.icehoney.me/posts/2016-09-20-latex/",
            "title": "使用Latex书写论文",
            "summary": "当然，我们也没必要一定要系统的学习，如果别人有做好现成的模板，我们直接套用就好，非常方便，中科大也有热心的小伙伴制作了模板。地址是USTC Thesis。近期抽时间的话，我会制作一个软件学院专用的论文模板。",
            "date_modified": "2016-09-20T20:16:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2016-03-21-cors-options-method/",
            "url": "https://blog.icehoney.me/posts/2016-03-21-cors-options-method/",
            "title": "关于JavaScript跨域请求的相关知识",
            "date_modified": "2016-03-21T14:33:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/",
            "url": "https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/",
            "title": "使用最小费用最大流模型解决酒店管理收益最大化问题",
            "summary": "最近老师布置个作业,很没有头绪,于是各种咨询,大家的解决方案是使用最小费用最大流模型来求解,于是我便花了 3 天时间来理解这个算法.",
            "image": "https://blog.icehoney.me/~@assets/model.png",
            "date_modified": "2015-12-29T11:15:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/",
            "url": "https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/",
            "title": "解决Dota2在Archlinux下的各种疑难杂症",
            "summary": "Dota2 只能通过 Alt 和鼠标左键的配合发信号.无法像 Dota 一样可以单纯使用鼠标发信号.但是有些用户可能发现自己无法发信号.\n原因在于你使用的窗口管理器已经为 Alt 和鼠标左键绑定了事件,所以你得取消窗口管理器的事件绑定,例如 openbox 需要修改配置文件 rc.xml 找到鼠标事件并注释掉事件绑定的内容.",
            "date_modified": "2015-12-01T21:58:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/",
            "url": "https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/",
            "title": "Chrome扩展和Web Page 进行通讯",
            "summary": "发送消息,然后在 Content Scripts 监听 message 事件捕捉消息发送回 Background\n这种方式适合单向通讯,只从 web page 发送数据到 Background 或者 Background 发送给 web page 如果双向通讯的话就很不方便了\n因为 Content Scripts 和 web page 共享 window 会造成事件重复绑定的.",
            "date_modified": "2015-08-25T19:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/",
            "url": "https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/",
            "title": "Archlinux和Win 10 在 UEFI下 双启动",
            "summary": "假设你用 dd 刻录好之后,然后用电脑 U 盘启动,出现启动菜单 选择 Arch Linux archiso x86_64 UEFI CD 之后遇到黑屏的问题.",
            "date_modified": "2015-10-28T23:32:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-10-05-python-image-process/",
            "url": "https://blog.icehoney.me/posts/2015-10-05-python-image-process/",
            "title": "使用Python实现Histogram_equalization算法",
            "summary": "Histogram_equalization",
            "date_modified": "2015-10-05T23:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/",
            "url": "https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/",
            "title": "Chromebook Pixel (2013) 安装Linux的方法",
            "summary": "首先你需要破解硬件写保护，按照 wiki 上的说法需要拆机和跳线，具体的操作可以查看这个wiki,拆机操作非常危险，请自己慎重考虑。",
            "date_modified": "2015-04-20T19:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/",
            "url": "https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/",
            "title": "突破同源策略限制的方法",
            "summary": "关键代码：",
            "date_modified": "2015-04-20T19:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/",
            "url": "https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/",
            "title": "解压和打包安卓DAT文件",
            "summary": "封装仍需要使用工具 使用 rimg2sdat",
            "date_modified": "2015-07-28T19:54:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-02-28-windows-injection/",
            "url": "https://blog.icehoney.me/posts/2015-02-28-windows-injection/",
            "title": "Windows下如何进行进程注入",
            "summary": "然后再使用GetExitCodeThreadAPI，得到返回的结果。",
            "date_modified": "2015-02-28T15:53:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/",
            "url": "https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/",
            "title": "CSS使用box-shadow和border-radius的妙用",
            "image": "https://blog.icehoney.me/~@assets/css_1.png",
            "date_modified": "2015-03-17T15:08:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2015-01-31-aria2-download/",
            "url": "https://blog.icehoney.me/posts/2015-01-31-aria2-download/",
            "title": "使用Aria2下载百度网盘和115的资源",
            "summary": "虽然我已经开发了两款专门为 Aria2 用的下载插件,但是我发现还是有同学不会用 Aria2c 这么好的东西呢~\n于是还是写一篇文章来好好的介绍下吧~",
            "date_modified": "2015-01-31T09:41:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/",
            "url": "https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/",
            "title": "扇贝单词助手发布",
            "summary": "然后我就趁着国庆就开坑了,binux 也给了我很多参考资料.因为之前也开发过 Chrome 的扩展,所以对 Chrome 提供的 API 比较熟悉.这里就介绍下使用的相关的 JavaScript 的知识吧~",
            "date_modified": "2014-10-30T18:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/",
            "url": "https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/",
            "title": "使用Postfix,Dovecot和Mysql配置邮件服务器",
            "summary": "教程上设置的证书位置是:",
            "date_modified": "2014-12-25T15:41:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-11-23-javascript-binary/",
            "url": "https://blog.icehoney.me/posts/2014-11-23-javascript-binary/",
            "title": "JavaScript处理二进制数据",
            "summary": "};\n    port.postMessage(data);\n  };\n  reader.readAsBinaryString(blob);\n};",
            "date_modified": "2014-11-23T14:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-09-30-computer-endian/",
            "url": "https://blog.icehoney.me/posts/2014-09-30-computer-endian/",
            "title": "计算机中的字节序问题",
            "date_modified": "2014-09-30T12:30:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/",
            "url": "https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/",
            "title": "Linux下恢复误删除的文件",
            "summary": "经常有时候喜欢删除文件...但是之后又后悔删除... Linux 下 rm 之后是没有回收站的.\n于是我便寻找恢复文件的相关资料.",
            "date_modified": "2014-07-21T17:39:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/",
            "url": "https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/",
            "title": "chrome扩展开发经验记录",
            "summary": "一个扩展肯定需要长时间运行的脚本对扩展进行管理.这个脚本就属于 Background Pages 的一部分.\n不过由于 Background Pages 是一直运行的,对资源占用比较多.现在已经用 Event Pages 代替.Event Pages 是按需加载,不需要的时候不会激活运行.\nEvent Pages 的 JS 可以使用 chrome 的所有 API.",
            "date_modified": "2014-08-23T16:01:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-04-30-javascript-closure/",
            "url": "https://blog.icehoney.me/posts/2014-04-30-javascript-closure/",
            "title": "JavaScript函数中的闭包",
            "summary": "}\n  return b;\n}\nvar c = a();\nc();\n`",
            "date_modified": "2014-04-30T16:18:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-07-02-baidu-pan/",
            "url": "https://blog.icehoney.me/posts/2014-07-02-baidu-pan/",
            "title": "百度网盘新版API",
            "summary": "新版 API 把每个功能全部模块化,声明某个模块的方法是使用 require 方法.",
            "date_modified": "2014-07-02T14:09:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/",
            "url": "https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/",
            "title": "Archlinux下声卡的设置与折腾",
            "summary": "Subdevices: 1/1\n  Subdevice #0: subdevice #0\n`",
            "image": "https://blog.icehoney.me/~@assets/alsamixer.png",
            "date_modified": "2014-06-05T09:22:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/",
            "url": "https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/",
            "title": "JavaScript中一个经典的正则例子",
            "summary": "}\n`",
            "date_modified": "2014-05-08T09:44:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/",
            "url": "https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/",
            "title": "JavaScript函数调用的四种方式",
            "summary": "console.log(inc);\n  }\n};\nmyObject.increment(); // 1\nmyObject.increment(2); // 3\n`",
            "date_modified": "2014-04-24T15:28:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-04-20-linux-notes/",
            "url": "https://blog.icehoney.me/posts/2014-04-20-linux-notes/",
            "title": "Archlinux折腾笔记",
            "date_modified": "2014-04-20T19:52:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-04-01-interview/",
            "url": "https://blog.icehoney.me/posts/2014-04-01-interview/",
            "title": "面试笔记",
            "summary": "三月下旬,病还没有完全康复.我便赶往上海.只因为认识的一位菊苣帮我投递了一下简历.而且据说人家对我简历印象还不错.\n现在想想,自己还真是幼稚...这句话就像你问店里员工我的菜怎么还没上,人家一定会回答:马上就好了,都已经下锅了.\n刚刚抵达上海的时候已经是晚上,这是我人生第一次去上海,有种乡下人进城里的感觉.带着梦想与希望,来到了这个地方.",
            "date_modified": "2014-04-01T19:20:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-03-08-long-march/",
            "url": "https://blog.icehoney.me/posts/2014-03-08-long-march/",
            "title": "漫无止境的三月",
            "summary": "光看书真的很没劲,于是我又开坑了...为了练习 python,我想当后端工程师啊!IE 一天不死我写前端就不会痛快!\n新项目就这么愉快的开坑了,前端懒的设计就直接用Bootstrap了,感觉 Bootstrap 也就只能用些组件的 UI,\n布局神马的还是不符合我的胃口.项目部署的网址是:http://netkuu.icehoney.me/ 目前还是绝赞填坑中~\n前端后端全部自己一个人写,希望能把自己锻炼成 full stack developer~ 现在就差数据库练手了,好久没玩数据库了.",
            "date_modified": "2014-03-08T12:03:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/",
            "url": "https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/",
            "title": "GUI和CLI的使用比较",
            "summary": "力量.同时,你也将无法组合你的各种工具,创建定制的宏工具.\nGUI 的好处是 WYSIWYG--所见即所得(what you see is what you get).缺点是 WYSIAYG--所见即全部所得(what you see is all you get).",
            "date_modified": "2014-01-18T23:06:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-10-24-program-efficiency/",
            "url": "https://blog.icehoney.me/posts/2013-10-24-program-efficiency/",
            "title": "关于程序运行效率的一点见解",
            "summary": "杂度都是一样的,运行起来没啥区别的.当然对于现在的高速 CPU 和这个元素比较少的数组来说其实也没多大差别,但是不能\n因为这个就去忽略程序的效率问题.",
            "date_modified": "2013-10-24T23:06:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/",
            "url": "https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/",
            "title": "程序员修炼之道",
            "date_modified": "2014-02-05T17:18:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/",
            "url": "https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/",
            "title": "Archlinux下有关无损音乐的折腾",
            "summary": "但是,有个明显的缺陷是分轨之后的文件居然不是用歌曲名字命名的!\n而且还是我不怎么喜欢的 wav 格式...\n不过我还是在菊苣的帮助下找到了完美的解决方案~",
            "date_modified": "2013-10-06T23:29:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/",
            "url": "https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/",
            "title": "Archlinux下使用airbase和dhcpd建立虚拟AP",
            "summary": "`",
            "date_modified": "2013-08-26T21:29:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/",
            "url": "https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/",
            "title": "Archlinux下Galaxy Nexus刷机并root",
            "summary": "前面提供的 wiki 已经很详细的讲述如何进行ADB 的配置了",
            "date_modified": "2013-07-20T14:12:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/",
            "url": "https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/",
            "title": "Archlinux下终端进行代理的解决方案",
            "summary": "注意后面有个点,容易忽略. 这个是转入的 SOCKET5 代理,指的是 SSH 的代理监听的端口号.\n配置文件里面有句话是 listen-address 127.0.0.1:8118 这个是转发出去的 HTTP 代理的端口号.\n这样写好之后, 启动服务 sudo systemctl start privoxy.service",
            "date_modified": "2013-07-18T22:05:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/",
            "url": "https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/",
            "title": "Sublime使用笔记以及插件推荐",
            "summary": "`",
            "date_modified": "2013-07-02T22:06:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/",
            "url": "https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/",
            "title": "Ubuntu下apache2的配置记录",
            "summary": "Order allow,deny\n  Allow from all\n",
            "date_modified": "2013-06-06T21:41:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/",
            "url": "https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/",
            "title": "使用GRUB2引导ISO镜像",
            "summary": "的意思是 IDE 硬盘用 hd 表示,这里也可以表示 U 盘,0 表示第一块磁盘,从 0 开始计数.1 代表的是第一块分区,这里是从 1 开始计数.因为 U 盘引导的话第一块磁盘肯定是\nU 盘,所以前面的肯定是 0,后面的 1 代表的是分区,如果你的分区是从其它数字开始的就做相应修改.第四行是加载内核,也就是 ios 里面的内核所在路径,archisolabel 代表的\n是虚拟挂载的时候的卷标,注意这个一定不能和你现有的硬盘或者 U 盘的卷标重复,否则会出现错误的.img_dev 表示的是镜像所在的设备位置,这里使用 uuid 来表示,因为 uuid 是\nU 盘的固有属性,一般不会发生变化(除非你格式化 U 盘),所以保证一定能找到设备.",
            "date_modified": "2013-04-25T21:17:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/",
            "url": "https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/",
            "title": "关于CSS解决高度自适应和宽度自适应的问题",
            "date_modified": "2013-03-10T19:09:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-02-07-start-blog/",
            "url": "https://blog.icehoney.me/posts/2013-02-07-start-blog/",
            "title": "个人博客的建立",
            "summary": "好吧,我建立个人博客的想法其实已经差不多有一年了吧.一直没去实现...主要原因还是自己太懒...一开始想用 WordPress 搭建一个....其实我也搭建了\n但是由于一直找不到好看的主题就坑在那一年多了...后来还想用 Octopress 来搭建...又由于自己当时的系统是 Win 而放弃了,现在我把自己的系统换成\nArch 并且在学习 Python,于是又开坑了...",
            "date_modified": "2013-02-07T22:07:00.000Z"
        },
        {
            "id": "https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/",
            "url": "https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/",
            "title": "安徽师范大学校园视频下载器2.0版本发布",
            "summary": "IE 浏览器中查看,然后查看源代码进行了分析工作.原理其实很简单,就是通过解析服务器上的 XML 文件进行网页的渲染,XML 文件里面记录了服务器上所有的\n视频资源和视频的 ID,然后通过一步步的研究直接找到了资源的下载地址.详细的原理请看我 github 上公开的VideoSeach\n里面的 Function.cs 记录了具体解析过程.",
            "date_modified": "2013-03-15T15:30:00.000Z"
        }
    ]
}