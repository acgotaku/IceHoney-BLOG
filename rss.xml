<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>IceHoney</title>
        <link>https://blog.icehoney.me/</link>
        <description>IceHoney是雪月秋水君的博客~ 记录秋水君生活的点点滴滴~</description>
        <lastBuildDate>Wed, 13 Mar 2024 13:04:28 GMT</lastBuildDate>
        <docs>http://blogs.law.harvard.edu/tech/rss</docs>
        <generator>https://github.com/webmasterish/vuepress-plugin-feed</generator>
        <atom:link href="https://blog.icehoney.me/feed.atom" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[QR code 生成的相关参数]]></title>
            <link>https://blog.icehoney.me/posts/2023-03-03-qrcode-version/</link>
            <guid>https://blog.icehoney.me/posts/2023-03-03-qrcode-version/</guid>
            <pubDate>Fri, 03 Mar 2023 20:42:00 GMT</pubDate>
            <description><![CDATA[QR code 本身就是把文字生成一个二维码的过程，顶多指定一下纠错等级。但是有些硬件设备只支持特定参数的二维码，所以我就查了一下二维码的相关规范了解一下生成过程中需要哪些参数。]]></description>
            <enclosure url="https://upload.wikimedia.org/wikipedia/commons/c/c8/QR_Code_Mask_Patterns.svg">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[Archlinux下安装过wps之后字体发虚的问题]]></title>
            <link>https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/</link>
            <guid>https://blog.icehoney.me/posts/2013-07-04-archlinux-wps-font/</guid>
            <pubDate>Thu, 04 Jul 2013 12:39:00 GMT</pubDate>
            <description><![CDATA[之所以字体发虚是因为安装 WPS 之后的方正字体使得 Sans 和 Sans-Serif 字体的中文部分默认指向了方正宋体.所以导致个这个问题的发生...
左边是微米黑,右边是装过 WPS 之后映射的宋体字.... 明显右边太难看了有木有!!! 解决方案是自己编写 fonts.conf 设置字体的优先级...
文泉驿提供了一个在线配置生成工具
这个网页有部分 JS 资源被墙了,所以需要科学上网才能正常使用,需要注意.
配置完成之后点上面的“生成[create]”按钮,将结果复制保存到~/.fonts.conf 就能覆盖系统的字体选择顺序.
注意上面的方法在 Archlinux 下会出现警告错误提示是过时的使用方法.
正确的解决办法是把配置文件写在 /etc/fonts/conf.avail/50-user.conf
这样就可以完美解决字体发虚的问题了.]]></description>
        </item>
        <item>
            <title><![CDATA[关于微云下载的那点事]]></title>
            <link>https://blog.icehoney.me/posts/2013-04-28-about-weiyun/</link>
            <guid>https://blog.icehoney.me/posts/2013-04-28-about-weiyun/</guid>
            <pubDate>Sun, 28 Apr 2013 21:31:00 GMT</pubDate>
            <description><![CDATA[在这个页面载入的时候可以很清楚的看到网页对这个网址进行 POST 请求,提交的表单是个 json 对象]]></description>
        </item>
        <item>
            <title><![CDATA[前端的缓存策略]]></title>
            <link>https://blog.icehoney.me/posts/2024-03-13-cache-control/</link>
            <guid>https://blog.icehoney.me/posts/2024-03-13-cache-control/</guid>
            <pubDate>Wed, 13 Mar 2024 21:58:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[如何使用TypeScript进行后端开发]]></title>
            <link>https://blog.icehoney.me/posts/2022-10-29-typescript-backend/</link>
            <guid>https://blog.icehoney.me/posts/2022-10-29-typescript-backend/</guid>
            <pubDate>Sat, 29 Oct 2022 11:47:00 GMT</pubDate>
            <description><![CDATA[我们经常使用 TypeScript 进行开发，webpack 会自动帮我们编译成浏览器可以执行的 JS 文件。相关的开发工具也很完善，但是进行后端开发的资料就比较少了，我们来讲解下如何使用 TypeScript 进行后端开发。]]></description>
        </item>
        <item>
            <title><![CDATA[macOS下运行红警2游戏]]></title>
            <link>https://blog.icehoney.me/posts/2023-12-17-macos-ra2/</link>
            <guid>https://blog.icehoney.me/posts/2023-12-17-macos-ra2/</guid>
            <pubDate>Sun, 17 Dec 2023 11:20:00 GMT</pubDate>
            <description><![CDATA[CrossOver 是一款可以在 Mac 上运行 Windows 程序的软件，我们可以使用 CrossOver 来运行红警 2 游戏。CrossOver 有 14 天的试用期，我们可以先下载试用一下。]]></description>
        </item>
        <item>
            <title><![CDATA[嵌套表格如何实现边框合并]]></title>
            <link>https://blog.icehoney.me/posts/2023-12-03-css-nested-table/</link>
            <guid>https://blog.icehoney.me/posts/2023-12-03-css-nested-table/</guid>
            <pubDate>Sun, 03 Dec 2023 10:20:00 GMT</pubDate>
            <description><![CDATA[第一个实现方式非常简单，只需要在父表格中删除嵌套表格单元格的边框即可，但是这样做会导致父表格的边框和子表格的边框不重合，而且视觉上不美观。
第二个实现方式需要在子表格中添加一些 CSS，让子表格的边框和父表格的边框重合。我们可以使用下面的 CSS 来实现：]]></description>
        </item>
        <item>
            <title><![CDATA[macOS下苹果手机刷机]]></title>
            <link>https://blog.icehoney.me/posts/2023-11-11-flash-ios/</link>
            <guid>https://blog.icehoney.me/posts/2023-11-11-flash-ios/</guid>
            <pubDate>Sat, 11 Nov 2023 20:03:00 GMT</pubDate>
            <description><![CDATA[苹果的刷机比安卓简单很多，但是苹果的手机刷机是不能降级的，所以需要注意固件的版本。]]></description>
        </item>
        <item>
            <title><![CDATA[macOS下编译C++文件]]></title>
            <link>https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/</link>
            <guid>https://blog.icehoney.me/posts/2023-10-09-macos-build-cpp/</guid>
            <pubDate>Mon, 09 Oct 2023 12:10:00 GMT</pubDate>
            <description><![CDATA[`]]></description>
        </item>
        <item>
            <title><![CDATA[正则表达式匹配信用卡]]></title>
            <link>https://blog.icehoney.me/posts/2023-07-09-credit-regex/</link>
            <guid>https://blog.icehoney.me/posts/2023-07-09-credit-regex/</guid>
            <pubDate>Sun, 09 Jul 2023 13:41:00 GMT</pubDate>
            <description><![CDATA[`]]></description>
        </item>
        <item>
            <title><![CDATA[无限滚动加载列表]]></title>
            <link>https://blog.icehoney.me/posts/2023-06-03-scroll-loader/</link>
            <guid>https://blog.icehoney.me/posts/2023-06-03-scroll-loader/</guid>
            <pubDate>Sat, 03 Jun 2023 12:55:00 GMT</pubDate>
            <description><![CDATA[observerRef.current.observe(loaderRef.current);
        }
      } else {
        setCompleted(true);
        updateCompleted?.(true);
      }
    });
  }, [inView, updateCompleted]);]]></description>
        </item>
        <item>
            <title><![CDATA[网页调用摄像头读取QR code]]></title>
            <link>https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/</link>
            <guid>https://blog.icehoney.me/posts/2022-12-17-web-qr-reader/</guid>
            <pubDate>Sat, 17 Dec 2022 17:29:00 GMT</pubDate>
            <description><![CDATA[if (stopRef.current) {
              controls.stop();
            }
          }
        )
        .catch(error => {
          onResult && onResult(undefined, error);
        });
    }
    return () => {
      stopRef.current = true;
    };
  }, [videoId, scanDelay, constraints, onResult]);
  return (

  );
};
`]]></description>
        </item>
        <item>
            <title><![CDATA[拖拽排序列表]]></title>
            <link>https://blog.icehoney.me/posts/2023-04-16-draggable-list/</link>
            <guid>https://blog.icehoney.me/posts/2023-04-16-draggable-list/</guid>
            <pubDate>Sun, 16 Apr 2023 12:31:00 GMT</pubDate>
            <description><![CDATA[`]]></description>
        </item>
        <item>
            <title><![CDATA[安卓逆向的经验记录]]></title>
            <link>https://blog.icehoney.me/posts/2023-01-14-android-reverse/</link>
            <guid>https://blog.icehoney.me/posts/2023-01-14-android-reverse/</guid>
            <pubDate>Sat, 14 Jan 2023 13:05:00 GMT</pubDate>
            <description><![CDATA[}]]></description>
        </item>
        <item>
            <title><![CDATA[如何编写Telegram Bot]]></title>
            <link>https://blog.icehoney.me/posts/2022-09-24-telegram-bot/</link>
            <guid>https://blog.icehoney.me/posts/2022-09-24-telegram-bot/</guid>
            <pubDate>Sat, 24 Sep 2022 11:07:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[使用MobX管理React的状态]]></title>
            <link>https://blog.icehoney.me/posts/2022-08-07-mobx-react/</link>
            <guid>https://blog.icehoney.me/posts/2022-08-07-mobx-react/</guid>
            <pubDate>Sun, 07 Aug 2022 14:43:00 GMT</pubDate>
            <description><![CDATA[使用 PWA 框架进行应用开发，不论是 Vue 还是 React，最关注的设计应该就是状态的管理了。React 生态下状态管理的框架可谓是五花八门，本人目前用过两个，分别是
@reduxjs/toolkit 和 mobx-react。
个人感觉 Mobx 用起来更简洁，所以本文着重介绍 Mobx。]]></description>
        </item>
        <item>
            <title><![CDATA[TypeScript中应该禁止使用enum]]></title>
            <link>https://blog.icehoney.me/posts/2022-07-04-typescript-enum/</link>
            <guid>https://blog.icehoney.me/posts/2022-07-04-typescript-enum/</guid>
            <pubDate>Mon, 04 Jul 2022 20:37:00 GMT</pubDate>
            <description><![CDATA[GET = 'GET',
  POST = 'POST'
}]]></description>
        </item>
        <item>
            <title><![CDATA[Git 提交规范]]></title>
            <link>https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/</link>
            <guid>https://blog.icehoney.me/posts/2022-07-23-git-commit-lint/</guid>
            <pubDate>Sat, 23 Jul 2022 20:37:00 GMT</pubDate>
            <description><![CDATA[[optional footer(s)]
`]]></description>
        </item>
        <item>
            <title><![CDATA[JS中关于深拷贝和浅拷贝]]></title>
            <link>https://blog.icehoney.me/posts/2022-06-20-deep-copy/</link>
            <guid>https://blog.icehoney.me/posts/2022-06-20-deep-copy/</guid>
            <pubDate>Mon, 20 Jun 2022 19:37:00 GMT</pubDate>
            <description><![CDATA[export const isObject = (obj: any): boolean => {
  return obj !== null && typeof obj === 'object';
};]]></description>
        </item>
        <item>
            <title><![CDATA[Mac M1系统配置C++环境]]></title>
            <link>https://blog.icehoney.me/posts/2022-04-13-m1-cpp/</link>
            <guid>https://blog.icehoney.me/posts/2022-04-13-m1-cpp/</guid>
            <pubDate>Wed, 13 Apr 2022 20:03:00 GMT</pubDate>
            <description><![CDATA[export CPATH=/opt/homebrew/include
export LIBRARY_PATH=/opt/homebrew/lib
`]]></description>
        </item>
        <item>
            <title><![CDATA[如何实现虚拟滚动条]]></title>
            <link>https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/</link>
            <guid>https://blog.icehoney.me/posts/2022-05-12-virtual-scroll/</guid>
            <pubDate>Thu, 12 May 2022 19:25:00 GMT</pubDate>
            <description><![CDATA[}, [itemData, startIndex, visibleItemCount]);]]></description>
        </item>
        <item>
            <title><![CDATA[Github 存储大文件]]></title>
            <link>https://blog.icehoney.me/posts/2022-02-10-github-lfs/</link>
            <guid>https://blog.icehoney.me/posts/2022-02-10-github-lfs/</guid>
            <pubDate>Thu, 10 Feb 2022 23:16:00 GMT</pubDate>
            <description><![CDATA[`]]></description>
        </item>
        <item>
            <title><![CDATA[禁用页面滚动]]></title>
            <link>https://blog.icehoney.me/posts/2022-03-13-scroll-lock/</link>
            <guid>https://blog.icehoney.me/posts/2022-03-13-scroll-lock/</guid>
            <pubDate>Sun, 13 Mar 2022 15:11:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[React 实现 Tabs 组件]]></title>
            <link>https://blog.icehoney.me/posts/2022-01-27-react-tabs/</link>
            <guid>https://blog.icehoney.me/posts/2022-01-27-react-tabs/</guid>
            <pubDate>Thu, 27 Jan 2022 20:16:00 GMT</pubDate>
            <description><![CDATA[基于 Vue 框架来实现各种 UI 组件之前有讲过，并且讲述了复合组件如何传递数据。一种方式是使用 Provide / inject， 另外一种是传统的 props 和 $emit()。
但是 React 下复合组件如何实现，和 Vue 相比差距还是挺大的。接下来就讲述经典的 Tabs 组件如何来实现。]]></description>
        </item>
        <item>
            <title><![CDATA[代理Sentry的请求]]></title>
            <link>https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/</link>
            <guid>https://blog.icehoney.me/posts/2021-12-30-sentry-proxy/</guid>
            <pubDate>Thu, 30 Dec 2021 22:21:00 GMT</pubDate>
            <description><![CDATA[添加 tunnel 选项，Sentry 就会把请求发到这个路径下，然后我们后台再处理转发。]]></description>
        </item>
        <item>
            <title><![CDATA[CSS如何处理固定Header哈希标记跳转的问题]]></title>
            <link>https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/</link>
            <guid>https://blog.icehoney.me/posts/2021-11-20-css-fixed-header/</guid>
            <pubDate>Sat, 20 Nov 2021 21:21:00 GMT</pubDate>
            <description><![CDATA[h1[id] {
  padding-top: var(--header-height);
  margin-top: calc(var(--header-height) * -1);
}
`]]></description>
        </item>
        <item>
            <title><![CDATA[JS 关于颜色的相关处理]]></title>
            <link>https://blog.icehoney.me/posts/2021-10-02-js-color/</link>
            <guid>https://blog.icehoney.me/posts/2021-10-02-js-color/</guid>
            <pubDate>Sat, 02 Oct 2021 10:26:00 GMT</pubDate>
            <description><![CDATA[return brightness < 128;
  }
`]]></description>
        </item>
        <item>
            <title><![CDATA[Django使用CKEditor的相关经验]]></title>
            <link>https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/</link>
            <guid>https://blog.icehoney.me/posts/2021-05-19-django-ckeditor-s3/</guid>
            <pubDate>Wed, 19 May 2021 22:06:00 GMT</pubDate>
            <description><![CDATA[default_acl = 'private'
`]]></description>
        </item>
        <item>
            <title><![CDATA[如何瘦身docker镜像]]></title>
            <link>https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/</link>
            <guid>https://blog.icehoney.me/posts/2021-09-09-slim-docker-image/</guid>
            <pubDate>Thu, 09 Sep 2021 21:44:00 GMT</pubDate>
            <description><![CDATA[WORKDIR /app
COPY . /app
ENV NODE_ENV production
RUN yarn build && yarn express:build
`]]></description>
        </item>
        <item>
            <title><![CDATA[如何检测用户启动广告屏蔽插件]]></title>
            <link>https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/</link>
            <guid>https://blog.icehoney.me/posts/2021-07-25-detect-ad-blocker/</guid>
            <pubDate>Sun, 25 Jul 2021 14:32:00 GMT</pubDate>
            <description><![CDATA[广告屏蔽插件的原理基本有三种，第一是有列表黑名单，出现在列表黑名单的资源都会直接被中断网络请求，例如无法加载图片，JavaScript 文件等等。第二是关键字匹配，如果资源文件里面有 ad 之类的相关广告关键字，那这个资源也会被中断请求。第三个是 DOM 检测，针对已经渲染好的 HTML 文件，通过 class 属性来检测是否有相关的广告关键字。如果符合结果，就删除相应的元素。]]></description>
        </item>
        <item>
            <title><![CDATA[使用Service Worker的 Web Push 功能]]></title>
            <link>https://blog.icehoney.me/posts/2021-04-25-service-worker-push/</link>
            <guid>https://blog.icehoney.me/posts/2021-04-25-service-worker-push/</guid>
            <pubDate>Sun, 25 Apr 2021 12:27:00 GMT</pubDate>
            <description><![CDATA["expirationTime": null,
  "keys": {
    "p256dh": "BDtGmJB0Bkyum0WJw8NiiCn4U9ckX8UjhzXPUad2HM0yID0ced8zUHKr-Yhf6p2Z7IS0G07dGG7Tnl5jlwQVog4",
    "auth": "25JGSYqTKvj_nAeodHBHSQ"
  }
}
`]]></description>
        </item>
        <item>
            <title><![CDATA[ELK收集Docker项目的日志]]></title>
            <link>https://blog.icehoney.me/posts/2021-06-14-elk-docker/</link>
            <guid>https://blog.icehoney.me/posts/2021-06-14-elk-docker/</guid>
            <pubDate>Mon, 14 Jun 2021 11:21:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Vue代码风格]]></title>
            <link>https://blog.icehoney.me/posts/2021-03-06-vue-code-style/</link>
            <guid>https://blog.icehoney.me/posts/2021-03-06-vue-code-style/</guid>
            <pubDate>Sat, 06 Mar 2021 12:02:00 GMT</pubDate>
            <description><![CDATA[良好的代码风格更容易维护代码，虽然没有绝对的标准，但保持自己一贯的代码风格可以提高代码质量。接下来就来介绍我开发 Vue 代码的大致风格吧。]]></description>
        </item>
        <item>
            <title><![CDATA[JavaScript的加载优化]]></title>
            <link>https://blog.icehoney.me/posts/2021-01-23-javascript-performance/</link>
            <guid>https://blog.icehoney.me/posts/2021-01-23-javascript-performance/</guid>
            <pubDate>Sat, 23 Jan 2021 16:11:00 GMT</pubDate>
            <description><![CDATA[一方面，只加载当前页面需要的 JavaScript 文件，可以使用 webpack 的code-splitting来解决。另一方面，懒加载一些不是必须的 JavaScript 文件。]]></description>
            <enclosure url="https://blog.icehoney.me/~@assets/js_async_defer.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[数据库查询的N+1问题]]></title>
            <link>https://blog.icehoney.me/posts/2021-02-20-sql-n-1/</link>
            <guid>https://blog.icehoney.me/posts/2021-02-20-sql-n-1/</guid>
            <pubDate>Sat, 20 Feb 2021 13:44:00 GMT</pubDate>
            <description><![CDATA[如果汽车和轮胎是一对一的关系可以通过使用 join 语句来减少数据库查询次数。把查询降为 1 次。修正之后的查询语句是：]]></description>
        </item>
        <item>
            <title><![CDATA[提高网页的易读性]]></title>
            <link>https://blog.icehoney.me/posts/2021-02-06-web-accessibility/</link>
            <guid>https://blog.icehoney.me/posts/2021-02-06-web-accessibility/</guid>
            <pubDate>Sat, 06 Feb 2021 11:04:00 GMT</pubDate>
            <description><![CDATA[但是并不是所有的 HTML 元素都是可以 focus 的，下面是查找可以 focus 的元素的方法。]]></description>
        </item>
        <item>
            <title><![CDATA[前端开发中的加载性能优化]]></title>
            <link>https://blog.icehoney.me/posts/2020-12-20-loading-performance/</link>
            <guid>https://blog.icehoney.me/posts/2020-12-20-loading-performance/</guid>
            <pubDate>Sun, 20 Dec 2020 10:48:00 GMT</pubDate>
            <description><![CDATA[可以使用 webpack 的SplitChunksPlugin， 分割 JS 文件，只打包首次载入需要的 JS 文件来减少网络请求。
我们也可以使用Tree Shaking来引入需要的 JS 库，避免不使用的代码被打包进来。]]></description>
        </item>
        <item>
            <title><![CDATA[vue实现datepicker组件]]></title>
            <link>https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/</link>
            <guid>https://blog.icehoney.me/posts/2020-11-30-vue-datepicker/</guid>
            <pubDate>Mon, 30 Nov 2020 14:07:00 GMT</pubDate>
            <description><![CDATA[日期选择组件，是为数不多需要做多语言支持的组件。因为我们要显示月份和每周的名字。就不得不做多语言处理了。目前我做的 demo 里面包含了三种语言的支持。]]></description>
        </item>
        <item>
            <title><![CDATA[前端中debounce和throttle函数说明]]></title>
            <link>https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/</link>
            <guid>https://blog.icehoney.me/posts/2020-10-17-debounce-and-throttle/</guid>
            <pubDate>Sat, 17 Oct 2020 20:52:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[在浏览器上显示TIF图像]]></title>
            <link>https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/</link>
            <guid>https://blog.icehoney.me/posts/2020-09-10-show-tif-in-web/</guid>
            <pubDate>Thu, 10 Sep 2020 20:57:00 GMT</pubDate>
            <description><![CDATA[在实际的业务中，我们需要在浏览器中对 TIF 文件的某个区域进行选择，所以需要展示 TIF 文件在浏览器中。不过浏览器并不能直接支持 TIF 格式，所以我们需要做相应的处理。]]></description>
        </item>
        <item>
            <title><![CDATA[简单多边形的判定]]></title>
            <link>https://blog.icehoney.me/posts/2020-08-09-simple-polygon/</link>
            <guid>https://blog.icehoney.me/posts/2020-08-09-simple-polygon/</guid>
            <pubDate>Sun, 09 Aug 2020 14:50:00 GMT</pubDate>
            <description><![CDATA[我们可以借助向量的知识来判断两个线段是否相交。二维向量的叉乘(cross product)的几何意义是以两向量为邻边的平行四边形的面积。此外，定义两个向量 a, b。
当 aXb  0，b 在 a 的逆时针方向。
如果两条线段相交，那必然一条线段的终点和起点，在另外一条线段的两侧。]]></description>
        </item>
        <item>
            <title><![CDATA[Vue中组件的设计]]></title>
            <link>https://blog.icehoney.me/posts/2020-07-30-vue-components/</link>
            <guid>https://blog.icehoney.me/posts/2020-07-30-vue-components/</guid>
            <pubDate>Thu, 30 Jul 2020 22:08:00 GMT</pubDate>
            <description><![CDATA[:value="item.value"
  >

`]]></description>
        </item>
        <item>
            <title><![CDATA[Vue实现双Slider]]></title>
            <link>https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/</link>
            <guid>https://blog.icehoney.me/posts/2020-06-14-vue-dual-slider/</guid>
            <pubDate>Sun, 14 Jun 2020 21:31:00 GMT</pubDate>
            <description><![CDATA[目前针对 Range 元素的样式定制化还没有纳入 Web 标准，所以在处理起来稍微花点功夫。首先，我们需要修改默认的滑块样式。使用的 CSS 选择器是-webkit-slider-thumb。由于未纳入标准，需要使用浏览器前缀才行。这里我们可以借助 postcss-input-range 插件来完成这项工作。]]></description>
        </item>
        <item>
            <title><![CDATA[Vue表单组件如何自动化输入]]></title>
            <link>https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/</link>
            <guid>https://blog.icehoney.me/posts/2020-04-23-vue-hack-form/</guid>
            <pubDate>Thu, 23 Apr 2020 22:43:00 GMT</pubDate>
            <description><![CDATA[接下来，我们讲下如何选中元素并调用$emit，例子是 Vue 官网的搜索框]]></description>
        </item>
        <item>
            <title><![CDATA[React的TypeScript写法]]></title>
            <link>https://blog.icehoney.me/posts/2020-05-22-react-typescript/</link>
            <guid>https://blog.icehoney.me/posts/2020-05-22-react-typescript/</guid>
            <pubDate>Fri, 22 May 2020 22:43:00 GMT</pubDate>
            <description><![CDATA[}
}]]></description>
        </item>
        <item>
            <title><![CDATA[前端开发如何防止逆向以及对策]]></title>
            <link>https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/</link>
            <guid>https://blog.icehoney.me/posts/2020-02-22-hack-dev-tools/</guid>
            <pubDate>Sat, 22 Feb 2020 18:03:00 GMT</pubDate>
            <description><![CDATA[Object.defineProperty(window, 'Image', { writable: false });
`]]></description>
        </item>
        <item>
            <title><![CDATA[Vue下使用jest进行单元测试]]></title>
            <link>https://blog.icehoney.me/posts/2020-03-19-vue-jest/</link>
            <guid>https://blog.icehoney.me/posts/2020-03-19-vue-jest/</guid>
            <pubDate>Thu, 19 Mar 2020 21:56:00 GMT</pubDate>
            <description><![CDATA[做单元测试的时候，mock 是非常常见的需求，例如我们在一个文件里引用了 store 的数据，但是要构造这个数据非常复杂，所以我们需要直接 mock 数据。这里需要注意的是，如果是 import 引入的话，我们需要先 mock 再使用动态引用的方式加载测试模块，保证是在 import 之前 mock 数据。]]></description>
        </item>
        <item>
            <title><![CDATA[前端部署之CDN的那些事情]]></title>
            <link>https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/</link>
            <guid>https://blog.icehoney.me/posts/2020-01-14-frontend-deploy/</guid>
            <pubDate>Tue, 14 Jan 2020 22:59:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[iOS12下Safari浏览器的BUG]]></title>
            <link>https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/</link>
            <guid>https://blog.icehoney.me/posts/2019-12-10-ios-safari-bug/</guid>
            <pubDate>Tue, 10 Dec 2019 22:39:00 GMT</pubDate>
            <description><![CDATA[新时代的前端开发遇上新时代的 IE6, 没错我说的就是苹果的 Safari 浏览器，当年谷歌抛弃 WebKit 内核自立门户真是正确的选择。Chrome 有很好的 bug 反馈机制，而 Safari 要想反馈 bug 首先得成为苹果的付费开发者。]]></description>
        </item>
        <item>
            <title><![CDATA[计算贝塞尔曲线的长度]]></title>
            <link>https://blog.icehoney.me/posts/2019-10-22-bezier-length/</link>
            <guid>https://blog.icehoney.me/posts/2019-10-22-bezier-length/</guid>
            <pubDate>Tue, 22 Oct 2019 22:28:00 GMT</pubDate>
            <description><![CDATA[这次讲述的是二阶贝塞尔曲线的长度计算。首先计算曲线的长度之前，我们需要知道曲线的数学方程表达式，由于目前博客还未支持数学表达式的显示，所以我只能帖出wiki 链接。求曲线的长度，本质上是很难计算出精确值的，但只要近似值的误差绝对小，在实际使用中也是足够的。求曲线的长度本质上是进行定积分的计算。]]></description>
        </item>
        <item>
            <title><![CDATA[使用Docker运行node项目]]></title>
            <link>https://blog.icehoney.me/posts/2019-09-23-node-docker/</link>
            <guid>https://blog.icehoney.me/posts/2019-09-23-node-docker/</guid>
            <pubDate>Mon, 23 Sep 2019 22:43:00 GMT</pubDate>
            <description><![CDATA[首先我们需要声明版本号version，不同的 Docker 版本对 docker-compose 的版本支持也不一样，可以参考官方的文档进行对照。
然后声明services，service 下的每一个声明都是一个 Docker 的实例。下面介绍一个实际例子：]]></description>
        </item>
        <item>
            <title><![CDATA[Vue中如何设计面包屑]]></title>
            <link>https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/</link>
            <guid>https://blog.icehoney.me/posts/2019-07-28-vue-app-breadcrumbs/</guid>
            <pubDate>Sun, 28 Jul 2019 23:21:00 GMT</pubDate>
            <description><![CDATA[当资源层级很深的时候，我们需要做很多空的父节点来处理。]]></description>
        </item>
        <item>
            <title><![CDATA[求经纬度两点距离]]></title>
            <link>https://blog.icehoney.me/posts/2019-09-11-distance-latlng/</link>
            <guid>https://blog.icehoney.me/posts/2019-09-11-distance-latlng/</guid>
            <pubDate>Wed, 11 Sep 2019 22:43:00 GMT</pubDate>
            <description><![CDATA[笛卡尔坐标系（Cartesian coordinate system）也称直角坐标系，是我们高中时学过的坐标系。我们可以通过经纬度和地球半径来计算出直接坐标系的 X,Y,Z。然后通过直角坐标系中求两点距离公式，计算出两点距离，不过这个距离是直线距离。如果两点距离很远的情况下，可以看作是我们穿过地球的直线距离。可以借助 Cesium 的Cartesian3库方便的完成笛卡尔坐标系的转换和距离计算。]]></description>
        </item>
        <item>
            <title><![CDATA[使用WebAssembly编译C++到JS]]></title>
            <link>https://blog.icehoney.me/posts/2019-04-28-webassmebly/</link>
            <guid>https://blog.icehoney.me/posts/2019-04-28-webassmebly/</guid>
            <pubDate>Sun, 28 Apr 2019 20:51:00 GMT</pubDate>
            <description><![CDATA[loader: 'file-loader',
}
`]]></description>
        </item>
        <item>
            <title><![CDATA[Github如何省略每次输入验证信息]]></title>
            <link>https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/</link>
            <guid>https://blog.icehoney.me/posts/2019-06-23-github-omit-auth/</guid>
            <pubDate>Sun, 23 Jun 2019 20:21:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[前端中的e2e测试]]></title>
            <link>https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/</link>
            <guid>https://blog.icehoney.me/posts/2019-04-06-javascript-e2e-test/</guid>
            <pubDate>Sat, 06 Apr 2019 12:12:00 GMT</pubDate>
            <description><![CDATA[对于单页面应用，我们需要由前端来控制每个页面的路由。但是在开发过程中，我们经常要对路由进行调整。每次调整都要手动检查所有页面是否正常显示。这个过程实在是太浪费生命了，
所以我们需要选择一个测试框架来自动完成这个过程，结合 CI 系统，在每次 PR 的时候都自动测试一遍，只有通过测试才会进行下一步的 review。]]></description>
        </item>
        <item>
            <title><![CDATA[localStorage互斥锁的使用]]></title>
            <link>https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/</link>
            <guid>https://blog.icehoney.me/posts/2019-02-28-localstorage-mutex/</guid>
            <pubDate>Thu, 28 Feb 2019 20:20:00 GMT</pubDate>
            <description><![CDATA[这个问题查了不少时间，目前有的解决方案：Shared Web Workers和 fast mutex。由于想尽可能的支持更多浏览器，所以我们选择了后者。]]></description>
        </item>
        <item>
            <title><![CDATA[亚马逊S3服务简单介绍]]></title>
            <link>https://blog.icehoney.me/posts/2019-01-23-aws-s3/</link>
            <guid>https://blog.icehoney.me/posts/2019-01-23-aws-s3/</guid>
            <pubDate>Wed, 23 Jan 2019 21:20:00 GMT</pubDate>
            <description><![CDATA[var params = {
  Bucket: 'bucket',
  Conditions: [['starts-with', '$key', 'path/to/uploads/']]
};
s3.createPresignedPost(params, function(err, data) {
  if (err) {
    console.error('Presigning post data encountered an error', err);
  } else {
    data.Fields.key = 'path/to/uploads/${filename}';
    console.log('The post data is', data);
  }
});
`]]></description>
        </item>
        <item>
            <title><![CDATA[前端开发地图应用的调研]]></title>
            <link>https://blog.icehoney.me/posts/2018-11-27-js-map/</link>
            <guid>https://blog.icehoney.me/posts/2018-11-27-js-map/</guid>
            <pubDate>Tue, 27 Nov 2018 21:20:00 GMT</pubDate>
            <description><![CDATA[每个国家都有自己的坐标系系统，虽然 GPS 使用的WGS 84标准非常流行，但是这个是美国制定的。每个国家当然都需要根据自己国家需要来定制自己的标准。例如中国就有北京 54 坐标系，西安 80 坐标系。北京 54 和西安 80 是参心坐标系，大地原点分别在苏联和西安。难以表达高度信息，目前国家正在推广2000 国家大地坐标系,这个和 WGS84 一样是地心坐标系，即以地球质量中心为原点。日本也有自己的平面直角坐标系，我们当然需要各种坐标转换，还好有现成的开源项目proj4js。]]></description>
        </item>
        <item>
            <title><![CDATA[后端开发的技术总结]]></title>
            <link>https://blog.icehoney.me/posts/2018-10-15-backend-development/</link>
            <guid>https://blog.icehoney.me/posts/2018-10-15-backend-development/</guid>
            <pubDate>Mon, 15 Oct 2018 21:20:00 GMT</pubDate>
            <description><![CDATA[参考：]]></description>
        </item>
        <item>
            <title><![CDATA[Web离线的解决方案]]></title>
            <link>https://blog.icehoney.me/posts/2018-07-06-offline-web/</link>
            <guid>https://blog.icehoney.me/posts/2018-07-06-offline-web/</guid>
            <pubDate>Fri, 06 Jul 2018 23:25:00 GMT</pubDate>
            <description><![CDATA[参考：]]></description>
        </item>
        <item>
            <title><![CDATA[跨域请求中的cookies处理]]></title>
            <link>https://blog.icehoney.me/posts/2018-09-08-cors-cookie/</link>
            <guid>https://blog.icehoney.me/posts/2018-09-08-cors-cookie/</guid>
            <pubDate>Sat, 08 Sep 2018 23:07:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[伪随机的种子问题]]></title>
            <link>https://blog.icehoney.me/posts/2018-08-01-random-seed/</link>
            <guid>https://blog.icehoney.me/posts/2018-08-01-random-seed/</guid>
            <pubDate>Wed, 01 Aug 2018 22:07:00 GMT</pubDate>
            <description><![CDATA[最近前端的工作不是很多，所以就帮忙写写后端的 ruby on rails。在写测试用例的时候，虽然单元测试的数据每次都是随机生成的，但是我们需要根据单元测试来生成 API 文档。如果测试文档每次都是随机的数据会很难检查每次 API 更新了什么，所以我们需要在生产测试文档的时候，保证随机数据的稳定性。]]></description>
        </item>
        <item>
            <title><![CDATA[如何封装第三方vue组件]]></title>
            <link>https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/</link>
            <guid>https://blog.icehoney.me/posts/2018-05-29-wrapper-vue-component/</guid>
            <pubDate>Tue, 29 May 2018 23:19:00 GMT</pubDate>
            <description><![CDATA[v-model 本质上就是绑定一个值和监听相应的事件。
这次本质是封装的一个 input 元素，所以我们需要手动绑定 value 和监听事件。]]></description>
        </item>
        <item>
            <title><![CDATA[JavaScript开发中的性能优化]]></title>
            <link>https://blog.icehoney.me/posts/2018-04-25-javascript-performance/</link>
            <guid>https://blog.icehoney.me/posts/2018-04-25-javascript-performance/</guid>
            <pubDate>Wed, 25 Apr 2018 23:22:00 GMT</pubDate>
            <description><![CDATA[举个最简单的例子，我曾经在一本书上看到过一个提升程序效率的例子。大致是这样的：]]></description>
        </item>
        <item>
            <title><![CDATA[JavaScript中的数据类型]]></title>
            <link>https://blog.icehoney.me/posts/2018-01-16-javascript-types/</link>
            <guid>https://blog.icehoney.me/posts/2018-01-16-javascript-types/</guid>
            <pubDate>Tue, 16 Jan 2018 22:44:00 GMT</pubDate>
            <description><![CDATA[除了对象之外，通称基本类型。]]></description>
        </item>
        <item>
            <title><![CDATA[使用letsencrypt为自己的网站加密]]></title>
            <link>https://blog.icehoney.me/posts/2018-04-08-website-https/</link>
            <guid>https://blog.icehoney.me/posts/2018-04-08-website-https/</guid>
            <pubDate>Sun, 08 Apr 2018 20:51:00 GMT</pubDate>
            <description><![CDATA[sudo yum install gcc libffi-devel python-devel openssl-devel
`]]></description>
        </item>
        <item>
            <title><![CDATA[JavaScript对象的常见操作]]></title>
            <link>https://blog.icehoney.me/posts/2017-06-18-javascript-object/</link>
            <guid>https://blog.icehoney.me/posts/2017-06-18-javascript-object/</guid>
            <pubDate>Sun, 18 Jun 2017 22:13:00 GMT</pubDate>
            <description><![CDATA[针对数组，现在已经不推荐用 for 循环来进行处理了，请使用数组的map, filter，reduce来处理数组的操作。相信这三个方法足以满足需求。]]></description>
        </item>
        <item>
            <title><![CDATA[浏览器的渲染性能]]></title>
            <link>https://blog.icehoney.me/posts/2018-02-13-rendering-performance/</link>
            <guid>https://blog.icehoney.me/posts/2018-02-13-rendering-performance/</guid>
            <pubDate>Tue, 13 Feb 2018 20:44:00 GMT</pubDate>
            <description><![CDATA[目前既不要绘制也不要布局的属性只有transform属性和opacity属性。所以在实现 CSS 动画的时候，优先使用这两个属性。]]></description>
            <enclosure url="https://blog.icehoney.me/~@assets/frame-full.jpg">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[前端开发的技术栈]]></title>
            <link>https://blog.icehoney.me/posts/2017-11-18-frontend-development/</link>
            <guid>https://blog.icehoney.me/posts/2017-11-18-frontend-development/</guid>
            <pubDate>Sat, 18 Nov 2017 17:18:00 GMT</pubDate>
            <description><![CDATA[参考：]]></description>
        </item>
        <item>
            <title><![CDATA[网站开发中的Modal问题]]></title>
            <link>https://blog.icehoney.me/posts/2017-10-21-modal-scroll/</link>
            <guid>https://blog.icehoney.me/posts/2017-10-21-modal-scroll/</guid>
            <pubDate>Sat, 21 Oct 2017 14:30:00 GMT</pubDate>
            <description><![CDATA[参考：]]></description>
        </item>
        <item>
            <title><![CDATA[Github团队协作]]></title>
            <link>https://blog.icehoney.me/posts/2017-09-16-github-workflow/</link>
            <guid>https://blog.icehoney.me/posts/2017-09-16-github-workflow/</guid>
            <pubDate>Sat, 16 Sep 2017 22:30:00 GMT</pubDate>
            <description><![CDATA[git clean -f
`]]></description>
        </item>
        <item>
            <title><![CDATA[CSS技巧和工作总结]]></title>
            <link>https://blog.icehoney.me/posts/2017-08-06-css-trick/</link>
            <guid>https://blog.icehoney.me/posts/2017-08-06-css-trick/</guid>
            <pubDate>Sun, 06 Aug 2017 15:30:00 GMT</pubDate>
            <description><![CDATA[CSS 动画尽量使用transform: translate3d(0,0,0)来实现，因为 ransform3d api 会强制开启 GPU 加速提高页面的流畅度。在公司的项目中，从使用background-position进行动画效果换成transform之后，动画流畅度得到了显著的改善。]]></description>
        </item>
        <item>
            <title><![CDATA[CSS笔记和杂谈]]></title>
            <link>https://blog.icehoney.me/posts/2017-05-07-css/</link>
            <guid>https://blog.icehoney.me/posts/2017-05-07-css/</guid>
            <pubDate>Sun, 07 May 2017 21:49:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Golang语言学习分享]]></title>
            <link>https://blog.icehoney.me/posts/2017-01-29-go/</link>
            <guid>https://blog.icehoney.me/posts/2017-01-29-go/</guid>
            <pubDate>Sun, 29 Jan 2017 09:49:00 GMT</pubDate>
            <description><![CDATA[Golang 语言是谷歌开发的编程语言，虽然运行效率比不上 C 语言那么高效，但是也算比 C 语言更容易开发，因为内置了很多数据结构和借鉴了其它语言的优点，容易学习和开发。在实习的阶段也使用 Go 语言开发了一个简单的项目。所以想把学习的一些经验记录下来。]]></description>
        </item>
        <item>
            <title><![CDATA[逆向JavaScript经验分享]]></title>
            <link>https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/</link>
            <guid>https://blog.icehoney.me/posts/2016-12-19-reverse-javascript/</guid>
            <pubDate>Mon, 19 Dec 2016 19:16:00 GMT</pubDate>
            <description><![CDATA[前端无论怎么样的操作，本质上都是向服务器发送请求，然后解析请求数据，展现在页面上。所以说逆向的切入点就是查看网络请求！因为我要分析视频的源 MP4 文件而不是 flash 文件，所以我把浏览器模拟成手机让爱奇艺载入手机版界面以便抓包获取 MP4 文件。切换成手机版很简单，只需要在 Chrome 上按 F12 打开开发人员工具，点击左上角的 Toggle device toolbar图标就可以切换成手机设备了，我选择模拟的设备是 Nexus 6P。这时候重新刷新页面，查看NetWork面板。里面会有这个页面载入发起的所有请求，我们重点找的是各种 JS 发起的请求和带参数的请求。最笨的办法就是一个请求一个请求看一遍，总有你需要的。]]></description>
            <enclosure url="https://blog.icehoney.me/~@assets/iqiyi.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[Linux高并发系统参数优化]]></title>
            <link>https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/</link>
            <guid>https://blog.icehoney.me/posts/2016-11-27-linux-tune-guide/</guid>
            <pubDate>Sun, 27 Nov 2016 18:16:00 GMT</pubDate>
            <description><![CDATA[`]]></description>
        </item>
        <item>
            <title><![CDATA[使用Latex书写论文]]></title>
            <link>https://blog.icehoney.me/posts/2016-09-20-latex/</link>
            <guid>https://blog.icehoney.me/posts/2016-09-20-latex/</guid>
            <pubDate>Tue, 20 Sep 2016 20:16:00 GMT</pubDate>
            <description><![CDATA[网上有很多 Latex 的学习资料，不过我们也没必要详细学习，在此介绍一个简单的学习资料。一份不太简短的 LATEX 介绍基本上看完这个文档就可以大致明白如何利用 Latex 书写论文。]]></description>
        </item>
        <item>
            <title><![CDATA[模块化JavaScript开发]]></title>
            <link>https://blog.icehoney.me/posts/2016-06-30-webpack/</link>
            <guid>https://blog.icehoney.me/posts/2016-06-30-webpack/</guid>
            <pubDate>Thu, 30 Jun 2016 16:43:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[WebGL渲染的知识介绍]]></title>
            <link>https://blog.icehoney.me/posts/2016-05-05-webgl-render/</link>
            <guid>https://blog.icehoney.me/posts/2016-05-05-webgl-render/</guid>
            <pubDate>Thu, 05 May 2016 10:43:00 GMT</pubDate>
            <description><![CDATA[来到日本导师的研究方向是计算机图形学，由于我比较擅长 Web 开发，便选择了 WebGL 进行图形渲染的研究课题。学习了大半年，也该写点东西介绍下自己对 WebGL 的理解，如有错误，欢迎批评指正。]]></description>
            <enclosure url="https://blog.icehoney.me/~@assets/webgl_graphics_pipeline.jpg">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[关于JavaScript跨域请求的相关知识]]></title>
            <link>https://blog.icehoney.me/posts/2016-03-21-cors-options-method/</link>
            <guid>https://blog.icehoney.me/posts/2016-03-21-cors-options-method/</guid>
            <pubDate>Mon, 21 Mar 2016 14:33:00 GMT</pubDate>
            <description><![CDATA[跨域请求指得是发起请求的资源所在域不同于该请求所指向资源所在的域的 HTTP 请求.最常见的就是跨域载入图片,我们可以看到很多网站主站和网站所使用的图片
是不同的域名的.这样做的好处是请求图片的时候不会发送主站的 Cookies,因为不同域名嘛.而且还可以减少主站的服务器压力.但载入图片使用的是 GET 方法,比较简单.]]></description>
        </item>
        <item>
            <title><![CDATA[使用最小费用最大流模型解决酒店管理收益最大化问题]]></title>
            <link>https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/</link>
            <guid>https://blog.icehoney.me/posts/2015-12-29-minimum-cost-flow-problem/</guid>
            <pubDate>Tue, 29 Dec 2015 11:15:00 GMT</pubDate>
            <description><![CDATA[顶点 11 和顶点 16 是重复边的订单,对应的是第一个订单和第 6 个订单.源码和输入数据可以在文章末尾看到.]]></description>
            <enclosure url="https://blog.icehoney.me/~@assets/model.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[Archlinux和Win 10 在 UEFI下 双启动]]></title>
            <link>https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/</link>
            <guid>https://blog.icehoney.me/posts/2015-10-28-uefi-dual-boot-archlinux/</guid>
            <pubDate>Wed, 28 Oct 2015 23:32:00 GMT</pubDate>
            <description><![CDATA[你可以先试试禁用 KMS]]></description>
        </item>
        <item>
            <title><![CDATA[解决Dota2在Archlinux下的各种疑难杂症]]></title>
            <link>https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/</link>
            <guid>https://blog.icehoney.me/posts/2015-12-01-archlinux-dota2/</guid>
            <pubDate>Tue, 01 Dec 2015 21:58:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[使用Python实现Histogram_equalization算法]]></title>
            <link>https://blog.icehoney.me/posts/2015-10-05-python-image-process/</link>
            <guid>https://blog.icehoney.me/posts/2015-10-05-python-image-process/</guid>
            <pubDate>Mon, 05 Oct 2015 23:54:00 GMT</pubDate>
            <description><![CDATA[最近刚来日本忙着生活上的事情,对技术上的研究也有点松懈了.在日本的研究课题是计算机图形学.所以就选修了相关的课程,
最基本的当然是图形处理,老师的第一个任务就是实现 Histogram equalization 算法.中文名字就是直方图均衡化.]]></description>
        </item>
        <item>
            <title><![CDATA[Chrome扩展和Web Page 进行通讯]]></title>
            <link>https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/</link>
            <guid>https://blog.icehoney.me/posts/2015-08-25-communication-between-extensions-and-web-page/</guid>
            <pubDate>Tue, 25 Aug 2015 19:54:00 GMT</pubDate>
            <description><![CDATA[没有任何限制,可以拥有完整的 Chrome 的 API 权限.]]></description>
        </item>
        <item>
            <title><![CDATA[解压和打包安卓DAT文件]]></title>
            <link>https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/</link>
            <guid>https://blog.icehoney.me/posts/2015-07-28-compression-and-decompression-dat-files/</guid>
            <pubDate>Tue, 28 Jul 2015 19:54:00 GMT</pubDate>
            <description><![CDATA[`]]></description>
        </item>
        <item>
            <title><![CDATA[突破同源策略限制的方法]]></title>
            <link>https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/</link>
            <guid>https://blog.icehoney.me/posts/2015-04-20-breaking-the-same-origin-policy/</guid>
            <pubDate>Mon, 20 Apr 2015 19:54:00 GMT</pubDate>
            <description><![CDATA[本质上是因为 GET 方法不受同源策略限制，然后获取到的数据不是 json，而是一段 JavaScript 并解释执行。]]></description>
        </item>
        <item>
            <title><![CDATA[Chromebook Pixel (2013) 安装Linux的方法]]></title>
            <link>https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/</link>
            <guid>https://blog.icehoney.me/posts/2015-04-20-chromebook-pixel-install-linux/</guid>
            <pubDate>Mon, 20 Apr 2015 19:54:00 GMT</pubDate>
            <description><![CDATA[在终端里面输入下面的指令：]]></description>
        </item>
        <item>
            <title><![CDATA[Windows下如何进行进程注入]]></title>
            <link>https://blog.icehoney.me/posts/2015-02-28-windows-injection/</link>
            <guid>https://blog.icehoney.me/posts/2015-02-28-windows-injection/</guid>
            <pubDate>Sat, 28 Feb 2015 15:53:00 GMT</pubDate>
            <description><![CDATA[微软照样还是提供了相关的CreateRemoteThreadAPI，我们注意最后一个参数是输出而不是输入。]]></description>
        </item>
        <item>
            <title><![CDATA[CSS使用box-shadow和border-radius的妙用]]></title>
            <link>https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/</link>
            <guid>https://blog.icehoney.me/posts/2015-03-17-css-box-shadow-border-radius/</guid>
            <pubDate>Tue, 17 Mar 2015 15:08:00 GMT</pubDate>
            <enclosure url="https://blog.icehoney.me/~@assets/css_1.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[使用Aria2下载百度网盘和115的资源]]></title>
            <link>https://blog.icehoney.me/posts/2015-01-31-aria2-download/</link>
            <guid>https://blog.icehoney.me/posts/2015-01-31-aria2-download/</guid>
            <pubDate>Sat, 31 Jan 2015 09:41:00 GMT</pubDate>
            <description><![CDATA[虽然我已经开发了两款专门为 Aria2 用的下载插件,但是我发现还是有同学不会用 Aria2c 这么好的东西呢~
于是还是写一篇文章来好好的介绍下吧~]]></description>
        </item>
        <item>
            <title><![CDATA[使用Postfix,Dovecot和Mysql配置邮件服务器]]></title>
            <link>https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/</link>
            <guid>https://blog.icehoney.me/posts/2014-12-25-configure-mail-server/</guid>
            <pubDate>Thu, 25 Dec 2014 15:41:00 GMT</pubDate>
            <description><![CDATA[Google 一下便找到了一个十分详细的教程,分享给大家:How To Configure a Mail Server Using Postfix, Dovecot, MySQL, and SpamAssasin
教程虽然很详细,但难免有不理解和差错的地方.下面就讲下我遇到的问题:]]></description>
        </item>
        <item>
            <title><![CDATA[扇贝单词助手发布]]></title>
            <link>https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/</link>
            <guid>https://blog.icehoney.me/posts/2014-10-30-shanbay-helper/</guid>
            <pubDate>Thu, 30 Oct 2014 18:30:00 GMT</pubDate>
            <description><![CDATA[resolve(data);
      } else {
        reject();
      }
    });
  });
}
`]]></description>
        </item>
        <item>
            <title><![CDATA[JavaScript处理二进制数据]]></title>
            <link>https://blog.icehoney.me/posts/2014-11-23-javascript-binary/</link>
            <guid>https://blog.icehoney.me/posts/2014-11-23-javascript-binary/</guid>
            <pubDate>Sun, 23 Nov 2014 14:30:00 GMT</pubDate>
            <description><![CDATA[port.postMessage(data);
  };
  reader.readAsBinaryString(blob);
};]]></description>
        </item>
        <item>
            <title><![CDATA[计算机中的字节序问题]]></title>
            <link>https://blog.icehoney.me/posts/2014-09-30-computer-endian/</link>
            <guid>https://blog.icehoney.me/posts/2014-09-30-computer-endian/</guid>
            <pubDate>Tue, 30 Sep 2014 12:30:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[chrome扩展开发经验记录]]></title>
            <link>https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/</link>
            <guid>https://blog.icehoney.me/posts/2014-08-23-chrome-extension-develop/</guid>
            <pubDate>Sat, 23 Aug 2014 16:01:00 GMT</pubDate>
            <description><![CDATA[最近写了两个 chrome 扩展.看了不少 chrome 扩展开发的文档.觉得还是写点东西比较好.]]></description>
        </item>
        <item>
            <title><![CDATA[Linux下恢复误删除的文件]]></title>
            <link>https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/</link>
            <guid>https://blog.icehoney.me/posts/2014-07-21-linux-undelete-files/</guid>
            <pubDate>Mon, 21 Jul 2014 17:39:00 GMT</pubDate>
            <description><![CDATA[于是我便寻找恢复文件的相关资料.]]></description>
        </item>
        <item>
            <title><![CDATA[百度网盘新版API]]></title>
            <link>https://blog.icehoney.me/posts/2014-07-02-baidu-pan/</link>
            <guid>https://blog.icehoney.me/posts/2014-07-02-baidu-pan/</guid>
            <pubDate>Wed, 02 Jul 2014 14:09:00 GMT</pubDate>
            <description><![CDATA[于是我又苦苦寻找新版的 JS 到底是怎么实现下载的,虽说可以直接操纵 DOM 获取选中的文件的 fs_id 信息
然后 POST 数据获取 dlink(下载地址),但是这样怎么也不够优雅啊...因为百度自己的 JS 肯定实现了这部分内容
于是我便花了更多的时间找 API,但是百度那既压缩又混淆的 JS 代码真是读起来特带劲啊(我绝对不是抖 M)]]></description>
        </item>
        <item>
            <title><![CDATA[Archlinux下声卡的设置与折腾]]></title>
            <link>https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/</link>
            <guid>https://blog.icehoney.me/posts/2014-06-05-archlinux-sound-setting/</guid>
            <pubDate>Thu, 05 Jun 2014 09:22:00 GMT</pubDate>
            <description><![CDATA[Subdevices: 1/1
  Subdevice #0: subdevice #0
card 1: PCH [HDA Intel PCH], device 0: ALC3220 Analog [ALC3220 Analog]
  Subdevices: 1/1
  Subdevice #0: subdevice #0
`]]></description>
            <enclosure url="https://blog.icehoney.me/~@assets/alsamixer.png">
            </enclosure>
        </item>
        <item>
            <title><![CDATA[JavaScript中一个经典的正则例子]]></title>
            <link>https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/</link>
            <guid>https://blog.icehoney.me/posts/2014-05-08-javascript-regular-expressions/</guid>
            <pubDate>Thu, 08 May 2014 09:44:00 GMT</pubDate>
            <description><![CDATA[}
`]]></description>
        </item>
        <item>
            <title><![CDATA[JavaScript函数中的闭包]]></title>
            <link>https://blog.icehoney.me/posts/2014-04-30-javascript-closure/</link>
            <guid>https://blog.icehoney.me/posts/2014-04-30-javascript-closure/</guid>
            <pubDate>Wed, 30 Apr 2014 16:18:00 GMT</pubDate>
            <description><![CDATA[举例来说,假定我们想要给 String 增加一个 deentityify 方法.它的任务是寻找字符串中的 HTML 字符实体并把它们替换为对应的字符.
这就需要在一个对象中保存字符实体的名字和它们对应的字符.但我们该在哪里保存这个对象呢?我们可以把它放到一个全局变量中,
但全局变量是魔鬼.我们可以把它定义在该函数的内部,但是那会带来运行时的损耗,因为每次执行该函数的时候该字面量都会被求值一次.
理想的方式就是使用闭包实现.]]></description>
        </item>
        <item>
            <title><![CDATA[JavaScript函数调用的四种方式]]></title>
            <link>https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/</link>
            <guid>https://blog.icehoney.me/posts/2014-04-24-invocation-four-method/</guid>
            <pubDate>Thu, 24 Apr 2014 15:28:00 GMT</pubDate>
            <description><![CDATA[使得函数可以对 this 高度复用.通过 this 可取得他们所属对象的上下文的方法成为公共方法(public method).]]></description>
        </item>
        <item>
            <title><![CDATA[Archlinux折腾笔记]]></title>
            <link>https://blog.icehoney.me/posts/2014-04-20-linux-notes/</link>
            <guid>https://blog.icehoney.me/posts/2014-04-20-linux-notes/</guid>
            <pubDate>Sun, 20 Apr 2014 19:52:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[面试笔记]]></title>
            <link>https://blog.icehoney.me/posts/2014-04-01-interview/</link>
            <guid>https://blog.icehoney.me/posts/2014-04-01-interview/</guid>
            <pubDate>Tue, 01 Apr 2014 19:20:00 GMT</pubDate>
            <description><![CDATA[三月下旬,病还没有完全康复.我便赶往上海.只因为认识的一位菊苣帮我投递了一下简历.而且据说人家对我简历印象还不错.
现在想想,自己还真是幼稚...这句话就像你问店里员工我的菜怎么还没上,人家一定会回答:马上就好了,都已经下锅了.
刚刚抵达上海的时候已经是晚上,这是我人生第一次去上海,有种乡下人进城里的感觉.带着梦想与希望,来到了这个地方.]]></description>
        </item>
        <item>
            <title><![CDATA[GUI和CLI的使用比较]]></title>
            <link>https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/</link>
            <guid>https://blog.icehoney.me/posts/2014-01-18-gui-vs-cli/</guid>
            <pubDate>Sat, 18 Jan 2014 23:06:00 GMT</pubDate>
            <description><![CDATA[把他们组合在一起.在 shell 下,你可以启动应用、调试器、浏览器、编辑器以及各种实用程序.你可以搜索文件、查询系统状态、过滤输出.
通过对 shell 进行编程,你可以构建复杂的宏命令,用来完成你经常进行的各种活动.在 shell 下面,可以高效率的处理事务,并且 shell 可以完成
在 GUI 下几乎所有的任务.GUI 和 IDE 会让程序员变得更懒,更无知,各种辅助工具,例如自动补全可能让某些程序员连 asynchronous 这个单词都无法完整的拼写出来.]]></description>
        </item>
        <item>
            <title><![CDATA[程序员修炼之道]]></title>
            <link>https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/</link>
            <guid>https://blog.icehoney.me/posts/2014-02-05-the-pragmatic-programmer/</guid>
            <pubDate>Wed, 05 Feb 2014 17:18:00 GMT</pubDate>
            <description><![CDATA[本书的涉猎范围很广,也有很多专业名词.每个章节都可以延展出很多内容.我不认为这是一本只需读一遍的书.在每个编程阶段去读这本书都会有不同的感受.
这本书我肯定会珍藏,以后也会反复读的.这是一本程序员必须读的书,希望大家可以耐心的读一下这本书.]]></description>
        </item>
        <item>
            <title><![CDATA[关于程序运行效率的一点见解]]></title>
            <link>https://blog.icehoney.me/posts/2013-10-24-program-efficiency/</link>
            <guid>https://blog.icehoney.me/posts/2013-10-24-program-efficiency/</guid>
            <pubDate>Thu, 24 Oct 2013 23:06:00 GMT</pubDate>
            <description><![CDATA[数组都用矩阵来表示,但是实际储存的时候一般都是按照行优先的方式储存的.我的这个版本是先行遍历再列遍历的.]]></description>
        </item>
        <item>
            <title><![CDATA[漫无止境的三月]]></title>
            <link>https://blog.icehoney.me/posts/2014-03-08-long-march/</link>
            <guid>https://blog.icehoney.me/posts/2014-03-08-long-march/</guid>
            <pubDate>Sat, 08 Mar 2014 12:03:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Archlinux下有关无损音乐的折腾]]></title>
            <link>https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/</link>
            <guid>https://blog.icehoney.me/posts/2013-10-06-archlinux-ape-cue-splitting/</guid>
            <pubDate>Sun, 06 Oct 2013 23:29:00 GMT</pubDate>
            <description><![CDATA[但是,有个明显的缺陷是分轨之后的文件居然不是用歌曲名字命名的!
而且还是我不怎么喜欢的 wav 格式...
不过我还是在菊苣的帮助下找到了完美的解决方案~]]></description>
        </item>
        <item>
            <title><![CDATA[Archlinux下使用airbase和dhcpd建立虚拟AP]]></title>
            <link>https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/</link>
            <guid>https://blog.icehoney.me/posts/2013-08-26-archlinux-airbase-create-fakeap/</guid>
            <pubDate>Mon, 26 Aug 2013 21:29:00 GMT</pubDate>
            <description><![CDATA[`]]></description>
        </item>
        <item>
            <title><![CDATA[Archlinux下Galaxy Nexus刷机并root]]></title>
            <link>https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/</link>
            <guid>https://blog.icehoney.me/posts/2013-07-20-archlinux-flash-android/</guid>
            <pubDate>Sat, 20 Jul 2013 14:12:00 GMT</pubDate>
            <description><![CDATA[前面提供的 wiki 已经很详细的讲述如何进行ADB 的配置了]]></description>
        </item>
        <item>
            <title><![CDATA[Ubuntu下apache2的配置记录]]></title>
            <link>https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/</link>
            <guid>https://blog.icehoney.me/posts/2013-06-06-ubuntu-config-apache2/</guid>
            <pubDate>Thu, 06 Jun 2013 21:41:00 GMT</pubDate>
            <description><![CDATA[这个目录是主要储存配置文件的地方 配置文件以 000-default 000-default-ssl 这种命名方式进行命名.
这两个文件是对 http 和 https 进行默认配置.下面我们来看看这两个默认配置
vim 000-default]]></description>
        </item>
        <item>
            <title><![CDATA[Archlinux下终端进行代理的解决方案]]></title>
            <link>https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/</link>
            <guid>https://blog.icehoney.me/posts/2013-07-18-archlinux-terminal-proxy/</guid>
            <pubDate>Thu, 18 Jul 2013 22:05:00 GMT</pubDate>
            <description><![CDATA[转发实现之后就可以应用在终端里面了,
在终端里面输入]]></description>
        </item>
        <item>
            <title><![CDATA[Sublime使用笔记以及插件推荐]]></title>
            <link>https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/</link>
            <guid>https://blog.icehoney.me/posts/2013-07-02-sublime-text2-plugins/</guid>
            <pubDate>Tue, 02 Jul 2013 22:06:00 GMT</pubDate>
            <description><![CDATA[`]]></description>
        </item>
        <item>
            <title><![CDATA[个人博客的建立]]></title>
            <link>https://blog.icehoney.me/posts/2013-02-07-start-blog/</link>
            <guid>https://blog.icehoney.me/posts/2013-02-07-start-blog/</guid>
            <pubDate>Thu, 07 Feb 2013 22:07:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[使用GRUB2引导ISO镜像]]></title>
            <link>https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/</link>
            <guid>https://blog.icehoney.me/posts/2013-04-25-grub2-boot-from-iso/</guid>
            <pubDate>Thu, 25 Apr 2013 21:17:00 GMT</pubDate>
            <description><![CDATA[首先来说下什么是 GRUB,熟悉 Linux 的同学都应该知道的说.它是一个多重操作系统启动管理器。用来引导不同系统，如 windows，linux。
GRUB2 就是 GRUB 的下一个版本.首先说下 GRUB 的作用吧,当你按下电脑上的电源按钮的时候,这时候电脑会开始加载 BIOS,BIOS 首先检查计算机硬件
能否满足运行的基本条件,这叫做"硬件自检"（Power-On Self-Test）.自检完成之后,BIOS 就会把系统控制权转交给下一阶段的启动程序,一般情况下
都会是硬盘,由硬盘启动时，BIOS 通常是转向第一块硬盘的第一个扇区，即主引导记录(MBR).]]></description>
        </item>
        <item>
            <title><![CDATA[安徽师范大学校园视频下载器2.0版本发布]]></title>
            <link>https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/</link>
            <guid>https://blog.icehoney.me/posts/2013-03-15-ahnu-video-downloader/</guid>
            <pubDate>Fri, 15 Mar 2013 15:30:00 GMT</pubDate>
            <description><![CDATA[视频资源和视频的 ID,然后通过一步步的研究直接找到了资源的下载地址.详细的原理请看我 github 上公开的VideoSeach
里面的 Function.cs 记录了具体解析过程.]]></description>
        </item>
        <item>
            <title><![CDATA[关于CSS解决高度自适应和宽度自适应的问题]]></title>
            <link>https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/</link>
            <guid>https://blog.icehoney.me/posts/2013-03-10-css-adapt-width-and-height/</guid>
            <pubDate>Sun, 10 Mar 2013 19:09:00 GMT</pubDate>
        </item>
    </channel>
</rss>